!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports):"function"==typeof define&&define.amd?define(["exports"],t):t((e="undefined"!=typeof globalThis?globalThis:e||self).THREE={})}(this,function(e){"use strict";var t="129";const j=0,X=1,q=2;const S=1,b=2,A=3,R=0,Y=1,Z=2;const J=0,K=1,Q=2,$=3,ee=4,te=5,re=100,ne=101,ie=102,ae=103,se=104,oe=200,le=201,he=202,ce=203,ue=204,de=205,pe=206,me=207,fe=208,ge=209,ve=210,ye=0,xe=1,_e=2,Me=3,we=4,be=5,Ee=6,Te=7,E=0,T=1,L=2,Re=0,C=1,P=2,I=3,D=4,N=5,F=301,B=302,l=303,h=304,U=306,O=307,z=1e3,Le=1001,H=1002,Ce=1003,G=1004;const V=1005;const k=1006,W=1007;const Pe=1008;const Ie=1009,a=1010,s=1011,Se=1012,o=1013,Ae=1014,De=1015,Ne=1016,c=1017,u=1018,d=1019,Fe=1020,p=1021,Be=1022,Ue=1023,m=1024,f=1025,n=Ue,Oe=1026,ze=1027,g=1028,v=1029,y=1030,x=1031,_=1032,M=1033,w=33776,He=33777,Ge=33778,Ve=33779,ke=35840,We=35841,je=35842,Xe=35843,qe=36196,Ye=37492,Ze=37496,Je=37808,Ke=37809,Qe=37810,$e=37811,et=37812,tt=37813,rt=37814,nt=37815,it=37816,at=37817,st=37818,ot=37819,lt=37820,ht=37821,ct=36492,ut=37840,dt=37841,pt=37842,mt=37843,ft=37844,gt=37845,vt=37846,yt=37847,xt=37848,_t=37849,Mt=37850,wt=37851,bt=37852,Et=37853,i=2300,Tt=2301,St=2400,At=2401,Rt=2402;const Lt=3e3,Ct=3001,Pt=3007,It=3002,r=3003,Dt=3004,Nt=3005,Ft=3006,Bt=3201,Ut=0,Ot=1;const zt=35044,Ht=35048;const Gt="300 es";class Vt{addEventListener(e,t){void 0===this._listeners&&(this._listeners={});const r=this._listeners;void 0===r[e]&&(r[e]=[]),-1===r[e].indexOf(t)&&r[e].push(t)}hasEventListener(e,t){if(void 0===this._listeners)return!1;const r=this._listeners;return void 0!==r[e]&&-1!==r[e].indexOf(t)}removeEventListener(e,t){if(void 0!==this._listeners){const r=this._listeners[e];void 0===r||-1!==(t=r.indexOf(t))&&r.splice(t,1)}}dispatchEvent(r){if(void 0!==this._listeners){const e=this._listeners[r.type];if(void 0!==e){r.target=this;const n=e.slice(0);for(let e=0,t=n.length;e<t;e++)n[e].call(this,r);r.target=null}}}}const kt=[];for(let e=0;e<256;e++)kt[e]=(e<16?"0":"")+e.toString(16);let Wt=1234567;const jt=Math.PI/180,Xt=180/Math.PI;function qt(){var e=4294967295*Math.random()|0,t=4294967295*Math.random()|0,r=4294967295*Math.random()|0,n=4294967295*Math.random()|0;const i=kt[255&e]+kt[e>>8&255]+kt[e>>16&255]+kt[e>>24&255]+"-"+kt[255&t]+kt[t>>8&255]+"-"+kt[t>>16&15|64]+kt[t>>24&255]+"-"+kt[63&r|128]+kt[r>>8&255]+"-"+kt[r>>16&255]+kt[r>>24&255]+kt[255&n]+kt[n>>8&255]+kt[n>>16&255]+kt[n>>24&255];return i.toUpperCase()}function Yt(e,t,r){return Math.max(t,Math.min(r,e))}function Zt(e,t){return(e%t+t)%t}function Jt(e,t,r){return(1-r)*e+r*t}function Kt(e){return 0==(e&e-1)&&0!==e}function Qt(e){return Math.pow(2,Math.ceil(Math.log(e)/Math.LN2))}function $t(e){return Math.pow(2,Math.floor(Math.log(e)/Math.LN2))}var er=Object.freeze({__proto__:null,DEG2RAD:jt,RAD2DEG:Xt,generateUUID:qt,clamp:Yt,euclideanModulo:Zt,mapLinear:function(e,t,r,n,i){return n+(e-t)*(i-n)/(r-t)},inverseLerp:function(e,t,r){return e!==t?(r-e)/(t-e):0},lerp:Jt,damp:function(e,t,r,n){return Jt(e,t,1-Math.exp(-r*n))},pingpong:function(e,t=1){return t-Math.abs(Zt(e,2*t)-t)},smoothstep:function(e,t,r){return e<=t?0:r<=e?1:(e=(e-t)/(r-t))*e*(3-2*e)},smootherstep:function(e,t,r){return e<=t?0:r<=e?1:(e=(e-t)/(r-t))*e*e*(e*(6*e-15)+10)},randInt:function(e,t){return e+Math.floor(Math.random()*(t-e+1))},randFloat:function(e,t){return e+Math.random()*(t-e)},randFloatSpread:function(e){return e*(.5-Math.random())},seededRandom:function(e){return void 0!==e&&(Wt=e%2147483647),Wt=16807*Wt%2147483647,(Wt-1)/2147483646},degToRad:function(e){return e*jt},radToDeg:function(e){return e*Xt},isPowerOfTwo:Kt,ceilPowerOfTwo:Qt,floorPowerOfTwo:$t,setQuaternionFromProperEuler:function(e,t,r,n,i){const a=Math.cos,s=Math.sin;var o=a(r/2),l=s(r/2),h=a((t+n)/2),c=s((t+n)/2),u=a((t-n)/2),d=s((t-n)/2),p=a((n-t)/2),m=s((n-t)/2);switch(i){case"XYX":e.set(o*c,l*u,l*d,o*h);break;case"YZY":e.set(l*d,o*c,l*u,o*h);break;case"ZXZ":e.set(l*u,l*d,o*c,o*h);break;case"XZX":e.set(o*c,l*m,l*p,o*h);break;case"YXY":e.set(l*p,o*c,l*m,o*h);break;case"ZYZ":e.set(l*m,l*p,o*c,o*h);break;default:console.warn("THREE.MathUtils: .setQuaternionFromProperEuler() encountered an unknown order: "+i)}}});class tr{constructor(e=0,t=0){this.x=e,this.y=t}get width(){return this.x}set width(e){this.x=e}get height(){return this.y}set height(e){this.y=e}set(e,t){return this.x=e,this.y=t,this}setScalar(e){return this.x=e,this.y=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y)}copy(e){return this.x=e.x,this.y=e.y,this}add(e,t){return void 0!==t?(console.warn("THREE.Vector2: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(e,t)):(this.x+=e.x,this.y+=e.y,this)}addScalar(e){return this.x+=e,this.y+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this}sub(e,t){return void 0!==t?(console.warn("THREE.Vector2: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(e,t)):(this.x-=e.x,this.y-=e.y,this)}subScalar(e){return this.x-=e,this.y-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this}multiply(e){return this.x*=e.x,this.y*=e.y,this}multiplyScalar(e){return this.x*=e,this.y*=e,this}divide(e){return this.x/=e.x,this.y/=e.y,this}divideScalar(e){return this.multiplyScalar(1/e)}applyMatrix3(e){var t=this.x,r=this.y,e=e.elements;return this.x=e[0]*t+e[3]*r+e[6],this.y=e[1]*t+e[4]*r+e[7],this}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this}clamp(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this}clampScalar(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this}clampLength(e,t){var r=this.length();return this.divideScalar(r||1).multiplyScalar(Math.max(e,Math.min(t,r)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this}negate(){return this.x=-this.x,this.y=-this.y,this}dot(e){return this.x*e.x+this.y*e.y}cross(e){return this.x*e.y-this.y*e.x}lengthSq(){return this.x*this.x+this.y*this.y}length(){return Math.sqrt(this.x*this.x+this.y*this.y)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)}normalize(){return this.divideScalar(this.length()||1)}angle(){return Math.atan2(-this.y,-this.x)+Math.PI}distanceTo(e){return Math.sqrt(this.distanceToSquared(e))}distanceToSquared(e){var t=this.x-e.x,e=this.y-e.y;return t*t+e*e}manhattanDistanceTo(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this}lerpVectors(e,t,r){return this.x=e.x+(t.x-e.x)*r,this.y=e.y+(t.y-e.y)*r,this}equals(e){return e.x===this.x&&e.y===this.y}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e}fromBufferAttribute(e,t,r){return void 0!==r&&console.warn("THREE.Vector2: offset has been removed from .fromBufferAttribute()."),this.x=e.getX(t),this.y=e.getY(t),this}rotateAround(e,t){var r=Math.cos(t),n=Math.sin(t),i=this.x-e.x,t=this.y-e.y;return this.x=i*r-t*n+e.x,this.y=i*n+t*r+e.y,this}random(){return this.x=Math.random(),this.y=Math.random(),this}}tr.prototype.isVector2=!0;class rr{constructor(){this.elements=[1,0,0,0,1,0,0,0,1],0<arguments.length&&console.error("THREE.Matrix3: the constructor no longer reads arguments. use .set() instead.")}set(e,t,r,n,i,a,s,o,l){const h=this.elements;return h[0]=e,h[1]=n,h[2]=s,h[3]=t,h[4]=i,h[5]=o,h[6]=r,h[7]=a,h[8]=l,this}identity(){return this.set(1,0,0,0,1,0,0,0,1),this}copy(e){const t=this.elements;e=e.elements;return t[0]=e[0],t[1]=e[1],t[2]=e[2],t[3]=e[3],t[4]=e[4],t[5]=e[5],t[6]=e[6],t[7]=e[7],t[8]=e[8],this}extractBasis(e,t,r){return e.setFromMatrix3Column(this,0),t.setFromMatrix3Column(this,1),r.setFromMatrix3Column(this,2),this}setFromMatrix4(e){e=e.elements;return this.set(e[0],e[4],e[8],e[1],e[5],e[9],e[2],e[6],e[10]),this}multiply(e){return this.multiplyMatrices(this,e)}premultiply(e){return this.multiplyMatrices(e,this)}multiplyMatrices(e,t){var r=e.elements,n=t.elements;const i=this.elements;var a=r[0],s=r[3],o=r[6],l=r[1],h=r[4],c=r[7],u=r[2],d=r[5],p=r[8],m=n[0],f=n[3],g=n[6],v=n[1],y=n[4],e=n[7],t=n[2],r=n[5],n=n[8];return i[0]=a*m+s*v+o*t,i[3]=a*f+s*y+o*r,i[6]=a*g+s*e+o*n,i[1]=l*m+h*v+c*t,i[4]=l*f+h*y+c*r,i[7]=l*g+h*e+c*n,i[2]=u*m+d*v+p*t,i[5]=u*f+d*y+p*r,i[8]=u*g+d*e+p*n,this}multiplyScalar(e){const t=this.elements;return t[0]*=e,t[3]*=e,t[6]*=e,t[1]*=e,t[4]*=e,t[7]*=e,t[2]*=e,t[5]*=e,t[8]*=e,this}determinant(){var e=this.elements,t=e[0],r=e[1],n=e[2],i=e[3],a=e[4],s=e[5],o=e[6],l=e[7],e=e[8];return t*a*e-t*s*l-r*i*e+r*s*o+n*i*l-n*a*o}invert(){const e=this.elements,t=e[0],r=e[1],n=e[2],i=e[3],a=e[4],s=e[5],o=e[6],l=e[7],h=e[8],c=h*a-s*l,u=s*o-h*i,d=l*i-a*o,p=t*c+r*u+n*d;if(0==p)return this.set(0,0,0,0,0,0,0,0,0);var m=1/p;return e[0]=c*m,e[1]=(n*l-h*r)*m,e[2]=(s*r-n*a)*m,e[3]=u*m,e[4]=(h*t-n*o)*m,e[5]=(n*i-s*t)*m,e[6]=d*m,e[7]=(r*o-l*t)*m,e[8]=(a*t-r*i)*m,this}transpose(){var e;const t=this.elements;return e=t[1],t[1]=t[3],t[3]=e,e=t[2],t[2]=t[6],t[6]=e,e=t[5],t[5]=t[7],t[7]=e,this}getNormalMatrix(e){return this.setFromMatrix4(e).invert().transpose()}transposeIntoArray(e){var t=this.elements;return e[0]=t[0],e[1]=t[3],e[2]=t[6],e[3]=t[1],e[4]=t[4],e[5]=t[7],e[6]=t[2],e[7]=t[5],e[8]=t[8],this}setUvTransform(e,t,r,n,i,a,s){var o=Math.cos(i),i=Math.sin(i);return this.set(r*o,r*i,-r*(o*a+i*s)+a+e,-n*i,n*o,-n*(-i*a+o*s)+s+t,0,0,1),this}scale(e,t){const r=this.elements;return r[0]*=e,r[3]*=e,r[6]*=e,r[1]*=t,r[4]*=t,r[7]*=t,this}rotate(e){var t=Math.cos(e),r=Math.sin(e);const n=this.elements;var i=n[0],a=n[3],s=n[6],o=n[1],l=n[4],e=n[7];return n[0]=t*i+r*o,n[3]=t*a+r*l,n[6]=t*s+r*e,n[1]=-r*i+t*o,n[4]=-r*a+t*l,n[7]=-r*s+t*e,this}translate(e,t){const r=this.elements;return r[0]+=e*r[2],r[3]+=e*r[5],r[6]+=e*r[8],r[1]+=t*r[2],r[4]+=t*r[5],r[7]+=t*r[8],this}equals(e){var t=this.elements,r=e.elements;for(let e=0;e<9;e++)if(t[e]!==r[e])return!1;return!0}fromArray(t,r=0){for(let e=0;e<9;e++)this.elements[e]=t[e+r];return this}toArray(e=[],t=0){var r=this.elements;return e[t]=r[0],e[t+1]=r[1],e[t+2]=r[2],e[t+3]=r[3],e[t+4]=r[4],e[t+5]=r[5],e[t+6]=r[6],e[t+7]=r[7],e[t+8]=r[8],e}clone(){return(new this.constructor).fromArray(this.elements)}}rr.prototype.isMatrix3=!0;let nr;class ir{static getDataURL(e){if(/^data:/i.test(e.src))return e.src;if("undefined"==typeof HTMLCanvasElement)return e.src;let t;if(e instanceof HTMLCanvasElement)t=e;else{void 0===nr&&(nr=document.createElementNS("http://www.w3.org/1999/xhtml","canvas")),nr.width=e.width,nr.height=e.height;const r=nr.getContext("2d");e instanceof ImageData?r.putImageData(e,0,0):r.drawImage(e,0,0,e.width,e.height),t=nr}return 2048<t.width||2048<t.height?(console.warn("THREE.ImageUtils.getDataURL: Image converted to jpg for performance reasons",e),t.toDataURL("image/jpeg",.6)):t.toDataURL("image/png")}}let ar=0;class sr extends Vt{constructor(e=sr.DEFAULT_IMAGE,t=sr.DEFAULT_MAPPING,r=Le,n=Le,i=k,a=Pe,s=Ue,o=Ie,l=1,h=Lt){super(),Object.defineProperty(this,"id",{value:ar++}),this.uuid=qt(),this.name="",this.image=e,this.mipmaps=[],this.mapping=t,this.wrapS=r,this.wrapT=n,this.magFilter=i,this.minFilter=a,this.anisotropy=l,this.format=s,this.internalFormat=null,this.type=o,this.offset=new tr(0,0),this.repeat=new tr(1,1),this.center=new tr(0,0),this.rotation=0,this.matrixAutoUpdate=!0,this.matrix=new rr,this.generateMipmaps=!0,this.premultiplyAlpha=!1,this.flipY=!0,this.unpackAlignment=4,this.encoding=h,this.version=0,this.onUpdate=null}updateMatrix(){this.matrix.setUvTransform(this.offset.x,this.offset.y,this.repeat.x,this.repeat.y,this.rotation,this.center.x,this.center.y)}clone(){return(new this.constructor).copy(this)}copy(e){return this.name=e.name,this.image=e.image,this.mipmaps=e.mipmaps.slice(0),this.mapping=e.mapping,this.wrapS=e.wrapS,this.wrapT=e.wrapT,this.magFilter=e.magFilter,this.minFilter=e.minFilter,this.anisotropy=e.anisotropy,this.format=e.format,this.internalFormat=e.internalFormat,this.type=e.type,this.offset.copy(e.offset),this.repeat.copy(e.repeat),this.center.copy(e.center),this.rotation=e.rotation,this.matrixAutoUpdate=e.matrixAutoUpdate,this.matrix.copy(e.matrix),this.generateMipmaps=e.generateMipmaps,this.premultiplyAlpha=e.premultiplyAlpha,this.flipY=e.flipY,this.unpackAlignment=e.unpackAlignment,this.encoding=e.encoding,this}toJSON(e){var t=void 0===e||"string"==typeof e;if(!t&&void 0!==e.textures[this.uuid])return e.textures[this.uuid];const r={metadata:{version:4.5,type:"Texture",generator:"Texture.toJSON"},uuid:this.uuid,name:this.name,mapping:this.mapping,repeat:[this.repeat.x,this.repeat.y],offset:[this.offset.x,this.offset.y],center:[this.center.x,this.center.y],rotation:this.rotation,wrap:[this.wrapS,this.wrapT],format:this.format,type:this.type,encoding:this.encoding,minFilter:this.minFilter,magFilter:this.magFilter,anisotropy:this.anisotropy,flipY:this.flipY,premultiplyAlpha:this.premultiplyAlpha,unpackAlignment:this.unpackAlignment};if(void 0!==this.image){const n=this.image;if(void 0===n.uuid&&(n.uuid=qt()),!t&&void 0===e.images[n.uuid]){let r;if(Array.isArray(n)){r=[];for(let e=0,t=n.length;e<t;e++)n[e].isDataTexture?r.push(or(n[e].image)):r.push(or(n[e]))}else r=or(n);e.images[n.uuid]={uuid:n.uuid,url:r}}r.image=n.uuid}return t||(e.textures[this.uuid]=r),r}dispose(){this.dispatchEvent({type:"dispose"})}transformUv(e){if(300!==this.mapping)return e;if(e.applyMatrix3(this.matrix),e.x<0||1<e.x)switch(this.wrapS){case z:e.x=e.x-Math.floor(e.x);break;case Le:e.x=e.x<0?0:1;break;case H:1===Math.abs(Math.floor(e.x)%2)?e.x=Math.ceil(e.x)-e.x:e.x=e.x-Math.floor(e.x)}if(e.y<0||1<e.y)switch(this.wrapT){case z:e.y=e.y-Math.floor(e.y);break;case Le:e.y=e.y<0?0:1;break;case H:1===Math.abs(Math.floor(e.y)%2)?e.y=Math.ceil(e.y)-e.y:e.y=e.y-Math.floor(e.y)}return this.flipY&&(e.y=1-e.y),e}set needsUpdate(e){!0===e&&this.version++}}function or(e){return"undefined"!=typeof HTMLImageElement&&e instanceof HTMLImageElement||"undefined"!=typeof HTMLCanvasElement&&e instanceof HTMLCanvasElement||"undefined"!=typeof ImageBitmap&&e instanceof ImageBitmap?ir.getDataURL(e):e.data?{data:Array.prototype.slice.call(e.data),width:e.width,height:e.height,type:e.data.constructor.name}:(console.warn("THREE.Texture: Unable to serialize Texture."),{})}sr.DEFAULT_IMAGE=void 0,sr.DEFAULT_MAPPING=300,sr.prototype.isTexture=!0;class lr{constructor(e=0,t=0,r=0,n=1){this.x=e,this.y=t,this.z=r,this.w=n}get width(){return this.z}set width(e){this.z=e}get height(){return this.w}set height(e){this.w=e}set(e,t,r,n){return this.x=e,this.y=t,this.z=r,this.w=n,this}setScalar(e){return this.x=e,this.y=e,this.z=e,this.w=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setZ(e){return this.z=e,this}setW(e){return this.w=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;case 3:this.w=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y,this.z,this.w)}copy(e){return this.x=e.x,this.y=e.y,this.z=e.z,this.w=void 0!==e.w?e.w:1,this}add(e,t){return void 0!==t?(console.warn("THREE.Vector4: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(e,t)):(this.x+=e.x,this.y+=e.y,this.z+=e.z,this.w+=e.w,this)}addScalar(e){return this.x+=e,this.y+=e,this.z+=e,this.w+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this.w=e.w+t.w,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this.z+=e.z*t,this.w+=e.w*t,this}sub(e,t){return void 0!==t?(console.warn("THREE.Vector4: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(e,t)):(this.x-=e.x,this.y-=e.y,this.z-=e.z,this.w-=e.w,this)}subScalar(e){return this.x-=e,this.y-=e,this.z-=e,this.w-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this.w=e.w-t.w,this}multiply(e){return this.x*=e.x,this.y*=e.y,this.z*=e.z,this.w*=e.w,this}multiplyScalar(e){return this.x*=e,this.y*=e,this.z*=e,this.w*=e,this}applyMatrix4(e){var t=this.x,r=this.y,n=this.z,i=this.w,e=e.elements;return this.x=e[0]*t+e[4]*r+e[8]*n+e[12]*i,this.y=e[1]*t+e[5]*r+e[9]*n+e[13]*i,this.z=e[2]*t+e[6]*r+e[10]*n+e[14]*i,this.w=e[3]*t+e[7]*r+e[11]*n+e[15]*i,this}divideScalar(e){return this.multiplyScalar(1/e)}setAxisAngleFromQuaternion(e){this.w=2*Math.acos(e.w);var t=Math.sqrt(1-e.w*e.w);return t<1e-4?(this.x=1,this.y=0,this.z=0):(this.x=e.x/t,this.y=e.y/t,this.z=e.z/t),this}setAxisAngleFromRotationMatrix(e){let t,r,n,i;var a=e.elements,s=a[0],o=a[4],l=a[8],h=a[1],c=a[5],u=a[9],d=a[2],p=a[6],m=a[10];if(Math.abs(o-h)<.01&&Math.abs(l-d)<.01&&Math.abs(u-p)<.01){if(Math.abs(o+h)<.1&&Math.abs(l+d)<.1&&Math.abs(u+p)<.1&&Math.abs(s+c+m-3)<.1)return this.set(1,0,0,0),this;t=Math.PI;var f=(s+1)/2,g=(c+1)/2,v=(m+1)/2,y=(o+h)/4,e=(l+d)/4,a=(u+p)/4;return g<f&&v<f?i=f<.01?(r=0,n=.707106781):(r=Math.sqrt(f),n=y/r,e/r):v<g?i=g<.01?(r=.707106781,n=0,.707106781):(n=Math.sqrt(g),r=y/n,a/n):v<.01?(r=.707106781,n=.707106781,i=0):(i=Math.sqrt(v),r=e/i,n=a/i),this.set(r,n,i,t),this}let x=Math.sqrt((p-u)*(p-u)+(l-d)*(l-d)+(h-o)*(h-o));return Math.abs(x)<.001&&(x=1),this.x=(p-u)/x,this.y=(l-d)/x,this.z=(h-o)/x,this.w=Math.acos((s+c+m-1)/2),this}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this.w=Math.min(this.w,e.w),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this.w=Math.max(this.w,e.w),this}clamp(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this.z=Math.max(e.z,Math.min(t.z,this.z)),this.w=Math.max(e.w,Math.min(t.w,this.w)),this}clampScalar(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this.z=Math.max(e,Math.min(t,this.z)),this.w=Math.max(e,Math.min(t,this.w)),this}clampLength(e,t){var r=this.length();return this.divideScalar(r||1).multiplyScalar(Math.max(e,Math.min(t,r)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this.w=Math.floor(this.w),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this.w=Math.ceil(this.w),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this.w=Math.round(this.w),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this.w=this.w<0?Math.ceil(this.w):Math.floor(this.w),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this.w=-this.w,this}dot(e){return this.x*e.x+this.y*e.y+this.z*e.z+this.w*e.w}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)}normalize(){return this.divideScalar(this.length()||1)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this.w+=(e.w-this.w)*t,this}lerpVectors(e,t,r){return this.x=e.x+(t.x-e.x)*r,this.y=e.y+(t.y-e.y)*r,this.z=e.z+(t.z-e.z)*r,this.w=e.w+(t.w-e.w)*r,this}equals(e){return e.x===this.x&&e.y===this.y&&e.z===this.z&&e.w===this.w}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this.z=e[t+2],this.w=e[t+3],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e[t+2]=this.z,e[t+3]=this.w,e}fromBufferAttribute(e,t,r){return void 0!==r&&console.warn("THREE.Vector4: offset has been removed from .fromBufferAttribute()."),this.x=e.getX(t),this.y=e.getY(t),this.z=e.getZ(t),this.w=e.getW(t),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this.w=Math.random(),this}}lr.prototype.isVector4=!0;class hr extends Vt{constructor(e,t,r){super(),this.width=e,this.height=t,this.depth=1,this.scissor=new lr(0,0,e,t),this.scissorTest=!1,this.viewport=new lr(0,0,e,t),r=r||{},this.texture=new sr(void 0,r.mapping,r.wrapS,r.wrapT,r.magFilter,r.minFilter,r.format,r.type,r.anisotropy,r.encoding),this.texture.image={},this.texture.image.width=e,this.texture.image.height=t,this.texture.image.depth=1,this.texture.generateMipmaps=void 0!==r.generateMipmaps&&r.generateMipmaps,this.texture.minFilter=void 0!==r.minFilter?r.minFilter:k,this.depthBuffer=void 0===r.depthBuffer||r.depthBuffer,this.stencilBuffer=void 0!==r.stencilBuffer&&r.stencilBuffer,this.depthTexture=void 0!==r.depthTexture?r.depthTexture:null}setTexture(e){e.image={width:this.width,height:this.height,depth:this.depth},this.texture=e}setSize(e,t,r=1){this.width===e&&this.height===t&&this.depth===r||(this.width=e,this.height=t,this.depth=r,this.texture.image.width=e,this.texture.image.height=t,this.texture.image.depth=r,this.dispose()),this.viewport.set(0,0,e,t),this.scissor.set(0,0,e,t)}clone(){return(new this.constructor).copy(this)}copy(e){return this.width=e.width,this.height=e.height,this.depth=e.depth,this.viewport.copy(e.viewport),this.texture=e.texture.clone(),this.texture.image={...this.texture.image},this.depthBuffer=e.depthBuffer,this.stencilBuffer=e.stencilBuffer,this.depthTexture=e.depthTexture,this}dispose(){this.dispatchEvent({type:"dispose"})}}hr.prototype.isWebGLRenderTarget=!0;class cr extends hr{constructor(e,t,r){super(e,t);const n=this.texture;this.texture=[];for(let e=0;e<r;e++)this.texture[e]=n.clone()}setSize(r,n,i=1){if(this.width!==r||this.height!==n||this.depth!==i){this.width=r,this.height=n,this.depth=i;for(let e=0,t=this.texture.length;e<t;e++)this.texture[e].image.width=r,this.texture[e].image.height=n,this.texture[e].image.depth=i;this.dispose()}return this.viewport.set(0,0,r,n),this.scissor.set(0,0,r,n),this}copy(r){this.dispose(),this.width=r.width,this.height=r.height,this.depth=r.depth,this.viewport.set(0,0,this.width,this.height),this.scissor.set(0,0,this.width,this.height),this.depthBuffer=r.depthBuffer,this.stencilBuffer=r.stencilBuffer,this.depthTexture=r.depthTexture;for(let e=this.texture.length=0,t=r.texture.length;e<t;e++)this.texture[e]=r.texture[e].clone();return this}}cr.prototype.isWebGLMultipleRenderTargets=!0;class ur extends hr{constructor(e,t,r){super(e,t,r),this.samples=4}copy(e){return super.copy.call(this,e),this.samples=e.samples,this}}ur.prototype.isWebGLMultisampleRenderTarget=!0;class dr{constructor(e=0,t=0,r=0,n=1){this._x=e,this._y=t,this._z=r,this._w=n}static slerp(e,t,r,n){return console.warn("THREE.Quaternion: Static .slerp() has been deprecated. Use qm.slerpQuaternions( qa, qb, t ) instead."),r.slerpQuaternions(e,t,n)}static slerpFlat(e,t,r,n,i,a,s){let o=r[n+0],l=r[n+1],h=r[n+2],c=r[n+3];var u=i[a+0],d=i[a+1],p=i[a+2],r=i[a+3];if(0===s)return e[t+0]=o,e[t+1]=l,e[t+2]=h,void(e[t+3]=c);if(1===s)return e[t+0]=u,e[t+1]=d,e[t+2]=p,void(e[t+3]=r);if(c!==r||o!==u||l!==d||h!==p){let e=1-s;n=o*u+l*d+h*p+c*r,i=0<=n?1:-1,a=1-n*n;a>Number.EPSILON&&(a=Math.sqrt(a),n=Math.atan2(a,n*i),e=Math.sin(e*n)/a,s=Math.sin(s*n)/a);i=s*i;o=o*e+u*i,l=l*e+d*i,h=h*e+p*i,c=c*e+r*i,e===1-s&&(s=1/Math.sqrt(o*o+l*l+h*h+c*c),o*=s,l*=s,h*=s,c*=s)}e[t]=o,e[t+1]=l,e[t+2]=h,e[t+3]=c}static multiplyQuaternionsFlat(e,t,r,n,i,a){var s=r[n],o=r[n+1],l=r[n+2],h=r[n+3],c=i[a],r=i[a+1],n=i[a+2],a=i[a+3];return e[t]=s*a+h*c+o*n-l*r,e[t+1]=o*a+h*r+l*c-s*n,e[t+2]=l*a+h*n+s*r-o*c,e[t+3]=h*a-s*c-o*r-l*n,e}get x(){return this._x}set x(e){this._x=e,this._onChangeCallback()}get y(){return this._y}set y(e){this._y=e,this._onChangeCallback()}get z(){return this._z}set z(e){this._z=e,this._onChangeCallback()}get w(){return this._w}set w(e){this._w=e,this._onChangeCallback()}set(e,t,r,n){return this._x=e,this._y=t,this._z=r,this._w=n,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._w)}copy(e){return this._x=e.x,this._y=e.y,this._z=e.z,this._w=e.w,this._onChangeCallback(),this}setFromEuler(e,t){if(!e||!e.isEuler)throw new Error("THREE.Quaternion: .setFromEuler() now expects an Euler rotation rather than a Vector3 and order.");var r=e._x,n=e._y,i=e._z,a=e._order;const s=Math.cos,o=Math.sin;var l=s(r/2),h=s(n/2),c=s(i/2),u=o(r/2),d=o(n/2),p=o(i/2);switch(a){case"XYZ":this._x=u*h*c+l*d*p,this._y=l*d*c-u*h*p,this._z=l*h*p+u*d*c,this._w=l*h*c-u*d*p;break;case"YXZ":this._x=u*h*c+l*d*p,this._y=l*d*c-u*h*p,this._z=l*h*p-u*d*c,this._w=l*h*c+u*d*p;break;case"ZXY":this._x=u*h*c-l*d*p,this._y=l*d*c+u*h*p,this._z=l*h*p+u*d*c,this._w=l*h*c-u*d*p;break;case"ZYX":this._x=u*h*c-l*d*p,this._y=l*d*c+u*h*p,this._z=l*h*p-u*d*c,this._w=l*h*c+u*d*p;break;case"YZX":this._x=u*h*c+l*d*p,this._y=l*d*c+u*h*p,this._z=l*h*p-u*d*c,this._w=l*h*c-u*d*p;break;case"XZY":this._x=u*h*c-l*d*p,this._y=l*d*c-u*h*p,this._z=l*h*p+u*d*c,this._w=l*h*c+u*d*p;break;default:console.warn("THREE.Quaternion: .setFromEuler() encountered an unknown order: "+a)}return!1!==t&&this._onChangeCallback(),this}setFromAxisAngle(e,t){var r=t/2,t=Math.sin(r);return this._x=e.x*t,this._y=e.y*t,this._z=e.z*t,this._w=Math.cos(r),this._onChangeCallback(),this}setFromRotationMatrix(e){var t,r=e.elements,n=r[0],i=r[4],a=r[8],s=r[1],o=r[5],l=r[9],h=r[2],c=r[6],e=r[10],r=n+o+e;return 0<r?(r=.5/Math.sqrt(r+1),this._w=.25/r,this._x=(c-l)*r,this._y=(a-h)*r,this._z=(s-i)*r):o<n&&e<n?(t=2*Math.sqrt(1+n-o-e),this._w=(c-l)/t,this._x=.25*t,this._y=(i+s)/t,this._z=(a+h)/t):e<o?(t=2*Math.sqrt(1+o-n-e),this._w=(a-h)/t,this._x=(i+s)/t,this._y=.25*t,this._z=(l+c)/t):(o=2*Math.sqrt(1+e-n-o),this._w=(s-i)/o,this._x=(a+h)/o,this._y=(l+c)/o,this._z=.25*o),this._onChangeCallback(),this}setFromUnitVectors(e,t){let r=e.dot(t)+1;return r<Number.EPSILON?(r=0,Math.abs(e.x)>Math.abs(e.z)?(this._x=-e.y,this._y=e.x,this._z=0):(this._x=0,this._y=-e.z,this._z=e.y)):(this._x=e.y*t.z-e.z*t.y,this._y=e.z*t.x-e.x*t.z,this._z=e.x*t.y-e.y*t.x),this._w=r,this.normalize()}angleTo(e){return 2*Math.acos(Math.abs(Yt(this.dot(e),-1,1)))}rotateTowards(e,t){var r=this.angleTo(e);if(0===r)return this;r=Math.min(1,t/r);return this.slerp(e,r),this}identity(){return this.set(0,0,0,1)}invert(){return this.conjugate()}conjugate(){return this._x*=-1,this._y*=-1,this._z*=-1,this._onChangeCallback(),this}dot(e){return this._x*e._x+this._y*e._y+this._z*e._z+this._w*e._w}lengthSq(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w}length(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)}normalize(){var e=this.length();return 0===e?(this._x=0,this._y=0,this._z=0,this._w=1):(this._x=this._x*(e=1/e),this._y=this._y*e,this._z=this._z*e,this._w=this._w*e),this._onChangeCallback(),this}multiply(e,t){return void 0!==t?(console.warn("THREE.Quaternion: .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead."),this.multiplyQuaternions(e,t)):this.multiplyQuaternions(this,e)}premultiply(e){return this.multiplyQuaternions(e,this)}multiplyQuaternions(e,t){var r=e._x,n=e._y,i=e._z,a=e._w,s=t._x,o=t._y,e=t._z,t=t._w;return this._x=r*t+a*s+n*e-i*o,this._y=n*t+a*o+i*s-r*e,this._z=i*t+a*e+r*o-n*s,this._w=a*t-r*s-n*o-i*e,this._onChangeCallback(),this}slerp(e,t){if(0===t)return this;if(1===t)return this.copy(e);var r=this._x,n=this._y,i=this._z,a=this._w;let s=a*e._w+r*e._x+n*e._y+i*e._z;if(s<0?(this._w=-e._w,this._x=-e._x,this._y=-e._y,this._z=-e._z,s=-s):this.copy(e),1<=s)return this._w=a,this._x=r,this._y=n,this._z=i,this;var o=1-s*s;if(o<=Number.EPSILON){var l=1-t;return this._w=l*a+t*this._w,this._x=l*r+t*this._x,this._y=l*n+t*this._y,this._z=l*i+t*this._z,this.normalize(),this._onChangeCallback(),this}e=Math.sqrt(o),l=Math.atan2(e,s),o=Math.sin((1-t)*l)/e,e=Math.sin(t*l)/e;return this._w=a*o+this._w*e,this._x=r*o+this._x*e,this._y=n*o+this._y*e,this._z=i*o+this._z*e,this._onChangeCallback(),this}slerpQuaternions(e,t,r){this.copy(e).slerp(t,r)}equals(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._w===this._w}fromArray(e,t=0){return this._x=e[t],this._y=e[t+1],this._z=e[t+2],this._w=e[t+3],this._onChangeCallback(),this}toArray(e=[],t=0){return e[t]=this._x,e[t+1]=this._y,e[t+2]=this._z,e[t+3]=this._w,e}fromBufferAttribute(e,t){return this._x=e.getX(t),this._y=e.getY(t),this._z=e.getZ(t),this._w=e.getW(t),this}_onChange(e){return this._onChangeCallback=e,this}_onChangeCallback(){}}dr.prototype.isQuaternion=!0;class pr{constructor(e=0,t=0,r=0){this.x=e,this.y=t,this.z=r}set(e,t,r){return void 0===r&&(r=this.z),this.x=e,this.y=t,this.z=r,this}setScalar(e){return this.x=e,this.y=e,this.z=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setZ(e){return this.z=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y,this.z)}copy(e){return this.x=e.x,this.y=e.y,this.z=e.z,this}add(e,t){return void 0!==t?(console.warn("THREE.Vector3: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(e,t)):(this.x+=e.x,this.y+=e.y,this.z+=e.z,this)}addScalar(e){return this.x+=e,this.y+=e,this.z+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this.z+=e.z*t,this}sub(e,t){return void 0!==t?(console.warn("THREE.Vector3: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(e,t)):(this.x-=e.x,this.y-=e.y,this.z-=e.z,this)}subScalar(e){return this.x-=e,this.y-=e,this.z-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this}multiply(e,t){return void 0!==t?(console.warn("THREE.Vector3: .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead."),this.multiplyVectors(e,t)):(this.x*=e.x,this.y*=e.y,this.z*=e.z,this)}multiplyScalar(e){return this.x*=e,this.y*=e,this.z*=e,this}multiplyVectors(e,t){return this.x=e.x*t.x,this.y=e.y*t.y,this.z=e.z*t.z,this}applyEuler(e){return e&&e.isEuler||console.error("THREE.Vector3: .applyEuler() now expects an Euler rotation rather than a Vector3 and order."),this.applyQuaternion(fr.setFromEuler(e))}applyAxisAngle(e,t){return this.applyQuaternion(fr.setFromAxisAngle(e,t))}applyMatrix3(e){var t=this.x,r=this.y,n=this.z,e=e.elements;return this.x=e[0]*t+e[3]*r+e[6]*n,this.y=e[1]*t+e[4]*r+e[7]*n,this.z=e[2]*t+e[5]*r+e[8]*n,this}applyNormalMatrix(e){return this.applyMatrix3(e).normalize()}applyMatrix4(e){var t=this.x,r=this.y,n=this.z,i=e.elements,e=1/(i[3]*t+i[7]*r+i[11]*n+i[15]);return this.x=(i[0]*t+i[4]*r+i[8]*n+i[12])*e,this.y=(i[1]*t+i[5]*r+i[9]*n+i[13])*e,this.z=(i[2]*t+i[6]*r+i[10]*n+i[14])*e,this}applyQuaternion(e){var t=this.x,r=this.y,n=this.z,i=e.x,a=e.y,s=e.z,o=e.w,l=o*t+a*n-s*r,h=o*r+s*t-i*n,e=o*n+i*r-a*t,n=-i*t-a*r-s*n;return this.x=l*o+n*-i+h*-s-e*-a,this.y=h*o+n*-a+e*-i-l*-s,this.z=e*o+n*-s+l*-a-h*-i,this}project(e){return this.applyMatrix4(e.matrixWorldInverse).applyMatrix4(e.projectionMatrix)}unproject(e){return this.applyMatrix4(e.projectionMatrixInverse).applyMatrix4(e.matrixWorld)}transformDirection(e){var t=this.x,r=this.y,n=this.z,e=e.elements;return this.x=e[0]*t+e[4]*r+e[8]*n,this.y=e[1]*t+e[5]*r+e[9]*n,this.z=e[2]*t+e[6]*r+e[10]*n,this.normalize()}divide(e){return this.x/=e.x,this.y/=e.y,this.z/=e.z,this}divideScalar(e){return this.multiplyScalar(1/e)}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this}clamp(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this.z=Math.max(e.z,Math.min(t.z,this.z)),this}clampScalar(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this.z=Math.max(e,Math.min(t,this.z)),this}clampLength(e,t){var r=this.length();return this.divideScalar(r||1).multiplyScalar(Math.max(e,Math.min(t,r)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this}dot(e){return this.x*e.x+this.y*e.y+this.z*e.z}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)}normalize(){return this.divideScalar(this.length()||1)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this}lerpVectors(e,t,r){return this.x=e.x+(t.x-e.x)*r,this.y=e.y+(t.y-e.y)*r,this.z=e.z+(t.z-e.z)*r,this}cross(e,t){return void 0!==t?(console.warn("THREE.Vector3: .cross() now only accepts one argument. Use .crossVectors( a, b ) instead."),this.crossVectors(e,t)):this.crossVectors(this,e)}crossVectors(e,t){var r=e.x,n=e.y,i=e.z,a=t.x,e=t.y,t=t.z;return this.x=n*t-i*e,this.y=i*a-r*t,this.z=r*e-n*a,this}projectOnVector(e){var t=e.lengthSq();if(0===t)return this.set(0,0,0);t=e.dot(this)/t;return this.copy(e).multiplyScalar(t)}projectOnPlane(e){return mr.copy(this).projectOnVector(e),this.sub(mr)}reflect(e){return this.sub(mr.copy(e).multiplyScalar(2*this.dot(e)))}angleTo(e){var t=Math.sqrt(this.lengthSq()*e.lengthSq());if(0===t)return Math.PI/2;t=this.dot(e)/t;return Math.acos(Yt(t,-1,1))}distanceTo(e){return Math.sqrt(this.distanceToSquared(e))}distanceToSquared(e){var t=this.x-e.x,r=this.y-e.y,e=this.z-e.z;return t*t+r*r+e*e}manhattanDistanceTo(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)+Math.abs(this.z-e.z)}setFromSpherical(e){return this.setFromSphericalCoords(e.radius,e.phi,e.theta)}setFromSphericalCoords(e,t,r){var n=Math.sin(t)*e;return this.x=n*Math.sin(r),this.y=Math.cos(t)*e,this.z=n*Math.cos(r),this}setFromCylindrical(e){return this.setFromCylindricalCoords(e.radius,e.theta,e.y)}setFromCylindricalCoords(e,t,r){return this.x=e*Math.sin(t),this.y=r,this.z=e*Math.cos(t),this}setFromMatrixPosition(e){e=e.elements;return this.x=e[12],this.y=e[13],this.z=e[14],this}setFromMatrixScale(e){var t=this.setFromMatrixColumn(e,0).length(),r=this.setFromMatrixColumn(e,1).length(),e=this.setFromMatrixColumn(e,2).length();return this.x=t,this.y=r,this.z=e,this}setFromMatrixColumn(e,t){return this.fromArray(e.elements,4*t)}setFromMatrix3Column(e,t){return this.fromArray(e.elements,3*t)}equals(e){return e.x===this.x&&e.y===this.y&&e.z===this.z}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this.z=e[t+2],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e[t+2]=this.z,e}fromBufferAttribute(e,t,r){return void 0!==r&&console.warn("THREE.Vector3: offset has been removed from .fromBufferAttribute()."),this.x=e.getX(t),this.y=e.getY(t),this.z=e.getZ(t),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this}}pr.prototype.isVector3=!0;const mr=new pr,fr=new dr;class gr{constructor(e=new pr(1/0,1/0,1/0),t=new pr(-1/0,-1/0,-1/0)){this.min=e,this.max=t}set(e,t){return this.min.copy(e),this.max.copy(t),this}setFromArray(r){let n=1/0,i=1/0,a=1/0,s=-1/0,o=-1/0,l=-1/0;for(let e=0,t=r.length;e<t;e+=3){var h=r[e],c=r[e+1],u=r[e+2];h<n&&(n=h),c<i&&(i=c),u<a&&(a=u),h>s&&(s=h),c>o&&(o=c),u>l&&(l=u)}return this.min.set(n,i,a),this.max.set(s,o,l),this}setFromBufferAttribute(r){let n=1/0,i=1/0,a=1/0,s=-1/0,o=-1/0,l=-1/0;for(let e=0,t=r.count;e<t;e++){var h=r.getX(e),c=r.getY(e),u=r.getZ(e);h<n&&(n=h),c<i&&(i=c),u<a&&(a=u),h>s&&(s=h),c>o&&(o=c),u>l&&(l=u)}return this.min.set(n,i,a),this.max.set(s,o,l),this}setFromPoints(r){this.makeEmpty();for(let e=0,t=r.length;e<t;e++)this.expandByPoint(r[e]);return this}setFromCenterAndSize(e,t){t=yr.copy(t).multiplyScalar(.5);return this.min.copy(e).sub(t),this.max.copy(e).add(t),this}setFromObject(e){return this.makeEmpty(),this.expandByObject(e)}clone(){return(new this.constructor).copy(this)}copy(e){return this.min.copy(e.min),this.max.copy(e.max),this}makeEmpty(){return this.min.x=this.min.y=this.min.z=1/0,this.max.x=this.max.y=this.max.z=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z}getCenter(e){return void 0===e&&(console.warn("THREE.Box3: .getCenter() target is now required"),e=new pr),this.isEmpty()?e.set(0,0,0):e.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(e){return void 0===e&&(console.warn("THREE.Box3: .getSize() target is now required"),e=new pr),this.isEmpty()?e.set(0,0,0):e.subVectors(this.max,this.min)}expandByPoint(e){return this.min.min(e),this.max.max(e),this}expandByVector(e){return this.min.sub(e),this.max.add(e),this}expandByScalar(e){return this.min.addScalar(-e),this.max.addScalar(e),this}expandByObject(e){e.updateWorldMatrix(!1,!1);const t=e.geometry;void 0!==t&&(null===t.boundingBox&&t.computeBoundingBox(),xr.copy(t.boundingBox),xr.applyMatrix4(e.matrixWorld),this.union(xr));var r=e.children;for(let e=0,t=r.length;e<t;e++)this.expandByObject(r[e]);return this}containsPoint(e){return!(e.x<this.min.x||e.x>this.max.x||e.y<this.min.y||e.y>this.max.y||e.z<this.min.z||e.z>this.max.z)}containsBox(e){return this.min.x<=e.min.x&&e.max.x<=this.max.x&&this.min.y<=e.min.y&&e.max.y<=this.max.y&&this.min.z<=e.min.z&&e.max.z<=this.max.z}getParameter(e,t){return void 0===t&&(console.warn("THREE.Box3: .getParameter() target is now required"),t=new pr),t.set((e.x-this.min.x)/(this.max.x-this.min.x),(e.y-this.min.y)/(this.max.y-this.min.y),(e.z-this.min.z)/(this.max.z-this.min.z))}intersectsBox(e){return!(e.max.x<this.min.x||e.min.x>this.max.x||e.max.y<this.min.y||e.min.y>this.max.y||e.max.z<this.min.z||e.min.z>this.max.z)}intersectsSphere(e){return this.clampPoint(e.center,yr),yr.distanceToSquared(e.center)<=e.radius*e.radius}intersectsPlane(e){let t,r;return r=0<e.normal.x?(t=e.normal.x*this.min.x,e.normal.x*this.max.x):(t=e.normal.x*this.max.x,e.normal.x*this.min.x),0<e.normal.y?(t+=e.normal.y*this.min.y,r+=e.normal.y*this.max.y):(t+=e.normal.y*this.max.y,r+=e.normal.y*this.min.y),0<e.normal.z?(t+=e.normal.z*this.min.z,r+=e.normal.z*this.max.z):(t+=e.normal.z*this.max.z,r+=e.normal.z*this.min.z),t<=-e.constant&&r>=-e.constant}intersectsTriangle(e){return!this.isEmpty()&&(this.getCenter(Sr),Ar.subVectors(this.max,Sr),_r.subVectors(e.a,Sr),Mr.subVectors(e.b,Sr),wr.subVectors(e.c,Sr),br.subVectors(Mr,_r),Er.subVectors(wr,Mr),Tr.subVectors(_r,wr),!!Cr([0,-br.z,br.y,0,-Er.z,Er.y,0,-Tr.z,Tr.y,br.z,0,-br.x,Er.z,0,-Er.x,Tr.z,0,-Tr.x,-br.y,br.x,0,-Er.y,Er.x,0,-Tr.y,Tr.x,0],_r,Mr,wr,Ar)&&(!!Cr([1,0,0,0,1,0,0,0,1],_r,Mr,wr,Ar)&&(Rr.crossVectors(br,Er),Cr([Rr.x,Rr.y,Rr.z],_r,Mr,wr,Ar))))}clampPoint(e,t){return void 0===t&&(console.warn("THREE.Box3: .clampPoint() target is now required"),t=new pr),t.copy(e).clamp(this.min,this.max)}distanceToPoint(e){const t=yr.copy(e).clamp(this.min,this.max);return t.sub(e).length()}getBoundingSphere(e){return void 0===e&&console.error("THREE.Box3: .getBoundingSphere() target is now required"),this.getCenter(e.center),e.radius=.5*this.getSize(yr).length(),e}intersect(e){return this.min.max(e.min),this.max.min(e.max),this.isEmpty()&&this.makeEmpty(),this}union(e){return this.min.min(e.min),this.max.max(e.max),this}applyMatrix4(e){return this.isEmpty()||(vr[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(e),vr[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(e),vr[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(e),vr[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(e),vr[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(e),vr[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(e),vr[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(e),vr[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(e),this.setFromPoints(vr)),this}translate(e){return this.min.add(e),this.max.add(e),this}equals(e){return e.min.equals(this.min)&&e.max.equals(this.max)}}gr.prototype.isBox3=!0;const vr=[new pr,new pr,new pr,new pr,new pr,new pr,new pr,new pr],yr=new pr,xr=new gr,_r=new pr,Mr=new pr,wr=new pr,br=new pr,Er=new pr,Tr=new pr,Sr=new pr,Ar=new pr,Rr=new pr,Lr=new pr;function Cr(r,n,i,a,s){for(let e=0,t=r.length-3;e<=t;e+=3){Lr.fromArray(r,e);var o=s.x*Math.abs(Lr.x)+s.y*Math.abs(Lr.y)+s.z*Math.abs(Lr.z),l=n.dot(Lr),h=i.dot(Lr),c=a.dot(Lr);if(Math.max(-Math.max(l,h,c),Math.min(l,h,c))>o)return!1}return!0}const Pr=new gr,Ir=new pr,Dr=new pr,Nr=new pr;class Fr{constructor(e=new pr,t=-1){this.center=e,this.radius=t}set(e,t){return this.center.copy(e),this.radius=t,this}setFromPoints(r,e){const n=this.center;void 0!==e?n.copy(e):Pr.setFromPoints(r).getCenter(n);let i=0;for(let e=0,t=r.length;e<t;e++)i=Math.max(i,n.distanceToSquared(r[e]));return this.radius=Math.sqrt(i),this}copy(e){return this.center.copy(e.center),this.radius=e.radius,this}isEmpty(){return this.radius<0}makeEmpty(){return this.center.set(0,0,0),this.radius=-1,this}containsPoint(e){return e.distanceToSquared(this.center)<=this.radius*this.radius}distanceToPoint(e){return e.distanceTo(this.center)-this.radius}intersectsSphere(e){var t=this.radius+e.radius;return e.center.distanceToSquared(this.center)<=t*t}intersectsBox(e){return e.intersectsSphere(this)}intersectsPlane(e){return Math.abs(e.distanceToPoint(this.center))<=this.radius}clampPoint(e,t){var r=this.center.distanceToSquared(e);return void 0===t&&(console.warn("THREE.Sphere: .clampPoint() target is now required"),t=new pr),t.copy(e),r>this.radius*this.radius&&(t.sub(this.center).normalize(),t.multiplyScalar(this.radius).add(this.center)),t}getBoundingBox(e){return void 0===e&&(console.warn("THREE.Sphere: .getBoundingBox() target is now required"),e=new gr),this.isEmpty()?e.makeEmpty():(e.set(this.center,this.center),e.expandByScalar(this.radius)),e}applyMatrix4(e){return this.center.applyMatrix4(e),this.radius=this.radius*e.getMaxScaleOnAxis(),this}translate(e){return this.center.add(e),this}expandByPoint(e){Nr.subVectors(e,this.center);var t=Nr.lengthSq();return t>this.radius*this.radius&&(t=.5*((e=Math.sqrt(t))-this.radius),this.center.add(Nr.multiplyScalar(t/e)),this.radius+=t),this}union(e){return Dr.subVectors(e.center,this.center).normalize().multiplyScalar(e.radius),this.expandByPoint(Ir.copy(e.center).add(Dr)),this.expandByPoint(Ir.copy(e.center).sub(Dr)),this}equals(e){return e.center.equals(this.center)&&e.radius===this.radius}clone(){return(new this.constructor).copy(this)}}const Br=new pr,Ur=new pr,Or=new pr,zr=new pr,Hr=new pr,Gr=new pr,Vr=new pr;class kr{constructor(e=new pr,t=new pr(0,0,-1)){this.origin=e,this.direction=t}set(e,t){return this.origin.copy(e),this.direction.copy(t),this}copy(e){return this.origin.copy(e.origin),this.direction.copy(e.direction),this}at(e,t){return void 0===t&&(console.warn("THREE.Ray: .at() target is now required"),t=new pr),t.copy(this.direction).multiplyScalar(e).add(this.origin)}lookAt(e){return this.direction.copy(e).sub(this.origin).normalize(),this}recast(e){return this.origin.copy(this.at(e,Br)),this}closestPointToPoint(e,t){void 0===t&&(console.warn("THREE.Ray: .closestPointToPoint() target is now required"),t=new pr),t.subVectors(e,this.origin);e=t.dot(this.direction);return e<0?t.copy(this.origin):t.copy(this.direction).multiplyScalar(e).add(this.origin)}distanceToPoint(e){return Math.sqrt(this.distanceSqToPoint(e))}distanceSqToPoint(e){var t=Br.subVectors(e,this.origin).dot(this.direction);return t<0?this.origin.distanceToSquared(e):(Br.copy(this.direction).multiplyScalar(t).add(this.origin),Br.distanceToSquared(e))}distanceSqToSegment(e,t,r,n){Ur.copy(e).add(t).multiplyScalar(.5),Or.copy(t).sub(e).normalize(),zr.copy(this.origin).sub(Ur);var i=.5*e.distanceTo(t),a=-this.direction.dot(Or),s=zr.dot(this.direction),o=-zr.dot(Or),e=zr.lengthSq(),t=Math.abs(1-a*a);let l,h,c,u;return c=0<t?(l=a*o-s,h=a*s-o,u=i*t,0<=l?h>=-u?h<=u?(t=1/t,l*=t,h*=t,l*(l+a*h+2*s)+h*(a*l+h+2*o)+e):(h=i,l=Math.max(0,-(a*h+s)),-l*l+h*(h+2*o)+e):(h=-i,l=Math.max(0,-(a*h+s)),-l*l+h*(h+2*o)+e):h<=-u?(l=Math.max(0,-(-a*i+s)),h=0<l?-i:Math.min(Math.max(-i,-o),i),-l*l+h*(h+2*o)+e):h<=u?(l=0,h=Math.min(Math.max(-i,-o),i),h*(h+2*o)+e):(l=Math.max(0,-(a*i+s)),h=0<l?i:Math.min(Math.max(-i,-o),i),-l*l+h*(h+2*o)+e)):(h=0<a?-i:i,l=Math.max(0,-(a*h+s)),-l*l+h*(h+2*o)+e),r&&r.copy(this.direction).multiplyScalar(l).add(this.origin),n&&n.copy(Or).multiplyScalar(h).add(Ur),c}intersectSphere(e,t){Br.subVectors(e.center,this.origin);var r=Br.dot(this.direction),n=Br.dot(Br)-r*r,e=e.radius*e.radius;if(e<n)return null;e=Math.sqrt(e-n),n=r-e,e=r+e;return n<0&&e<0?null:n<0?this.at(e,t):this.at(n,t)}intersectsSphere(e){return this.distanceSqToPoint(e.center)<=e.radius*e.radius}distanceToPlane(e){var t=e.normal.dot(this.direction);if(0===t)return 0===e.distanceToPoint(this.origin)?0:null;t=-(this.origin.dot(e.normal)+e.constant)/t;return 0<=t?t:null}intersectPlane(e,t){e=this.distanceToPlane(e);return null===e?null:this.at(e,t)}intersectsPlane(e){var t=e.distanceToPoint(this.origin);return 0===t||e.normal.dot(this.direction)*t<0}intersectBox(e,t){let r,n,i,a,s,o;var l=1/this.direction.x,h=1/this.direction.y,c=1/this.direction.z,u=this.origin;return n=0<=l?(r=(e.min.x-u.x)*l,(e.max.x-u.x)*l):(r=(e.max.x-u.x)*l,(e.min.x-u.x)*l),a=0<=h?(i=(e.min.y-u.y)*h,(e.max.y-u.y)*h):(i=(e.max.y-u.y)*h,(e.min.y-u.y)*h),r>a||i>n?null:((i>r||r!=r)&&(r=i),(a<n||n!=n)&&(n=a),o=0<=c?(s=(e.min.z-u.z)*c,(e.max.z-u.z)*c):(s=(e.max.z-u.z)*c,(e.min.z-u.z)*c),r>o||s>n?null:((s>r||r!=r)&&(r=s),(o<n||n!=n)&&(n=o),n<0?null:this.at(0<=r?r:n,t)))}intersectsBox(e){return null!==this.intersectBox(e,Br)}intersectTriangle(e,t,r,n,i){Hr.subVectors(t,e),Gr.subVectors(r,e),Vr.crossVectors(Hr,Gr);let a=this.direction.dot(Vr),s;if(0<a){if(n)return null;s=1}else{if(!(a<0))return null;s=-1,a=-a}zr.subVectors(this.origin,e);n=s*this.direction.dot(Gr.crossVectors(zr,Gr));if(n<0)return null;e=s*this.direction.dot(Hr.cross(zr));if(e<0)return null;if(n+e>a)return null;e=-s*zr.dot(Vr);return e<0?null:this.at(e/a,i)}applyMatrix4(e){return this.origin.applyMatrix4(e),this.direction.transformDirection(e),this}equals(e){return e.origin.equals(this.origin)&&e.direction.equals(this.direction)}clone(){return(new this.constructor).copy(this)}}class Wr{constructor(){this.elements=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1],0<arguments.length&&console.error("THREE.Matrix4: the constructor no longer reads arguments. use .set() instead.")}set(e,t,r,n,i,a,s,o,l,h,c,u,d,p,m,f){const g=this.elements;return g[0]=e,g[4]=t,g[8]=r,g[12]=n,g[1]=i,g[5]=a,g[9]=s,g[13]=o,g[2]=l,g[6]=h,g[10]=c,g[14]=u,g[3]=d,g[7]=p,g[11]=m,g[15]=f,this}identity(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this}clone(){return(new Wr).fromArray(this.elements)}copy(e){const t=this.elements;e=e.elements;return t[0]=e[0],t[1]=e[1],t[2]=e[2],t[3]=e[3],t[4]=e[4],t[5]=e[5],t[6]=e[6],t[7]=e[7],t[8]=e[8],t[9]=e[9],t[10]=e[10],t[11]=e[11],t[12]=e[12],t[13]=e[13],t[14]=e[14],t[15]=e[15],this}copyPosition(e){const t=this.elements,r=e.elements;return t[12]=r[12],t[13]=r[13],t[14]=r[14],this}setFromMatrix3(e){e=e.elements;return this.set(e[0],e[3],e[6],0,e[1],e[4],e[7],0,e[2],e[5],e[8],0,0,0,0,1),this}extractBasis(e,t,r){return e.setFromMatrixColumn(this,0),t.setFromMatrixColumn(this,1),r.setFromMatrixColumn(this,2),this}makeBasis(e,t,r){return this.set(e.x,t.x,r.x,0,e.y,t.y,r.y,0,e.z,t.z,r.z,0,0,0,0,1),this}extractRotation(e){const t=this.elements;var r=e.elements,n=1/jr.setFromMatrixColumn(e,0).length(),i=1/jr.setFromMatrixColumn(e,1).length(),e=1/jr.setFromMatrixColumn(e,2).length();return t[0]=r[0]*n,t[1]=r[1]*n,t[2]=r[2]*n,t[3]=0,t[4]=r[4]*i,t[5]=r[5]*i,t[6]=r[6]*i,t[7]=0,t[8]=r[8]*e,t[9]=r[9]*e,t[10]=r[10]*e,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this}makeRotationFromEuler(e){e&&e.isEuler||console.error("THREE.Matrix4: .makeRotationFromEuler() now expects a Euler rotation rather than a Vector3 and order.");const t=this.elements;var r,n,i,a,s,o,l,h,c,u,d,p=e.x,m=e.y,f=e.z,g=Math.cos(p),v=Math.sin(p),y=Math.cos(m),x=Math.sin(m),p=Math.cos(f),m=Math.sin(f);return"XYZ"===e.order?(r=g*p,i=g*m,n=v*p,f=v*m,t[0]=y*p,t[4]=-y*m,t[8]=x,t[1]=i+n*x,t[5]=r-f*x,t[9]=-v*y,t[2]=f-r*x,t[6]=n+i*x,t[10]=g*y):"YXZ"===e.order?(a=y*p,r=y*m,n=x*p,i=x*m,t[0]=a+i*v,t[4]=n*v-r,t[8]=g*x,t[1]=g*m,t[5]=g*p,t[9]=-v,t[2]=r*v-n,t[6]=i+a*v,t[10]=g*y):"ZXY"===e.order?(l=y*p,a=y*m,s=x*p,o=x*m,t[0]=l-o*v,t[4]=-g*m,t[8]=s+a*v,t[1]=a+s*v,t[5]=g*p,t[9]=o-l*v,t[2]=-g*x,t[6]=v,t[10]=g*y):"ZYX"===e.order?(s=g*p,o=g*m,h=v*p,l=v*m,t[0]=y*p,t[4]=h*x-o,t[8]=s*x+l,t[1]=y*m,t[5]=l*x+s,t[9]=o*x-h,t[2]=-x,t[6]=v*y,t[10]=g*y):"YZX"===e.order?(u=g*y,h=g*x,c=v*y,d=v*x,t[0]=y*p,t[4]=d-u*m,t[8]=c*m+h,t[1]=m,t[5]=g*p,t[9]=-v*p,t[2]=-x*p,t[6]=h*m+c,t[10]=u-d*m):"XZY"===e.order&&(c=g*y,u=g*x,d=v*y,e=v*x,t[0]=y*p,t[4]=-m,t[8]=x*p,t[1]=c*m+e,t[5]=g*p,t[9]=u*m-d,t[2]=d*m-u,t[6]=v*p,t[10]=e*m+c),t[3]=0,t[7]=0,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this}makeRotationFromQuaternion(e){return this.compose(qr,e,Yr)}lookAt(e,t,r){const n=this.elements;return Kr.subVectors(e,t),0===Kr.lengthSq()&&(Kr.z=1),Kr.normalize(),Zr.crossVectors(r,Kr),0===Zr.lengthSq()&&(1===Math.abs(r.z)?Kr.x+=1e-4:Kr.z+=1e-4,Kr.normalize(),Zr.crossVectors(r,Kr)),Zr.normalize(),Jr.crossVectors(Kr,Zr),n[0]=Zr.x,n[4]=Jr.x,n[8]=Kr.x,n[1]=Zr.y,n[5]=Jr.y,n[9]=Kr.y,n[2]=Zr.z,n[6]=Jr.z,n[10]=Kr.z,this}multiply(e,t){return void 0!==t?(console.warn("THREE.Matrix4: .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead."),this.multiplyMatrices(e,t)):this.multiplyMatrices(this,e)}premultiply(e){return this.multiplyMatrices(e,this)}multiplyMatrices(e,t){var r=e.elements,n=t.elements;const i=this.elements;var a=r[0],s=r[4],o=r[8],l=r[12],h=r[1],c=r[5],u=r[9],d=r[13],p=r[2],m=r[6],f=r[10],g=r[14],v=r[3],y=r[7],x=r[11],_=r[15],M=n[0],w=n[4],b=n[8],E=n[12],T=n[1],S=n[5],A=n[9],R=n[13],L=n[2],C=n[6],P=n[10],I=n[14],e=n[3],t=n[7],r=n[11],n=n[15];return i[0]=a*M+s*T+o*L+l*e,i[4]=a*w+s*S+o*C+l*t,i[8]=a*b+s*A+o*P+l*r,i[12]=a*E+s*R+o*I+l*n,i[1]=h*M+c*T+u*L+d*e,i[5]=h*w+c*S+u*C+d*t,i[9]=h*b+c*A+u*P+d*r,i[13]=h*E+c*R+u*I+d*n,i[2]=p*M+m*T+f*L+g*e,i[6]=p*w+m*S+f*C+g*t,i[10]=p*b+m*A+f*P+g*r,i[14]=p*E+m*R+f*I+g*n,i[3]=v*M+y*T+x*L+_*e,i[7]=v*w+y*S+x*C+_*t,i[11]=v*b+y*A+x*P+_*r,i[15]=v*E+y*R+x*I+_*n,this}multiplyScalar(e){const t=this.elements;return t[0]*=e,t[4]*=e,t[8]*=e,t[12]*=e,t[1]*=e,t[5]*=e,t[9]*=e,t[13]*=e,t[2]*=e,t[6]*=e,t[10]*=e,t[14]*=e,t[3]*=e,t[7]*=e,t[11]*=e,t[15]*=e,this}determinant(){var e=this.elements,t=e[0],r=e[4],n=e[8],i=e[12],a=e[1],s=e[5],o=e[9],l=e[13],h=e[2],c=e[6],u=e[10],d=e[14];return e[3]*(+i*o*c-n*l*c-i*s*u+r*l*u+n*s*d-r*o*d)+e[7]*(+t*o*d-t*l*u+i*a*u-n*a*d+n*l*h-i*o*h)+e[11]*(+t*l*c-t*s*d-i*a*c+r*a*d+i*s*h-r*l*h)+e[15]*(-n*s*h-t*o*c+t*s*u+n*a*c-r*a*u+r*o*h)}transpose(){const e=this.elements;var t=e[1];return e[1]=e[4],e[4]=t,t=e[2],e[2]=e[8],e[8]=t,t=e[6],e[6]=e[9],e[9]=t,t=e[3],e[3]=e[12],e[12]=t,t=e[7],e[7]=e[13],e[13]=t,t=e[11],e[11]=e[14],e[14]=t,this}setPosition(e,t,r){const n=this.elements;return e.isVector3?(n[12]=e.x,n[13]=e.y,n[14]=e.z):(n[12]=e,n[13]=t,n[14]=r),this}invert(){const e=this.elements,t=e[0],r=e[1],n=e[2],i=e[3],a=e[4],s=e[5],o=e[6],l=e[7],h=e[8],c=e[9],u=e[10],d=e[11],p=e[12],m=e[13],f=e[14],g=e[15],v=c*f*l-m*u*l+m*o*d-s*f*d-c*o*g+s*u*g,y=p*u*l-h*f*l-p*o*d+a*f*d+h*o*g-a*u*g,x=h*m*l-p*c*l+p*s*d-a*m*d-h*s*g+a*c*g,_=p*c*o-h*m*o-p*s*u+a*m*u+h*s*f-a*c*f;var M=t*v+r*y+n*x+i*_;if(0==M)return this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);M=1/M;return e[0]=v*M,e[1]=(m*u*i-c*f*i-m*n*d+r*f*d+c*n*g-r*u*g)*M,e[2]=(s*f*i-m*o*i+m*n*l-r*f*l-s*n*g+r*o*g)*M,e[3]=(c*o*i-s*u*i-c*n*l+r*u*l+s*n*d-r*o*d)*M,e[4]=y*M,e[5]=(h*f*i-p*u*i+p*n*d-t*f*d-h*n*g+t*u*g)*M,e[6]=(p*o*i-a*f*i-p*n*l+t*f*l+a*n*g-t*o*g)*M,e[7]=(a*u*i-h*o*i+h*n*l-t*u*l-a*n*d+t*o*d)*M,e[8]=x*M,e[9]=(p*c*i-h*m*i-p*r*d+t*m*d+h*r*g-t*c*g)*M,e[10]=(a*m*i-p*s*i+p*r*l-t*m*l-a*r*g+t*s*g)*M,e[11]=(h*s*i-a*c*i-h*r*l+t*c*l+a*r*d-t*s*d)*M,e[12]=_*M,e[13]=(h*m*n-p*c*n+p*r*u-t*m*u-h*r*f+t*c*f)*M,e[14]=(p*s*n-a*m*n-p*r*o+t*m*o+a*r*f-t*s*f)*M,e[15]=(a*c*n-h*s*n+h*r*o-t*c*o-a*r*u+t*s*u)*M,this}scale(e){const t=this.elements;var r=e.x,n=e.y,e=e.z;return t[0]*=r,t[4]*=n,t[8]*=e,t[1]*=r,t[5]*=n,t[9]*=e,t[2]*=r,t[6]*=n,t[10]*=e,t[3]*=r,t[7]*=n,t[11]*=e,this}getMaxScaleOnAxis(){var e=this.elements,t=e[0]*e[0]+e[1]*e[1]+e[2]*e[2],r=e[4]*e[4]+e[5]*e[5]+e[6]*e[6],e=e[8]*e[8]+e[9]*e[9]+e[10]*e[10];return Math.sqrt(Math.max(t,r,e))}makeTranslation(e,t,r){return this.set(1,0,0,e,0,1,0,t,0,0,1,r,0,0,0,1),this}makeRotationX(e){var t=Math.cos(e),e=Math.sin(e);return this.set(1,0,0,0,0,t,-e,0,0,e,t,0,0,0,0,1),this}makeRotationY(e){var t=Math.cos(e),e=Math.sin(e);return this.set(t,0,e,0,0,1,0,0,-e,0,t,0,0,0,0,1),this}makeRotationZ(e){var t=Math.cos(e),e=Math.sin(e);return this.set(t,-e,0,0,e,t,0,0,0,0,1,0,0,0,0,1),this}makeRotationAxis(e,t){var r=Math.cos(t),n=Math.sin(t),i=1-r,a=e.x,s=e.y,o=e.z,t=i*a,e=i*s;return this.set(t*a+r,t*s-n*o,t*o+n*s,0,t*s+n*o,e*s+r,e*o-n*a,0,t*o-n*s,e*o+n*a,i*o*o+r,0,0,0,0,1),this}makeScale(e,t,r){return this.set(e,0,0,0,0,t,0,0,0,0,r,0,0,0,0,1),this}makeShear(e,t,r,n,i,a){return this.set(1,r,i,0,e,1,a,0,t,n,1,0,0,0,0,1),this}compose(e,t,r){const n=this.elements;var i=t._x,a=t._y,s=t._z,o=t._w,l=i+i,h=a+a,c=s+s,u=i*l,d=i*h,p=i*c,t=a*h,i=a*c,a=s*c,s=o*l,l=o*h,h=o*c,o=r.x,c=r.y,r=r.z;return n[0]=(1-(t+a))*o,n[1]=(d+h)*o,n[2]=(p-l)*o,n[3]=0,n[4]=(d-h)*c,n[5]=(1-(u+a))*c,n[6]=(i+s)*c,n[7]=0,n[8]=(p+l)*r,n[9]=(i-s)*r,n[10]=(1-(u+t))*r,n[11]=0,n[12]=e.x,n[13]=e.y,n[14]=e.z,n[15]=1,this}decompose(e,t,r){var n=this.elements;let i=jr.set(n[0],n[1],n[2]).length();var a=jr.set(n[4],n[5],n[6]).length(),s=jr.set(n[8],n[9],n[10]).length();this.determinant()<0&&(i=-i),e.x=n[12],e.y=n[13],e.z=n[14],Xr.copy(this);var o=1/i,e=1/a,n=1/s;return Xr.elements[0]*=o,Xr.elements[1]*=o,Xr.elements[2]*=o,Xr.elements[4]*=e,Xr.elements[5]*=e,Xr.elements[6]*=e,Xr.elements[8]*=n,Xr.elements[9]*=n,Xr.elements[10]*=n,t.setFromRotationMatrix(Xr),r.x=i,r.y=a,r.z=s,this}makePerspective(e,t,r,n,i,a){void 0===a&&console.warn("THREE.Matrix4: .makePerspective() has been redefined and has a new signature. Please check the docs.");const s=this.elements;var o=2*i/(r-n),l=(t+e)/(t-e),r=(r+n)/(r-n),n=-(a+i)/(a-i),a=-2*a*i/(a-i);return s[0]=2*i/(t-e),s[4]=0,s[8]=l,s[12]=0,s[1]=0,s[5]=o,s[9]=r,s[13]=0,s[2]=0,s[6]=0,s[10]=n,s[14]=a,s[3]=0,s[7]=0,s[11]=-1,s[15]=0,this}makeOrthographic(e,t,r,n,i,a){const s=this.elements;var o=1/(t-e),l=1/(r-n),h=1/(a-i),e=(t+e)*o,n=(r+n)*l,i=(a+i)*h;return s[0]=2*o,s[4]=0,s[8]=0,s[12]=-e,s[1]=0,s[5]=2*l,s[9]=0,s[13]=-n,s[2]=0,s[6]=0,s[10]=-2*h,s[14]=-i,s[3]=0,s[7]=0,s[11]=0,s[15]=1,this}equals(e){var t=this.elements,r=e.elements;for(let e=0;e<16;e++)if(t[e]!==r[e])return!1;return!0}fromArray(t,r=0){for(let e=0;e<16;e++)this.elements[e]=t[e+r];return this}toArray(e=[],t=0){var r=this.elements;return e[t]=r[0],e[t+1]=r[1],e[t+2]=r[2],e[t+3]=r[3],e[t+4]=r[4],e[t+5]=r[5],e[t+6]=r[6],e[t+7]=r[7],e[t+8]=r[8],e[t+9]=r[9],e[t+10]=r[10],e[t+11]=r[11],e[t+12]=r[12],e[t+13]=r[13],e[t+14]=r[14],e[t+15]=r[15],e}}Wr.prototype.isMatrix4=!0;const jr=new pr,Xr=new Wr,qr=new pr(0,0,0),Yr=new pr(1,1,1),Zr=new pr,Jr=new pr,Kr=new pr,Qr=new Wr,$r=new dr;class en{constructor(e=0,t=0,r=0,n=en.DefaultOrder){this._x=e,this._y=t,this._z=r,this._order=n}get x(){return this._x}set x(e){this._x=e,this._onChangeCallback()}get y(){return this._y}set y(e){this._y=e,this._onChangeCallback()}get z(){return this._z}set z(e){this._z=e,this._onChangeCallback()}get order(){return this._order}set order(e){this._order=e,this._onChangeCallback()}set(e,t,r,n){return this._x=e,this._y=t,this._z=r,this._order=n||this._order,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._order)}copy(e){return this._x=e._x,this._y=e._y,this._z=e._z,this._order=e._order,this._onChangeCallback(),this}setFromRotationMatrix(e,t,r){var e=e.elements,n=e[0],i=e[4],a=e[8],s=e[1],o=e[5],l=e[9],h=e[2],c=e[6],u=e[10];switch(t=t||this._order){case"XYZ":this._y=Math.asin(Yt(a,-1,1)),Math.abs(a)<.9999999?(this._x=Math.atan2(-l,u),this._z=Math.atan2(-i,n)):(this._x=Math.atan2(c,o),this._z=0);break;case"YXZ":this._x=Math.asin(-Yt(l,-1,1)),Math.abs(l)<.9999999?(this._y=Math.atan2(a,u),this._z=Math.atan2(s,o)):(this._y=Math.atan2(-h,n),this._z=0);break;case"ZXY":this._x=Math.asin(Yt(c,-1,1)),Math.abs(c)<.9999999?(this._y=Math.atan2(-h,u),this._z=Math.atan2(-i,o)):(this._y=0,this._z=Math.atan2(s,n));break;case"ZYX":this._y=Math.asin(-Yt(h,-1,1)),Math.abs(h)<.9999999?(this._x=Math.atan2(c,u),this._z=Math.atan2(s,n)):(this._x=0,this._z=Math.atan2(-i,o));break;case"YZX":this._z=Math.asin(Yt(s,-1,1)),Math.abs(s)<.9999999?(this._x=Math.atan2(-l,o),this._y=Math.atan2(-h,n)):(this._x=0,this._y=Math.atan2(a,u));break;case"XZY":this._z=Math.asin(-Yt(i,-1,1)),Math.abs(i)<.9999999?(this._x=Math.atan2(c,o),this._y=Math.atan2(a,n)):(this._x=Math.atan2(-l,u),this._y=0);break;default:console.warn("THREE.Euler: .setFromRotationMatrix() encountered an unknown order: "+t)}return this._order=t,!1!==r&&this._onChangeCallback(),this}setFromQuaternion(e,t,r){return Qr.makeRotationFromQuaternion(e),this.setFromRotationMatrix(Qr,t,r)}setFromVector3(e,t){return this.set(e.x,e.y,e.z,t||this._order)}reorder(e){return $r.setFromEuler(this),this.setFromQuaternion($r,e)}equals(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._order===this._order}fromArray(e){return this._x=e[0],this._y=e[1],this._z=e[2],void 0!==e[3]&&(this._order=e[3]),this._onChangeCallback(),this}toArray(e=[],t=0){return e[t]=this._x,e[t+1]=this._y,e[t+2]=this._z,e[t+3]=this._order,e}toVector3(e){return e?e.set(this._x,this._y,this._z):new pr(this._x,this._y,this._z)}_onChange(e){return this._onChangeCallback=e,this}_onChangeCallback(){}}en.prototype.isEuler=!0,en.DefaultOrder="XYZ",en.RotationOrders=["XYZ","YZX","ZXY","XZY","YXZ","ZYX"];class tn{constructor(){this.mask=1}set(e){this.mask=1<<e|0}enable(e){this.mask|=1<<e|0}enableAll(){this.mask=-1}toggle(e){this.mask^=1<<e|0}disable(e){this.mask&=~(1<<e|0)}disableAll(){this.mask=0}test(e){return 0!=(this.mask&e.mask)}}let rn=0;const nn=new pr,an=new dr,sn=new Wr,on=new pr,ln=new pr,hn=new pr,cn=new dr,un=new pr(1,0,0),dn=new pr(0,1,0),pn=new pr(0,0,1),mn={type:"added"},fn={type:"removed"};class gn extends Vt{constructor(){super(),Object.defineProperty(this,"id",{value:rn++}),this.uuid=qt(),this.name="",this.type="Object3D",this.parent=null,this.children=[],this.up=gn.DefaultUp.clone();var e=new pr;const t=new en,r=new dr;var n=new pr(1,1,1);t._onChange(function(){r.setFromEuler(t,!1)}),r._onChange(function(){t.setFromQuaternion(r,void 0,!1)}),Object.defineProperties(this,{position:{configurable:!0,enumerable:!0,value:e},rotation:{configurable:!0,enumerable:!0,value:t},quaternion:{configurable:!0,enumerable:!0,value:r},scale:{configurable:!0,enumerable:!0,value:n},modelViewMatrix:{value:new Wr},normalMatrix:{value:new rr}}),this.matrix=new Wr,this.matrixWorld=new Wr,this.matrixAutoUpdate=gn.DefaultMatrixAutoUpdate,this.matrixWorldNeedsUpdate=!1,this.layers=new tn,this.visible=!0,this.castShadow=!1,this.receiveShadow=!1,this.frustumCulled=!0,this.renderOrder=0,this.animations=[],this.userData={}}onBeforeRender(){}onAfterRender(){}applyMatrix4(e){this.matrixAutoUpdate&&this.updateMatrix(),this.matrix.premultiply(e),this.matrix.decompose(this.position,this.quaternion,this.scale)}applyQuaternion(e){return this.quaternion.premultiply(e),this}setRotationFromAxisAngle(e,t){this.quaternion.setFromAxisAngle(e,t)}setRotationFromEuler(e){this.quaternion.setFromEuler(e,!0)}setRotationFromMatrix(e){this.quaternion.setFromRotationMatrix(e)}setRotationFromQuaternion(e){this.quaternion.copy(e)}rotateOnAxis(e,t){return an.setFromAxisAngle(e,t),this.quaternion.multiply(an),this}rotateOnWorldAxis(e,t){return an.setFromAxisAngle(e,t),this.quaternion.premultiply(an),this}rotateX(e){return this.rotateOnAxis(un,e)}rotateY(e){return this.rotateOnAxis(dn,e)}rotateZ(e){return this.rotateOnAxis(pn,e)}translateOnAxis(e,t){return nn.copy(e).applyQuaternion(this.quaternion),this.position.add(nn.multiplyScalar(t)),this}translateX(e){return this.translateOnAxis(un,e)}translateY(e){return this.translateOnAxis(dn,e)}translateZ(e){return this.translateOnAxis(pn,e)}localToWorld(e){return e.applyMatrix4(this.matrixWorld)}worldToLocal(e){return e.applyMatrix4(sn.copy(this.matrixWorld).invert())}lookAt(e,t,r){e.isVector3?on.copy(e):on.set(e,t,r);r=this.parent;this.updateWorldMatrix(!0,!1),ln.setFromMatrixPosition(this.matrixWorld),this.isCamera||this.isLight?sn.lookAt(ln,on,this.up):sn.lookAt(on,ln,this.up),this.quaternion.setFromRotationMatrix(sn),r&&(sn.extractRotation(r.matrixWorld),an.setFromRotationMatrix(sn),this.quaternion.premultiply(an.invert()))}add(e){if(1<arguments.length){for(let e=0;e<arguments.length;e++)this.add(arguments[e]);return this}return e===this?console.error("THREE.Object3D.add: object can't be added as a child of itself.",e):e&&e.isObject3D?(null!==e.parent&&e.parent.remove(e),(e.parent=this).children.push(e),e.dispatchEvent(mn)):console.error("THREE.Object3D.add: object not an instance of THREE.Object3D.",e),this}remove(e){if(1<arguments.length){for(let e=0;e<arguments.length;e++)this.remove(arguments[e]);return this}var t=this.children.indexOf(e);return-1!==t&&(e.parent=null,this.children.splice(t,1),e.dispatchEvent(fn)),this}removeFromParent(){const e=this.parent;return null!==e&&e.remove(this),this}clear(){for(let e=0;e<this.children.length;e++){const t=this.children[e];t.parent=null,t.dispatchEvent(fn)}return this.children.length=0,this}attach(e){return this.updateWorldMatrix(!0,!1),sn.copy(this.matrixWorld).invert(),null!==e.parent&&(e.parent.updateWorldMatrix(!0,!1),sn.multiply(e.parent.matrixWorld)),e.applyMatrix4(sn),this.add(e),e.updateWorldMatrix(!1,!0),this}getObjectById(e){return this.getObjectByProperty("id",e)}getObjectByName(e){return this.getObjectByProperty("name",e)}getObjectByProperty(r,n){if(this[r]===n)return this;for(let e=0,t=this.children.length;e<t;e++){const a=this.children[e];var i=a.getObjectByProperty(r,n);if(void 0!==i)return i}}getWorldPosition(e){return void 0===e&&(console.warn("THREE.Object3D: .getWorldPosition() target is now required"),e=new pr),this.updateWorldMatrix(!0,!1),e.setFromMatrixPosition(this.matrixWorld)}getWorldQuaternion(e){return void 0===e&&(console.warn("THREE.Object3D: .getWorldQuaternion() target is now required"),e=new dr),this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(ln,e,hn),e}getWorldScale(e){return void 0===e&&(console.warn("THREE.Object3D: .getWorldScale() target is now required"),e=new pr),this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(ln,cn,e),e}getWorldDirection(e){void 0===e&&(console.warn("THREE.Object3D: .getWorldDirection() target is now required"),e=new pr),this.updateWorldMatrix(!0,!1);var t=this.matrixWorld.elements;return e.set(t[8],t[9],t[10]).normalize()}raycast(){}traverse(r){r(this);const n=this.children;for(let e=0,t=n.length;e<t;e++)n[e].traverse(r)}traverseVisible(r){if(!1!==this.visible){r(this);const n=this.children;for(let e=0,t=n.length;e<t;e++)n[e].traverseVisible(r)}}traverseAncestors(e){const t=this.parent;null!==t&&(e(t),t.traverseAncestors(e))}updateMatrix(){this.matrix.compose(this.position,this.quaternion,this.scale),this.matrixWorldNeedsUpdate=!0}updateMatrixWorld(r){this.matrixAutoUpdate&&this.updateMatrix(),(this.matrixWorldNeedsUpdate||r)&&(null===this.parent?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),r=!(this.matrixWorldNeedsUpdate=!1));const n=this.children;for(let e=0,t=n.length;e<t;e++)n[e].updateMatrixWorld(r)}updateWorldMatrix(e,t){const r=this.parent;if(!0===e&&null!==r&&r.updateWorldMatrix(!0,!1),this.matrixAutoUpdate&&this.updateMatrix(),null===this.parent?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),!0===t){const n=this.children;for(let e=0,t=n.length;e<t;e++)n[e].updateWorldMatrix(!1,!0)}}toJSON(r){var e,t,n,i,a,s=void 0===r||"string"==typeof r;const o={};s&&(r={geometries:{},materials:{},textures:{},images:{},shapes:{},skeletons:{},animations:{}},o.metadata={version:4.5,type:"Object",generator:"Object3D.toJSON"});const l={};function h(e,t){return void 0===e[t.uuid]&&(e[t.uuid]=t.toJSON(r)),t.uuid}if(l.uuid=this.uuid,l.type=this.type,""!==this.name&&(l.name=this.name),!0===this.castShadow&&(l.castShadow=!0),!0===this.receiveShadow&&(l.receiveShadow=!0),!1===this.visible&&(l.visible=!1),!1===this.frustumCulled&&(l.frustumCulled=!1),0!==this.renderOrder&&(l.renderOrder=this.renderOrder),"{}"!==JSON.stringify(this.userData)&&(l.userData=this.userData),l.layers=this.layers.mask,l.matrix=this.matrix.toArray(),!1===this.matrixAutoUpdate&&(l.matrixAutoUpdate=!1),this.isInstancedMesh&&(l.type="InstancedMesh",l.count=this.count,l.instanceMatrix=this.instanceMatrix.toJSON(),null!==this.instanceColor&&(l.instanceColor=this.instanceColor.toJSON())),this.isMesh||this.isLine||this.isPoints){l.geometry=h(r.geometries,this.geometry);var c=this.geometry.parameters;if(void 0!==c&&void 0!==c.shapes){var u=c.shapes;if(Array.isArray(u))for(let e=0,t=u.length;e<t;e++){var d=u[e];h(r.shapes,d)}else h(r.shapes,u)}}if(this.isSkinnedMesh&&(l.bindMode=this.bindMode,l.bindMatrix=this.bindMatrix.toArray(),void 0!==this.skeleton&&(h(r.skeletons,this.skeleton),l.skeleton=this.skeleton.uuid)),void 0!==this.material)if(Array.isArray(this.material)){const f=[];for(let e=0,t=this.material.length;e<t;e++)f.push(h(r.materials,this.material[e]));l.material=f}else l.material=h(r.materials,this.material);if(0<this.children.length){l.children=[];for(let e=0;e<this.children.length;e++)l.children.push(this.children[e].toJSON(r).object)}if(0<this.animations.length){l.animations=[];for(let e=0;e<this.animations.length;e++){var p=this.animations[e];l.animations.push(h(r.animations,p))}}return s&&(e=m(r.geometries),t=m(r.materials),n=m(r.textures),i=m(r.images),a=m(r.shapes),c=m(r.skeletons),s=m(r.animations),0<e.length&&(o.geometries=e),0<t.length&&(o.materials=t),0<n.length&&(o.textures=n),0<i.length&&(o.images=i),0<a.length&&(o.shapes=a),0<c.length&&(o.skeletons=c),0<s.length&&(o.animations=s)),o.object=l,o;function m(e){const t=[];for(const r in e){const n=e[r];delete n.metadata,t.push(n)}return t}}clone(e){return(new this.constructor).copy(this,e)}copy(t,e=!0){if(this.name=t.name,this.up.copy(t.up),this.position.copy(t.position),this.rotation.order=t.rotation.order,this.quaternion.copy(t.quaternion),this.scale.copy(t.scale),this.matrix.copy(t.matrix),this.matrixWorld.copy(t.matrixWorld),this.matrixAutoUpdate=t.matrixAutoUpdate,this.matrixWorldNeedsUpdate=t.matrixWorldNeedsUpdate,this.layers.mask=t.layers.mask,this.visible=t.visible,this.castShadow=t.castShadow,this.receiveShadow=t.receiveShadow,this.frustumCulled=t.frustumCulled,this.renderOrder=t.renderOrder,this.userData=JSON.parse(JSON.stringify(t.userData)),!0===e)for(let e=0;e<t.children.length;e++){const r=t.children[e];this.add(r.clone())}return this}}gn.DefaultUp=new pr(0,1,0),gn.DefaultMatrixAutoUpdate=!0,gn.prototype.isObject3D=!0;const vn=new pr,yn=new pr,xn=new rr;class _n{constructor(e=new pr(1,0,0),t=0){this.normal=e,this.constant=t}set(e,t){return this.normal.copy(e),this.constant=t,this}setComponents(e,t,r,n){return this.normal.set(e,t,r),this.constant=n,this}setFromNormalAndCoplanarPoint(e,t){return this.normal.copy(e),this.constant=-t.dot(this.normal),this}setFromCoplanarPoints(e,t,r){t=vn.subVectors(r,t).cross(yn.subVectors(e,t)).normalize();return this.setFromNormalAndCoplanarPoint(t,e),this}copy(e){return this.normal.copy(e.normal),this.constant=e.constant,this}normalize(){var e=1/this.normal.length();return this.normal.multiplyScalar(e),this.constant*=e,this}negate(){return this.constant*=-1,this.normal.negate(),this}distanceToPoint(e){return this.normal.dot(e)+this.constant}distanceToSphere(e){return this.distanceToPoint(e.center)-e.radius}projectPoint(e,t){return void 0===t&&(console.warn("THREE.Plane: .projectPoint() target is now required"),t=new pr),t.copy(this.normal).multiplyScalar(-this.distanceToPoint(e)).add(e)}intersectLine(e,t){void 0===t&&(console.warn("THREE.Plane: .intersectLine() target is now required"),t=new pr);var r=e.delta(vn),n=this.normal.dot(r);if(0===n)return 0===this.distanceToPoint(e.start)?t.copy(e.start):null;n=-(e.start.dot(this.normal)+this.constant)/n;return n<0||1<n?null:t.copy(r).multiplyScalar(n).add(e.start)}intersectsLine(e){var t=this.distanceToPoint(e.start),e=this.distanceToPoint(e.end);return t<0&&0<e||e<0&&0<t}intersectsBox(e){return e.intersectsPlane(this)}intersectsSphere(e){return e.intersectsPlane(this)}coplanarPoint(e){return void 0===e&&(console.warn("THREE.Plane: .coplanarPoint() target is now required"),e=new pr),e.copy(this.normal).multiplyScalar(-this.constant)}applyMatrix4(e,t){t=t||xn.getNormalMatrix(e);const r=this.coplanarPoint(vn).applyMatrix4(e);t=this.normal.applyMatrix3(t).normalize();return this.constant=-r.dot(t),this}translate(e){return this.constant-=e.dot(this.normal),this}equals(e){return e.normal.equals(this.normal)&&e.constant===this.constant}clone(){return(new this.constructor).copy(this)}}_n.prototype.isPlane=!0;const Mn=new pr,wn=new pr,bn=new pr,En=new pr,Tn=new pr,Sn=new pr,An=new pr,Rn=new pr,Ln=new pr,Cn=new pr;class Pn{constructor(e=new pr,t=new pr,r=new pr){this.a=e,this.b=t,this.c=r}static getNormal(e,t,r,n){void 0===n&&(console.warn("THREE.Triangle: .getNormal() target is now required"),n=new pr),n.subVectors(r,t),Mn.subVectors(e,t),n.cross(Mn);t=n.lengthSq();return 0<t?n.multiplyScalar(1/Math.sqrt(t)):n.set(0,0,0)}static getBarycoord(e,t,r,n,i){Mn.subVectors(n,t),wn.subVectors(r,t),bn.subVectors(e,t);var a=Mn.dot(Mn),s=Mn.dot(wn),n=Mn.dot(bn),r=wn.dot(wn),e=wn.dot(bn),t=a*r-s*s;if(void 0===i&&(console.warn("THREE.Triangle: .getBarycoord() target is now required"),i=new pr),0==t)return i.set(-2,-1,-1);t=1/t,r=(r*n-s*e)*t,t*=a*e-s*n;return i.set(1-r-t,t,r)}static containsPoint(e,t,r,n){return this.getBarycoord(e,t,r,n,En),0<=En.x&&0<=En.y&&En.x+En.y<=1}static getUV(e,t,r,n,i,a,s,o){return this.getBarycoord(e,t,r,n,En),o.set(0,0),o.addScaledVector(i,En.x),o.addScaledVector(a,En.y),o.addScaledVector(s,En.z),o}static isFrontFacing(e,t,r,n){return Mn.subVectors(r,t),wn.subVectors(e,t),Mn.cross(wn).dot(n)<0}set(e,t,r){return this.a.copy(e),this.b.copy(t),this.c.copy(r),this}setFromPointsAndIndices(e,t,r,n){return this.a.copy(e[t]),this.b.copy(e[r]),this.c.copy(e[n]),this}clone(){return(new this.constructor).copy(this)}copy(e){return this.a.copy(e.a),this.b.copy(e.b),this.c.copy(e.c),this}getArea(){return Mn.subVectors(this.c,this.b),wn.subVectors(this.a,this.b),.5*Mn.cross(wn).length()}getMidpoint(e){return void 0===e&&(console.warn("THREE.Triangle: .getMidpoint() target is now required"),e=new pr),e.addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)}getNormal(e){return Pn.getNormal(this.a,this.b,this.c,e)}getPlane(e){return void 0===e&&(console.warn("THREE.Triangle: .getPlane() target is now required"),e=new _n),e.setFromCoplanarPoints(this.a,this.b,this.c)}getBarycoord(e,t){return Pn.getBarycoord(e,this.a,this.b,this.c,t)}getUV(e,t,r,n,i){return Pn.getUV(e,this.a,this.b,this.c,t,r,n,i)}containsPoint(e){return Pn.containsPoint(e,this.a,this.b,this.c)}isFrontFacing(e){return Pn.isFrontFacing(this.a,this.b,this.c,e)}intersectsBox(e){return e.intersectsTriangle(this)}closestPointToPoint(e,t){void 0===t&&(console.warn("THREE.Triangle: .closestPointToPoint() target is now required"),t=new pr);var r=this.a,n=this.b,i=this.c;let a,s;Tn.subVectors(n,r),Sn.subVectors(i,r),Rn.subVectors(e,r);var o=Tn.dot(Rn),l=Sn.dot(Rn);if(o<=0&&l<=0)return t.copy(r);Ln.subVectors(e,n);var h=Tn.dot(Ln),c=Sn.dot(Ln);if(0<=h&&c<=h)return t.copy(n);var u=o*c-h*l;if(u<=0&&0<=o&&h<=0)return a=o/(o-h),t.copy(r).addScaledVector(Tn,a);Cn.subVectors(e,i);var d=Tn.dot(Cn),e=Sn.dot(Cn);if(0<=e&&d<=e)return t.copy(i);o=d*l-o*e;if(o<=0&&0<=l&&e<=0)return s=l/(l-e),t.copy(r).addScaledVector(Sn,s);l=h*e-d*c;if(l<=0&&0<=c-h&&0<=d-e)return An.subVectors(i,n),s=(c-h)/(c-h+(d-e)),t.copy(n).addScaledVector(An,s);l=1/(l+o+u);return a=o*l,s=u*l,t.copy(r).addScaledVector(Tn,a).addScaledVector(Sn,s)}equals(e){return e.a.equals(this.a)&&e.b.equals(this.b)&&e.c.equals(this.c)}}let In=0;class Dn extends Vt{constructor(){super(),Object.defineProperty(this,"id",{value:In++}),this.uuid=qt(),this.name="",this.type="Material",this.fog=!0,this.blending=K,this.side=R,this.vertexColors=!1,this.opacity=1,this.transparent=!1,this.blendSrc=ue,this.blendDst=de,this.blendEquation=re,this.blendSrcAlpha=null,this.blendDstAlpha=null,this.blendEquationAlpha=null,this.depthFunc=Me,this.depthTest=!0,this.depthWrite=!0,this.stencilWriteMask=255,this.stencilFunc=519,this.stencilRef=0,this.stencilFuncMask=255,this.stencilFail=7680,this.stencilZFail=7680,this.stencilZPass=7680,this.stencilWrite=!1,this.clippingPlanes=null,this.clipIntersection=!1,this.clipShadows=!1,this.shadowSide=null,this.colorWrite=!0,this.precision=null,this.polygonOffset=!1,this.polygonOffsetFactor=0,this.polygonOffsetUnits=0,this.dithering=!1,this.alphaTest=0,this.alphaToCoverage=!1,this.premultipliedAlpha=!1,this.visible=!0,this.toneMapped=!0,this.userData={},this.version=0}onBuild(){}onBeforeCompile(){}customProgramCacheKey(){return this.onBeforeCompile.toString()}setValues(e){if(void 0!==e)for(const r in e){var t=e[r];if(void 0!==t)if("shading"!==r){const n=this[r];void 0!==n?n&&n.isColor?n.set(t):n&&n.isVector3&&t&&t.isVector3?n.copy(t):this[r]=t:console.warn("THREE."+this.type+": '"+r+"' is not a property of this material.")}else console.warn("THREE."+this.type+": .shading has been removed. Use the boolean .flatShading instead."),this.flatShading=1===t;else console.warn("THREE.Material: '"+r+"' parameter is undefined.")}}toJSON(e){var t=void 0===e||"string"==typeof e;t&&(e={textures:{},images:{}});const r={metadata:{version:4.5,type:"Material",generator:"Material.toJSON"}};function n(e){const t=[];for(const r in e){const n=e[r];delete n.metadata,t.push(n)}return t}return r.uuid=this.uuid,r.type=this.type,""!==this.name&&(r.name=this.name),this.color&&this.color.isColor&&(r.color=this.color.getHex()),void 0!==this.roughness&&(r.roughness=this.roughness),void 0!==this.metalness&&(r.metalness=this.metalness),this.sheen&&this.sheen.isColor&&(r.sheen=this.sheen.getHex()),this.emissive&&this.emissive.isColor&&(r.emissive=this.emissive.getHex()),this.emissiveIntensity&&1!==this.emissiveIntensity&&(r.emissiveIntensity=this.emissiveIntensity),this.specular&&this.specular.isColor&&(r.specular=this.specular.getHex()),void 0!==this.shininess&&(r.shininess=this.shininess),void 0!==this.clearcoat&&(r.clearcoat=this.clearcoat),void 0!==this.clearcoatRoughness&&(r.clearcoatRoughness=this.clearcoatRoughness),this.clearcoatMap&&this.clearcoatMap.isTexture&&(r.clearcoatMap=this.clearcoatMap.toJSON(e).uuid),this.clearcoatRoughnessMap&&this.clearcoatRoughnessMap.isTexture&&(r.clearcoatRoughnessMap=this.clearcoatRoughnessMap.toJSON(e).uuid),this.clearcoatNormalMap&&this.clearcoatNormalMap.isTexture&&(r.clearcoatNormalMap=this.clearcoatNormalMap.toJSON(e).uuid,r.clearcoatNormalScale=this.clearcoatNormalScale.toArray()),this.map&&this.map.isTexture&&(r.map=this.map.toJSON(e).uuid),this.matcap&&this.matcap.isTexture&&(r.matcap=this.matcap.toJSON(e).uuid),this.alphaMap&&this.alphaMap.isTexture&&(r.alphaMap=this.alphaMap.toJSON(e).uuid),this.lightMap&&this.lightMap.isTexture&&(r.lightMap=this.lightMap.toJSON(e).uuid,r.lightMapIntensity=this.lightMapIntensity),this.aoMap&&this.aoMap.isTexture&&(r.aoMap=this.aoMap.toJSON(e).uuid,r.aoMapIntensity=this.aoMapIntensity),this.bumpMap&&this.bumpMap.isTexture&&(r.bumpMap=this.bumpMap.toJSON(e).uuid,r.bumpScale=this.bumpScale),this.normalMap&&this.normalMap.isTexture&&(r.normalMap=this.normalMap.toJSON(e).uuid,r.normalMapType=this.normalMapType,r.normalScale=this.normalScale.toArray()),this.displacementMap&&this.displacementMap.isTexture&&(r.displacementMap=this.displacementMap.toJSON(e).uuid,r.displacementScale=this.displacementScale,r.displacementBias=this.displacementBias),this.roughnessMap&&this.roughnessMap.isTexture&&(r.roughnessMap=this.roughnessMap.toJSON(e).uuid),this.metalnessMap&&this.metalnessMap.isTexture&&(r.metalnessMap=this.metalnessMap.toJSON(e).uuid),this.emissiveMap&&this.emissiveMap.isTexture&&(r.emissiveMap=this.emissiveMap.toJSON(e).uuid),this.specularMap&&this.specularMap.isTexture&&(r.specularMap=this.specularMap.toJSON(e).uuid),this.envMap&&this.envMap.isTexture&&(r.envMap=this.envMap.toJSON(e).uuid,void 0!==this.combine&&(r.combine=this.combine)),void 0!==this.envMapIntensity&&(r.envMapIntensity=this.envMapIntensity),void 0!==this.reflectivity&&(r.reflectivity=this.reflectivity),void 0!==this.refractionRatio&&(r.refractionRatio=this.refractionRatio),this.gradientMap&&this.gradientMap.isTexture&&(r.gradientMap=this.gradientMap.toJSON(e).uuid),void 0!==this.transmission&&(r.transmission=this.transmission),this.transmissionMap&&this.transmissionMap.isTexture&&(r.transmissionMap=this.transmissionMap.toJSON(e).uuid),void 0!==this.thickness&&(r.thickness=this.thickness),this.thicknessMap&&this.thicknessMap.isTexture&&(r.thicknessMap=this.thicknessMap.toJSON(e).uuid),void 0!==this.attenuationDistance&&(r.attenuationDistance=this.attenuationDistance),void 0!==this.attenuationColor&&(r.attenuationColor=this.attenuationColor.getHex()),void 0!==this.size&&(r.size=this.size),null!==this.shadowSide&&(r.shadowSide=this.shadowSide),void 0!==this.sizeAttenuation&&(r.sizeAttenuation=this.sizeAttenuation),this.blending!==K&&(r.blending=this.blending),this.side!==R&&(r.side=this.side),this.vertexColors&&(r.vertexColors=!0),this.opacity<1&&(r.opacity=this.opacity),!0===this.transparent&&(r.transparent=this.transparent),r.depthFunc=this.depthFunc,r.depthTest=this.depthTest,r.depthWrite=this.depthWrite,r.colorWrite=this.colorWrite,r.stencilWrite=this.stencilWrite,r.stencilWriteMask=this.stencilWriteMask,r.stencilFunc=this.stencilFunc,r.stencilRef=this.stencilRef,r.stencilFuncMask=this.stencilFuncMask,r.stencilFail=this.stencilFail,r.stencilZFail=this.stencilZFail,r.stencilZPass=this.stencilZPass,this.rotation&&0!==this.rotation&&(r.rotation=this.rotation),!0===this.polygonOffset&&(r.polygonOffset=!0),0!==this.polygonOffsetFactor&&(r.polygonOffsetFactor=this.polygonOffsetFactor),0!==this.polygonOffsetUnits&&(r.polygonOffsetUnits=this.polygonOffsetUnits),this.linewidth&&1!==this.linewidth&&(r.linewidth=this.linewidth),void 0!==this.dashSize&&(r.dashSize=this.dashSize),void 0!==this.gapSize&&(r.gapSize=this.gapSize),void 0!==this.scale&&(r.scale=this.scale),!0===this.dithering&&(r.dithering=!0),0<this.alphaTest&&(r.alphaTest=this.alphaTest),!0===this.alphaToCoverage&&(r.alphaToCoverage=this.alphaToCoverage),!0===this.premultipliedAlpha&&(r.premultipliedAlpha=this.premultipliedAlpha),!0===this.wireframe&&(r.wireframe=this.wireframe),1<this.wireframeLinewidth&&(r.wireframeLinewidth=this.wireframeLinewidth),"round"!==this.wireframeLinecap&&(r.wireframeLinecap=this.wireframeLinecap),"round"!==this.wireframeLinejoin&&(r.wireframeLinejoin=this.wireframeLinejoin),!0===this.morphTargets&&(r.morphTargets=!0),!0===this.morphNormals&&(r.morphNormals=!0),!0===this.flatShading&&(r.flatShading=this.flatShading),!1===this.visible&&(r.visible=!1),!1===this.toneMapped&&(r.toneMapped=!1),"{}"!==JSON.stringify(this.userData)&&(r.userData=this.userData),t&&(t=n(e.textures),e=n(e.images),0<t.length&&(r.textures=t),0<e.length&&(r.images=e)),r}clone(){return(new this.constructor).copy(this)}copy(e){this.name=e.name,this.fog=e.fog,this.blending=e.blending,this.side=e.side,this.vertexColors=e.vertexColors,this.opacity=e.opacity,this.transparent=e.transparent,this.blendSrc=e.blendSrc,this.blendDst=e.blendDst,this.blendEquation=e.blendEquation,this.blendSrcAlpha=e.blendSrcAlpha,this.blendDstAlpha=e.blendDstAlpha,this.blendEquationAlpha=e.blendEquationAlpha,this.depthFunc=e.depthFunc,this.depthTest=e.depthTest,this.depthWrite=e.depthWrite,this.stencilWriteMask=e.stencilWriteMask,this.stencilFunc=e.stencilFunc,this.stencilRef=e.stencilRef,this.stencilFuncMask=e.stencilFuncMask,this.stencilFail=e.stencilFail,this.stencilZFail=e.stencilZFail,this.stencilZPass=e.stencilZPass,this.stencilWrite=e.stencilWrite;const t=e.clippingPlanes;let r=null;if(null!==t){var n=t.length;r=new Array(n);for(let e=0;e!==n;++e)r[e]=t[e].clone()}return this.clippingPlanes=r,this.clipIntersection=e.clipIntersection,this.clipShadows=e.clipShadows,this.shadowSide=e.shadowSide,this.colorWrite=e.colorWrite,this.precision=e.precision,this.polygonOffset=e.polygonOffset,this.polygonOffsetFactor=e.polygonOffsetFactor,this.polygonOffsetUnits=e.polygonOffsetUnits,this.dithering=e.dithering,this.alphaTest=e.alphaTest,this.alphaToCoverage=e.alphaToCoverage,this.premultipliedAlpha=e.premultipliedAlpha,this.visible=e.visible,this.toneMapped=e.toneMapped,this.userData=JSON.parse(JSON.stringify(e.userData)),this}dispose(){this.dispatchEvent({type:"dispose"})}set needsUpdate(e){!0===e&&this.version++}}Dn.prototype.isMaterial=!0;const Nn={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074},Fn={h:0,s:0,l:0},Bn={h:0,s:0,l:0};function Un(e,t,r){return r<0&&(r+=1),1<r&&--r,r<1/6?e+6*(t-e)*r:r<.5?t:r<2/3?e+6*(t-e)*(2/3-r):e}function On(e){return e<.04045?.0773993808*e:Math.pow(.9478672986*e+.0521327014,2.4)}function zn(e){return e<.0031308?12.92*e:1.055*Math.pow(e,.41666)-.055}class Hn{constructor(e,t,r){return void 0===t&&void 0===r?this.set(e):this.setRGB(e,t,r)}set(e){return e&&e.isColor?this.copy(e):"number"==typeof e?this.setHex(e):"string"==typeof e&&this.setStyle(e),this}setScalar(e){return this.r=e,this.g=e,this.b=e,this}setHex(e){return e=Math.floor(e),this.r=(e>>16&255)/255,this.g=(e>>8&255)/255,this.b=(255&e)/255,this}setRGB(e,t,r){return this.r=e,this.g=t,this.b=r,this}setHSL(e,t,r){return e=Zt(e,1),t=Yt(t,0,1),r=Yt(r,0,1),0===t?this.r=this.g=this.b=r:(this.r=Un(t=2*r-(r=r<=.5?r*(1+t):r+t-r*t),r,e+1/3),this.g=Un(t,r,e),this.b=Un(t,r,e-1/3)),this}setStyle(t){function r(e){void 0!==e&&parseFloat(e)<1&&console.warn("THREE.Color: Alpha component of "+t+" will be ignored.")}let n;if(n=/^((?:rgb|hsl)a?)\(([^\)]*)\)/.exec(t)){let e;var i=n[1],a=n[2];switch(i){case"rgb":case"rgba":if(e=/^\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(a))return this.r=Math.min(255,parseInt(e[1],10))/255,this.g=Math.min(255,parseInt(e[2],10))/255,this.b=Math.min(255,parseInt(e[3],10))/255,r(e[4]),this;if(e=/^\s*(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(a))return this.r=Math.min(100,parseInt(e[1],10))/100,this.g=Math.min(100,parseInt(e[2],10))/100,this.b=Math.min(100,parseInt(e[3],10))/100,r(e[4]),this;break;case"hsl":case"hsla":if(e=/^\s*(\d*\.?\d+)\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(a)){var s=parseFloat(e[1])/360,o=parseInt(e[2],10)/100,l=parseInt(e[3],10)/100;return r(e[4]),this.setHSL(s,o,l)}}}else if(n=/^\#([A-Fa-f\d]+)$/.exec(t)){const e=n[1];i=e.length;if(3===i)return this.r=parseInt(e.charAt(0)+e.charAt(0),16)/255,this.g=parseInt(e.charAt(1)+e.charAt(1),16)/255,this.b=parseInt(e.charAt(2)+e.charAt(2),16)/255,this;if(6===i)return this.r=parseInt(e.charAt(0)+e.charAt(1),16)/255,this.g=parseInt(e.charAt(2)+e.charAt(3),16)/255,this.b=parseInt(e.charAt(4)+e.charAt(5),16)/255,this}return t&&0<t.length?this.setColorName(t):this}setColorName(e){var t=Nn[e.toLowerCase()];return void 0!==t?this.setHex(t):console.warn("THREE.Color: Unknown color "+e),this}clone(){return new this.constructor(this.r,this.g,this.b)}copy(e){return this.r=e.r,this.g=e.g,this.b=e.b,this}copyGammaToLinear(e,t=2){return this.r=Math.pow(e.r,t),this.g=Math.pow(e.g,t),this.b=Math.pow(e.b,t),this}copyLinearToGamma(e,t=2){t=0<t?1/t:1;return this.r=Math.pow(e.r,t),this.g=Math.pow(e.g,t),this.b=Math.pow(e.b,t),this}convertGammaToLinear(e){return this.copyGammaToLinear(this,e),this}convertLinearToGamma(e){return this.copyLinearToGamma(this,e),this}copySRGBToLinear(e){return this.r=On(e.r),this.g=On(e.g),this.b=On(e.b),this}copyLinearToSRGB(e){return this.r=zn(e.r),this.g=zn(e.g),this.b=zn(e.b),this}convertSRGBToLinear(){return this.copySRGBToLinear(this),this}convertLinearToSRGB(){return this.copyLinearToSRGB(this),this}getHex(){return 255*this.r<<16^255*this.g<<8^255*this.b<<0}getHexString(){return("000000"+this.getHex().toString(16)).slice(-6)}getHSL(e){void 0===e&&(console.warn("THREE.Color: .getHSL() target is now required"),e={h:0,s:0,l:0});var t=this.r,r=this.g,n=this.b,i=Math.max(t,r,n),a=Math.min(t,r,n);let s,o;var l=(a+i)/2;if(a===i)s=0,o=0;else{var h=i-a;switch(o=l<=.5?h/(i+a):h/(2-i-a),i){case t:s=(r-n)/h+(r<n?6:0);break;case r:s=(n-t)/h+2;break;case n:s=(t-r)/h+4}s/=6}return e.h=s,e.s=o,e.l=l,e}getStyle(){return"rgb("+(255*this.r|0)+","+(255*this.g|0)+","+(255*this.b|0)+")"}offsetHSL(e,t,r){return this.getHSL(Fn),Fn.h+=e,Fn.s+=t,Fn.l+=r,this.setHSL(Fn.h,Fn.s,Fn.l),this}add(e){return this.r+=e.r,this.g+=e.g,this.b+=e.b,this}addColors(e,t){return this.r=e.r+t.r,this.g=e.g+t.g,this.b=e.b+t.b,this}addScalar(e){return this.r+=e,this.g+=e,this.b+=e,this}sub(e){return this.r=Math.max(0,this.r-e.r),this.g=Math.max(0,this.g-e.g),this.b=Math.max(0,this.b-e.b),this}multiply(e){return this.r*=e.r,this.g*=e.g,this.b*=e.b,this}multiplyScalar(e){return this.r*=e,this.g*=e,this.b*=e,this}lerp(e,t){return this.r+=(e.r-this.r)*t,this.g+=(e.g-this.g)*t,this.b+=(e.b-this.b)*t,this}lerpColors(e,t,r){return this.r=e.r+(t.r-e.r)*r,this.g=e.g+(t.g-e.g)*r,this.b=e.b+(t.b-e.b)*r,this}lerpHSL(e,t){this.getHSL(Fn),e.getHSL(Bn);var r=Jt(Fn.h,Bn.h,t),e=Jt(Fn.s,Bn.s,t),t=Jt(Fn.l,Bn.l,t);return this.setHSL(r,e,t),this}equals(e){return e.r===this.r&&e.g===this.g&&e.b===this.b}fromArray(e,t=0){return this.r=e[t],this.g=e[t+1],this.b=e[t+2],this}toArray(e=[],t=0){return e[t]=this.r,e[t+1]=this.g,e[t+2]=this.b,e}fromBufferAttribute(e,t){return this.r=e.getX(t),this.g=e.getY(t),this.b=e.getZ(t),!0===e.normalized&&(this.r/=255,this.g/=255,this.b/=255),this}toJSON(){return this.getHex()}}Hn.NAMES=Nn,Hn.prototype.isColor=!0,Hn.prototype.r=1,Hn.prototype.g=1,Hn.prototype.b=1;class Gn extends Dn{constructor(e){super(),this.type="MeshBasicMaterial",this.color=new Hn(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=E,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.morphTargets=!1,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.morphTargets=e.morphTargets,this}}Gn.prototype.isMeshBasicMaterial=!0;const Vn=new pr,kn=new tr;class Wn{constructor(e,t,r){if(Array.isArray(e))throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");this.name="",this.array=e,this.itemSize=t,this.count=void 0!==e?e.length/t:0,this.normalized=!0===r,this.usage=zt,this.updateRange={offset:0,count:-1},this.version=0}onUploadCallback(){}set needsUpdate(e){!0===e&&this.version++}setUsage(e){return this.usage=e,this}copy(e){return this.name=e.name,this.array=new e.array.constructor(e.array),this.itemSize=e.itemSize,this.count=e.count,this.normalized=e.normalized,this.usage=e.usage,this}copyAt(r,n,i){r*=this.itemSize,i*=n.itemSize;for(let e=0,t=this.itemSize;e<t;e++)this.array[r+e]=n.array[i+e];return this}copyArray(e){return this.array.set(e),this}copyColorsArray(r){const n=this.array;let i=0;for(let t=0,e=r.length;t<e;t++){let e=r[t];void 0===e&&(console.warn("THREE.BufferAttribute.copyColorsArray(): color is undefined",t),e=new Hn),n[i++]=e.r,n[i++]=e.g,n[i++]=e.b}return this}copyVector2sArray(r){const n=this.array;let i=0;for(let t=0,e=r.length;t<e;t++){let e=r[t];void 0===e&&(console.warn("THREE.BufferAttribute.copyVector2sArray(): vector is undefined",t),e=new tr),n[i++]=e.x,n[i++]=e.y}return this}copyVector3sArray(r){const n=this.array;let i=0;for(let t=0,e=r.length;t<e;t++){let e=r[t];void 0===e&&(console.warn("THREE.BufferAttribute.copyVector3sArray(): vector is undefined",t),e=new pr),n[i++]=e.x,n[i++]=e.y,n[i++]=e.z}return this}copyVector4sArray(r){const n=this.array;let i=0;for(let t=0,e=r.length;t<e;t++){let e=r[t];void 0===e&&(console.warn("THREE.BufferAttribute.copyVector4sArray(): vector is undefined",t),e=new lr),n[i++]=e.x,n[i++]=e.y,n[i++]=e.z,n[i++]=e.w}return this}applyMatrix3(r){if(2===this.itemSize)for(let e=0,t=this.count;e<t;e++)kn.fromBufferAttribute(this,e),kn.applyMatrix3(r),this.setXY(e,kn.x,kn.y);else if(3===this.itemSize)for(let e=0,t=this.count;e<t;e++)Vn.fromBufferAttribute(this,e),Vn.applyMatrix3(r),this.setXYZ(e,Vn.x,Vn.y,Vn.z);return this}applyMatrix4(r){for(let e=0,t=this.count;e<t;e++)Vn.x=this.getX(e),Vn.y=this.getY(e),Vn.z=this.getZ(e),Vn.applyMatrix4(r),this.setXYZ(e,Vn.x,Vn.y,Vn.z);return this}applyNormalMatrix(r){for(let e=0,t=this.count;e<t;e++)Vn.x=this.getX(e),Vn.y=this.getY(e),Vn.z=this.getZ(e),Vn.applyNormalMatrix(r),this.setXYZ(e,Vn.x,Vn.y,Vn.z);return this}transformDirection(r){for(let e=0,t=this.count;e<t;e++)Vn.x=this.getX(e),Vn.y=this.getY(e),Vn.z=this.getZ(e),Vn.transformDirection(r),this.setXYZ(e,Vn.x,Vn.y,Vn.z);return this}set(e,t=0){return this.array.set(e,t),this}getX(e){return this.array[e*this.itemSize]}setX(e,t){return this.array[e*this.itemSize]=t,this}getY(e){return this.array[e*this.itemSize+1]}setY(e,t){return this.array[e*this.itemSize+1]=t,this}getZ(e){return this.array[e*this.itemSize+2]}setZ(e,t){return this.array[e*this.itemSize+2]=t,this}getW(e){return this.array[e*this.itemSize+3]}setW(e,t){return this.array[e*this.itemSize+3]=t,this}setXY(e,t,r){return e*=this.itemSize,this.array[e+0]=t,this.array[e+1]=r,this}setXYZ(e,t,r,n){return e*=this.itemSize,this.array[e+0]=t,this.array[e+1]=r,this.array[e+2]=n,this}setXYZW(e,t,r,n,i){return e*=this.itemSize,this.array[e+0]=t,this.array[e+1]=r,this.array[e+2]=n,this.array[e+3]=i,this}onUpload(e){return this.onUploadCallback=e,this}clone(){return new this.constructor(this.array,this.itemSize).copy(this)}toJSON(){const e={itemSize:this.itemSize,type:this.array.constructor.name,array:Array.prototype.slice.call(this.array),normalized:this.normalized};return""!==this.name&&(e.name=this.name),this.usage!==zt&&(e.usage=this.usage),0===this.updateRange.offset&&-1===this.updateRange.count||(e.updateRange=this.updateRange),e}}Wn.prototype.isBufferAttribute=!0;class jn extends Wn{constructor(e,t,r){super(new Int8Array(e),t,r)}}class Xn extends Wn{constructor(e,t,r){super(new Uint8Array(e),t,r)}}class qn extends Wn{constructor(e,t,r){super(new Uint8ClampedArray(e),t,r)}}class Yn extends Wn{constructor(e,t,r){super(new Int16Array(e),t,r)}}class Zn extends Wn{constructor(e,t,r){super(new Uint16Array(e),t,r)}}class Jn extends Wn{constructor(e,t,r){super(new Int32Array(e),t,r)}}class Kn extends Wn{constructor(e,t,r){super(new Uint32Array(e),t,r)}}class Qn extends Wn{constructor(e,t,r){super(new Uint16Array(e),t,r)}}Qn.prototype.isFloat16BufferAttribute=!0;class $n extends Wn{constructor(e,t,r){super(new Float32Array(e),t,r)}}class ei extends Wn{constructor(e,t,r){super(new Float64Array(e),t,r)}}function ti(r){if(0===r.length)return-1/0;let n=r[0];for(let e=1,t=r.length;e<t;++e)r[e]>n&&(n=r[e]);return n}const ri={Int8Array:Int8Array,Uint8Array:Uint8Array,Uint8ClampedArray:Uint8ClampedArray,Int16Array:Int16Array,Uint16Array:Uint16Array,Int32Array:Int32Array,Uint32Array:Uint32Array,Float32Array:Float32Array,Float64Array:Float64Array};function ni(e,t){return new ri[e](t)}let ii=0;const ai=new Wr,si=new gn,oi=new pr,li=new gr,hi=new gr,ci=new pr;class ui extends Vt{constructor(){super(),Object.defineProperty(this,"id",{value:ii++}),this.uuid=qt(),this.name="",this.type="BufferGeometry",this.index=null,this.attributes={},this.morphAttributes={},this.morphTargetsRelative=!1,this.groups=[],this.boundingBox=null,this.boundingSphere=null,this.drawRange={start:0,count:1/0},this.userData={}}getIndex(){return this.index}setIndex(e){return Array.isArray(e)?this.index=new(65535<ti(e)?Kn:Zn)(e,1):this.index=e,this}getAttribute(e){return this.attributes[e]}setAttribute(e,t){return this.attributes[e]=t,this}deleteAttribute(e){return delete this.attributes[e],this}hasAttribute(e){return void 0!==this.attributes[e]}addGroup(e,t,r=0){this.groups.push({start:e,count:t,materialIndex:r})}clearGroups(){this.groups=[]}setDrawRange(e,t){this.drawRange.start=e,this.drawRange.count=t}applyMatrix4(e){const t=this.attributes.position;void 0!==t&&(t.applyMatrix4(e),t.needsUpdate=!0);const r=this.attributes.normal;var n;void 0!==r&&(n=(new rr).getNormalMatrix(e),r.applyNormalMatrix(n),r.needsUpdate=!0);const i=this.attributes.tangent;return void 0!==i&&(i.transformDirection(e),i.needsUpdate=!0),null!==this.boundingBox&&this.computeBoundingBox(),null!==this.boundingSphere&&this.computeBoundingSphere(),this}applyQuaternion(e){return ai.makeRotationFromQuaternion(e),this.applyMatrix4(ai),this}rotateX(e){return ai.makeRotationX(e),this.applyMatrix4(ai),this}rotateY(e){return ai.makeRotationY(e),this.applyMatrix4(ai),this}rotateZ(e){return ai.makeRotationZ(e),this.applyMatrix4(ai),this}translate(e,t,r){return ai.makeTranslation(e,t,r),this.applyMatrix4(ai),this}scale(e,t,r){return ai.makeScale(e,t,r),this.applyMatrix4(ai),this}lookAt(e){return si.lookAt(e),si.updateMatrix(),this.applyMatrix4(si.matrix),this}center(){return this.computeBoundingBox(),this.boundingBox.getCenter(oi).negate(),this.translate(oi.x,oi.y,oi.z),this}setFromPoints(r){const n=[];for(let e=0,t=r.length;e<t;e++){var i=r[e];n.push(i.x,i.y,i.z||0)}return this.setAttribute("position",new $n(n,3)),this}computeBoundingBox(){null===this.boundingBox&&(this.boundingBox=new gr);var e=this.attributes.position,r=this.morphAttributes.position;if(e&&e.isGLBufferAttribute)return console.error('THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box. Alternatively set "mesh.frustumCulled" to "false".',this),void this.boundingBox.set(new pr(-1/0,-1/0,-1/0),new pr(1/0,1/0,1/0));if(void 0!==e){if(this.boundingBox.setFromBufferAttribute(e),r)for(let e=0,t=r.length;e<t;e++){var n=r[e];li.setFromBufferAttribute(n),this.morphTargetsRelative?(ci.addVectors(this.boundingBox.min,li.min),this.boundingBox.expandByPoint(ci),ci.addVectors(this.boundingBox.max,li.max),this.boundingBox.expandByPoint(ci)):(this.boundingBox.expandByPoint(li.min),this.boundingBox.expandByPoint(li.max))}}else this.boundingBox.makeEmpty();(isNaN(this.boundingBox.min.x)||isNaN(this.boundingBox.min.y)||isNaN(this.boundingBox.min.z))&&console.error('THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The "position" attribute is likely to have NaN values.',this)}computeBoundingSphere(){null===this.boundingSphere&&(this.boundingSphere=new Fr);var n=this.attributes.position,i=this.morphAttributes.position;if(n&&n.isGLBufferAttribute)return console.error('THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere. Alternatively set "mesh.frustumCulled" to "false".',this),void this.boundingSphere.set(new pr,1/0);if(n){const l=this.boundingSphere.center;if(li.setFromBufferAttribute(n),i)for(let e=0,t=i.length;e<t;e++){var a=i[e];hi.setFromBufferAttribute(a),this.morphTargetsRelative?(ci.addVectors(li.min,hi.min),li.expandByPoint(ci),ci.addVectors(li.max,hi.max),li.expandByPoint(ci)):(li.expandByPoint(hi.min),li.expandByPoint(hi.max))}li.getCenter(l);let r=0;for(let e=0,t=n.count;e<t;e++)ci.fromBufferAttribute(n,e),r=Math.max(r,l.distanceToSquared(ci));if(i)for(let e=0,t=i.length;e<t;e++){var s=i[e],o=this.morphTargetsRelative;for(let e=0,t=s.count;e<t;e++)ci.fromBufferAttribute(s,e),o&&(oi.fromBufferAttribute(n,e),ci.add(oi)),r=Math.max(r,l.distanceToSquared(ci))}this.boundingSphere.radius=Math.sqrt(r),isNaN(this.boundingSphere.radius)&&console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.',this)}}computeFaceNormals(){}computeTangents(){var e=this.index,t=this.attributes;if(null!==e&&void 0!==t.position&&void 0!==t.normal&&void 0!==t.uv){var n=e.array;const c=t.position.array,u=t.normal.array,d=t.uv.array;var i=c.length/3;void 0===t.tangent&&this.setAttribute("tangent",new Wn(new Float32Array(4*i),4));const p=t.tangent.array,m=[],f=[];for(let e=0;e<i;e++)m[e]=new pr,f[e]=new pr;const g=new pr,v=new pr,y=new pr,x=new tr,_=new tr,M=new tr,w=new pr,b=new pr;let r=this.groups;0===r.length&&(r=[{start:0,count:n.length}]);for(let e=0,t=r.length;e<t;++e){var a=r[e],s=a.start;for(let e=s,t=s+a.count;e<t;e+=3)!function(e,t,r){g.fromArray(c,3*e),v.fromArray(c,3*t),y.fromArray(c,3*r),x.fromArray(d,2*e),_.fromArray(d,2*t),M.fromArray(d,2*r),v.sub(g),y.sub(g),_.sub(x),M.sub(x);var n=1/(_.x*M.y-M.x*_.y);isFinite(n)&&(w.copy(v).multiplyScalar(M.y).addScaledVector(y,-_.y).multiplyScalar(n),b.copy(y).multiplyScalar(_.x).addScaledVector(v,-M.x).multiplyScalar(n),m[e].add(w),m[t].add(w),m[r].add(w),f[e].add(b),f[t].add(b),f[r].add(b))}(n[e+0],n[e+1],n[e+2])}const E=new pr,T=new pr,S=new pr,A=new pr;for(let e=0,t=r.length;e<t;++e){var o=r[e],l=o.start;for(let e=l,t=l+o.count;e<t;e+=3)h(n[e+0]),h(n[e+1]),h(n[e+2])}function h(e){S.fromArray(u,3*e),A.copy(S);var t=m[e];E.copy(t),E.sub(S.multiplyScalar(S.dot(t))).normalize(),T.crossVectors(A,t);t=T.dot(f[e])<0?-1:1;p[4*e]=E.x,p[4*e+1]=E.y,p[4*e+2]=E.z,p[4*e+3]=t}}else console.error("THREE.BufferGeometry: .computeTangents() failed. Missing required attributes (index, position, normal or uv)")}computeVertexNormals(){const n=this.index;var i=this.getAttribute("position");if(void 0!==i){let r=this.getAttribute("normal");if(void 0===r)r=new Wn(new Float32Array(3*i.count),3),this.setAttribute("normal",r);else for(let e=0,t=r.count;e<t;e++)r.setXYZ(e,0,0,0);const l=new pr,h=new pr,c=new pr,u=new pr,d=new pr,p=new pr,m=new pr,f=new pr;if(n)for(let e=0,t=n.count;e<t;e+=3){var a=n.getX(e+0),s=n.getX(e+1),o=n.getX(e+2);l.fromBufferAttribute(i,a),h.fromBufferAttribute(i,s),c.fromBufferAttribute(i,o),m.subVectors(c,h),f.subVectors(l,h),m.cross(f),u.fromBufferAttribute(r,a),d.fromBufferAttribute(r,s),p.fromBufferAttribute(r,o),u.add(m),d.add(m),p.add(m),r.setXYZ(a,u.x,u.y,u.z),r.setXYZ(s,d.x,d.y,d.z),r.setXYZ(o,p.x,p.y,p.z)}else for(let e=0,t=i.count;e<t;e+=3)l.fromBufferAttribute(i,e+0),h.fromBufferAttribute(i,e+1),c.fromBufferAttribute(i,e+2),m.subVectors(c,h),f.subVectors(l,h),m.cross(f),r.setXYZ(e+0,m.x,m.y,m.z),r.setXYZ(e+1,m.x,m.y,m.z),r.setXYZ(e+2,m.x,m.y,m.z);this.normalizeNormals(),r.needsUpdate=!0}}merge(e,t){if(e&&e.isBufferGeometry){void 0===t&&(t=0,console.warn("THREE.BufferGeometry.merge(): Overwriting original geometry, starting at offset=0. Use BufferGeometryUtils.mergeBufferGeometries() for lossless merge."));var r=this.attributes;for(const s in r)if(void 0!==e.attributes[s]){const o=r[s].array;var n=e.attributes[s],i=n.array,n=n.itemSize*t,a=Math.min(i.length,o.length-n);for(let e=0,t=n;e<a;e++,t++)o[t]=i[e]}return this}console.error("THREE.BufferGeometry.merge(): geometry not an instance of THREE.BufferGeometry.",e)}normalizeNormals(){const r=this.attributes.normal;for(let e=0,t=r.count;e<t;e++)ci.fromBufferAttribute(r,e),ci.normalize(),r.setXYZ(e,ci.x,ci.y,ci.z)}toNonIndexed(){function r(e,r){const n=e.array;var i=e.itemSize,e=e.normalized;const a=new n.constructor(r.length*i);let s=0,o=0;for(let e=0,t=r.length;e<t;e++){s=r[e]*i;for(let e=0;e<i;e++)a[o++]=n[s++]}return new Wn(a,i,e)}if(null===this.index)return console.warn("THREE.BufferGeometry.toNonIndexed(): BufferGeometry is already non-indexed."),this;const n=new ui;var i=this.index.array,e=this.attributes;for(const c in e){var t=r(e[c],i);n.setAttribute(c,t)}var a=this.morphAttributes;for(const u in a){const d=[];var s=a[u];for(let e=0,t=s.length;e<t;e++){var o=r(s[e],i);d.push(o)}n.morphAttributes[u]=d}n.morphTargetsRelative=this.morphTargetsRelative;var l=this.groups;for(let e=0,t=l.length;e<t;e++){var h=l[e];n.addGroup(h.start,h.count,h.materialIndex)}return n}toJSON(){const r={metadata:{version:4.5,type:"BufferGeometry",generator:"BufferGeometry.toJSON"}};if(r.uuid=this.uuid,r.type=this.type,""!==this.name&&(r.name=this.name),0<Object.keys(this.userData).length&&(r.userData=this.userData),void 0!==this.parameters){var e=this.parameters;for(const l in e)void 0!==e[l]&&(r[l]=e[l]);return r}r.data={attributes:{}};var t=this.index;null!==t&&(r.data.index={type:t.array.constructor.name,array:Array.prototype.slice.call(t.array)});var n=this.attributes;for(const h in n){const c=n[h];r.data.attributes[h]=c.toJSON(r.data)}const i={};let a=!1;for(const u in this.morphAttributes){var s=this.morphAttributes[u];const d=[];for(let e=0,t=s.length;e<t;e++){const p=s[e];d.push(p.toJSON(r.data))}0<d.length&&(i[u]=d,a=!0)}a&&(r.data.morphAttributes=i,r.data.morphTargetsRelative=this.morphTargetsRelative);t=this.groups;0<t.length&&(r.data.groups=JSON.parse(JSON.stringify(t)));const o=this.boundingSphere;return null!==o&&(r.data.boundingSphere={center:o.center.toArray(),radius:o.radius}),r}clone(){return(new ui).copy(this)}copy(e){this.index=null,this.attributes={},this.morphAttributes={},this.groups=[],this.boundingBox=null,this.boundingSphere=null;var r={};this.name=e.name;const t=e.index;null!==t&&this.setIndex(t.clone(r));var n=e.attributes;for(const h in n){const c=n[h];this.setAttribute(h,c.clone(r))}var i=e.morphAttributes;for(const u in i){const d=[],p=i[u];for(let e=0,t=p.length;e<t;e++)d.push(p[e].clone(r));this.morphAttributes[u]=d}this.morphTargetsRelative=e.morphTargetsRelative;var a=e.groups;for(let e=0,t=a.length;e<t;e++){var s=a[e];this.addGroup(s.start,s.count,s.materialIndex)}const o=e.boundingBox;null!==o&&(this.boundingBox=o.clone());const l=e.boundingSphere;return null!==l&&(this.boundingSphere=l.clone()),this.drawRange.start=e.drawRange.start,this.drawRange.count=e.drawRange.count,this.userData=e.userData,this}dispose(){this.dispatchEvent({type:"dispose"})}}ui.prototype.isBufferGeometry=!0;const di=new Wr,pi=new kr,mi=new Fr,fi=new pr,gi=new pr,vi=new pr,yi=new pr,xi=new pr,_i=new pr,Mi=new pr,wi=new pr,bi=new pr,Ei=new tr,Ti=new tr,Si=new tr,Ai=new pr,Ri=new pr;class Li extends gn{constructor(e=new ui,t=new Gn){super(),this.type="Mesh",this.geometry=e,this.material=t,this.updateMorphTargets()}copy(e){return super.copy(e),void 0!==e.morphTargetInfluences&&(this.morphTargetInfluences=e.morphTargetInfluences.slice()),void 0!==e.morphTargetDictionary&&(this.morphTargetDictionary=Object.assign({},e.morphTargetDictionary)),this.material=e.material,this.geometry=e.geometry,this}updateMorphTargets(){var e=this.geometry;if(e.isBufferGeometry){var t=e.morphAttributes,r=Object.keys(t);if(0<r.length){var n=t[r[0]];if(void 0!==n){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let e=0,t=n.length;e<t;e++){var i=n[e].name||String(e);this.morphTargetInfluences.push(0),this.morphTargetDictionary[i]=e}}}}else{e=e.morphTargets;void 0!==e&&0<e.length&&console.error("THREE.Mesh.updateMorphTargets() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.")}}raycast(n,i){const e=this.geometry;var a=this.material,t=this.matrixWorld;if(void 0!==a&&(null===e.boundingSphere&&e.computeBoundingSphere(),mi.copy(e.boundingSphere),mi.applyMatrix4(t),!1!==n.ray.intersectsSphere(mi)&&(di.copy(t).invert(),pi.copy(n.ray).applyMatrix4(di),null===e.boundingBox||!1!==pi.intersectsBox(e.boundingBox)))){let r;if(e.isBufferGeometry){const L=e.index;var s=e.attributes.position,o=e.morphAttributes.position,l=e.morphTargetsRelative,h=e.attributes.uv,c=e.attributes.uv2,u=e.groups,d=e.drawRange;if(null!==L)if(Array.isArray(a))for(let e=0,t=u.length;e<t;e++){var p=u[e],m=a[p.materialIndex];for(let e=Math.max(p.start,d.start),t=Math.min(p.start+p.count,d.start+d.count);e<t;e+=3){var f=L.getX(e),g=L.getX(e+1),v=L.getX(e+2);r=Ci(this,m,n,pi,s,o,l,h,c,f,g,v),r&&(r.faceIndex=Math.floor(e/3),r.face.materialIndex=p.materialIndex,i.push(r))}}else for(let e=Math.max(0,d.start),t=Math.min(L.count,d.start+d.count);e<t;e+=3){var y=L.getX(e),x=L.getX(e+1),_=L.getX(e+2);r=Ci(this,a,n,pi,s,o,l,h,c,y,x,_),r&&(r.faceIndex=Math.floor(e/3),i.push(r))}else if(void 0!==s)if(Array.isArray(a))for(let e=0,t=u.length;e<t;e++){var M=u[e],w=a[M.materialIndex];for(let e=Math.max(M.start,d.start),t=Math.min(M.start+M.count,d.start+d.count);e<t;e+=3){var b=e,E=e+1,T=e+2;r=Ci(this,w,n,pi,s,o,l,h,c,b,E,T),r&&(r.faceIndex=Math.floor(e/3),r.face.materialIndex=M.materialIndex,i.push(r))}}else for(let e=Math.max(0,d.start),t=Math.min(s.count,d.start+d.count);e<t;e+=3){var S=e,A=e+1,R=e+2;r=Ci(this,a,n,pi,s,o,l,h,c,S,A,R),r&&(r.faceIndex=Math.floor(e/3),i.push(r))}}else e.isGeometry&&console.error("THREE.Mesh.raycast() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.")}}}function Ci(e,t,r,n,i,a,s,o,l,h,c,u){fi.fromBufferAttribute(i,h),gi.fromBufferAttribute(i,c),vi.fromBufferAttribute(i,u);var d=e.morphTargetInfluences;if(t.morphTargets&&a&&d){Mi.set(0,0,0),wi.set(0,0,0),bi.set(0,0,0);for(let e=0,t=a.length;e<t;e++){var p=d[e],m=a[e];0!==p&&(yi.fromBufferAttribute(m,h),xi.fromBufferAttribute(m,c),_i.fromBufferAttribute(m,u),s?(Mi.addScaledVector(yi,p),wi.addScaledVector(xi,p),bi.addScaledVector(_i,p)):(Mi.addScaledVector(yi.sub(fi),p),wi.addScaledVector(xi.sub(gi),p),bi.addScaledVector(_i.sub(vi),p)))}fi.add(Mi),gi.add(wi),vi.add(bi)}e.isSkinnedMesh&&(e.boneTransform(h,fi),e.boneTransform(c,gi),e.boneTransform(u,vi));const f=function(e,t,r,n,i,a,s,o){let l;return l=t.side===Y?n.intersectTriangle(s,a,i,!0,o):n.intersectTriangle(i,a,s,t.side!==Z,o),null===l?null:(Ri.copy(o),Ri.applyMatrix4(e.matrixWorld),(o=r.ray.origin.distanceTo(Ri))<r.near||o>r.far?null:{distance:o,point:Ri.clone(),object:e})}(e,t,r,n,fi,gi,vi,Ai);return f&&(o&&(Ei.fromBufferAttribute(o,h),Ti.fromBufferAttribute(o,c),Si.fromBufferAttribute(o,u),f.uv=Pn.getUV(Ai,fi,gi,vi,Ei,Ti,Si,new tr)),l&&(Ei.fromBufferAttribute(l,h),Ti.fromBufferAttribute(l,c),Si.fromBufferAttribute(l,u),f.uv2=Pn.getUV(Ai,fi,gi,vi,Ei,Ti,Si,new tr)),l={a:h,b:c,c:u,normal:new pr,materialIndex:0},Pn.getNormal(fi,gi,vi,l.normal),f.face=l),f}Li.prototype.isMesh=!0;class Pi extends ui{constructor(e=1,t=1,r=1,n=1,i=1,a=1){super(),this.type="BoxGeometry",this.parameters={width:e,height:t,depth:r,widthSegments:n,heightSegments:i,depthSegments:a};const A=this;n=Math.floor(n),i=Math.floor(i),a=Math.floor(a);const R=[],L=[],C=[],P=[];let I=0,D=0;function s(r,n,i,a,s,e,t,o,l,h,c){var u=e/l,d=t/h,p=e/2,m=t/2,f=o/2,g=l+1,v=h+1;let y=0,x=0;const _=new pr;for(let t=0;t<v;t++){var M=t*d-m;for(let e=0;e<g;e++){var w=e*u-p;_[r]=w*a,_[n]=M*s,_[i]=f,L.push(_.x,_.y,_.z),_[r]=0,_[n]=0,_[i]=0<o?1:-1,C.push(_.x,_.y,_.z),P.push(e/l),P.push(1-t/h),y+=1}}for(let t=0;t<h;t++)for(let e=0;e<l;e++){var b=I+e+g*t,E=I+e+g*(t+1),T=I+(e+1)+g*(t+1),S=I+(e+1)+g*t;R.push(b,E,S),R.push(E,T,S),x+=6}A.addGroup(D,x,c),D+=x,I+=y}s("z","y","x",-1,-1,r,t,e,a,i,0),s("z","y","x",1,-1,r,t,-e,a,i,1),s("x","z","y",1,1,e,r,t,n,a,2),s("x","z","y",1,-1,e,r,-t,n,a,3),s("x","y","z",1,-1,e,t,r,n,i,4),s("x","y","z",-1,-1,e,t,-r,n,i,5),this.setIndex(R),this.setAttribute("position",new $n(L,3)),this.setAttribute("normal",new $n(C,3)),this.setAttribute("uv",new $n(P,2))}}function Ii(e){const t={};for(const r in e){t[r]={};for(const n in e[r]){const i=e[r][n];i&&(i.isColor||i.isMatrix3||i.isMatrix4||i.isVector2||i.isVector3||i.isVector4||i.isTexture||i.isQuaternion)?t[r][n]=i.clone():Array.isArray(i)?t[r][n]=i.slice():t[r][n]=i}}return t}function Di(t){const r={};for(let e=0;e<t.length;e++){var n=Ii(t[e]);for(const i in n)r[i]=n[i]}return r}const Ni={clone:Ii,merge:Di};class Fi extends Dn{constructor(e){super(),this.type="ShaderMaterial",this.defines={},this.uniforms={},this.vertexShader="void main() {\n\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",this.fragmentShader="void main() {\n\tgl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\n}",this.linewidth=1,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.lights=!1,this.clipping=!1,this.morphTargets=!1,this.morphNormals=!1,this.extensions={derivatives:!1,fragDepth:!1,drawBuffers:!1,shaderTextureLOD:!1},this.defaultAttributeValues={color:[1,1,1],uv:[0,0],uv2:[0,0]},this.index0AttributeName=void 0,this.uniformsNeedUpdate=!1,this.glslVersion=null,void 0!==e&&(void 0!==e.attributes&&console.error("THREE.ShaderMaterial: attributes should now be defined in THREE.BufferGeometry instead."),this.setValues(e))}copy(e){return super.copy(e),this.fragmentShader=e.fragmentShader,this.vertexShader=e.vertexShader,this.uniforms=Ii(e.uniforms),this.defines=Object.assign({},e.defines),this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.lights=e.lights,this.clipping=e.clipping,this.morphTargets=e.morphTargets,this.morphNormals=e.morphNormals,this.extensions=Object.assign({},e.extensions),this.glslVersion=e.glslVersion,this}toJSON(e){const t=super.toJSON(e);t.glslVersion=this.glslVersion,t.uniforms={};for(const n in this.uniforms){const i=this.uniforms[n].value;i&&i.isTexture?t.uniforms[n]={type:"t",value:i.toJSON(e).uuid}:i&&i.isColor?t.uniforms[n]={type:"c",value:i.getHex()}:i&&i.isVector2?t.uniforms[n]={type:"v2",value:i.toArray()}:i&&i.isVector3?t.uniforms[n]={type:"v3",value:i.toArray()}:i&&i.isVector4?t.uniforms[n]={type:"v4",value:i.toArray()}:i&&i.isMatrix3?t.uniforms[n]={type:"m3",value:i.toArray()}:i&&i.isMatrix4?t.uniforms[n]={type:"m4",value:i.toArray()}:t.uniforms[n]={value:i}}0<Object.keys(this.defines).length&&(t.defines=this.defines),t.vertexShader=this.vertexShader,t.fragmentShader=this.fragmentShader;const r={};for(const a in this.extensions)!0===this.extensions[a]&&(r[a]=!0);return 0<Object.keys(r).length&&(t.extensions=r),t}}Fi.prototype.isShaderMaterial=!0;class Bi extends gn{constructor(){super(),this.type="Camera",this.matrixWorldInverse=new Wr,this.projectionMatrix=new Wr,this.projectionMatrixInverse=new Wr}copy(e,t){return super.copy(e,t),this.matrixWorldInverse.copy(e.matrixWorldInverse),this.projectionMatrix.copy(e.projectionMatrix),this.projectionMatrixInverse.copy(e.projectionMatrixInverse),this}getWorldDirection(e){void 0===e&&(console.warn("THREE.Camera: .getWorldDirection() target is now required"),e=new pr),this.updateWorldMatrix(!0,!1);var t=this.matrixWorld.elements;return e.set(-t[8],-t[9],-t[10]).normalize()}updateMatrixWorld(e){super.updateMatrixWorld(e),this.matrixWorldInverse.copy(this.matrixWorld).invert()}updateWorldMatrix(e,t){super.updateWorldMatrix(e,t),this.matrixWorldInverse.copy(this.matrixWorld).invert()}clone(){return(new this.constructor).copy(this)}}Bi.prototype.isCamera=!0;class Ui extends Bi{constructor(e=50,t=1,r=.1,n=2e3){super(),this.type="PerspectiveCamera",this.fov=e,this.zoom=1,this.near=r,this.far=n,this.focus=10,this.aspect=t,this.view=null,this.filmGauge=35,this.filmOffset=0,this.updateProjectionMatrix()}copy(e,t){return super.copy(e,t),this.fov=e.fov,this.zoom=e.zoom,this.near=e.near,this.far=e.far,this.focus=e.focus,this.aspect=e.aspect,this.view=null===e.view?null:Object.assign({},e.view),this.filmGauge=e.filmGauge,this.filmOffset=e.filmOffset,this}setFocalLength(e){e=.5*this.getFilmHeight()/e;this.fov=2*Xt*Math.atan(e),this.updateProjectionMatrix()}getFocalLength(){var e=Math.tan(.5*jt*this.fov);return.5*this.getFilmHeight()/e}getEffectiveFOV(){return 2*Xt*Math.atan(Math.tan(.5*jt*this.fov)/this.zoom)}getFilmWidth(){return this.filmGauge*Math.min(this.aspect,1)}getFilmHeight(){return this.filmGauge/Math.max(this.aspect,1)}setViewOffset(e,t,r,n,i,a){this.aspect=e/t,null===this.view&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=e,this.view.fullHeight=t,this.view.offsetX=r,this.view.offsetY=n,this.view.width=i,this.view.height=a,this.updateProjectionMatrix()}clearViewOffset(){null!==this.view&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){var e=this.near;let t=e*Math.tan(.5*jt*this.fov)/this.zoom,r=2*t,n=this.aspect*r,i=-.5*n;var a,s=this.view;null!==this.view&&this.view.enabled&&(a=s.fullWidth,o=s.fullHeight,i+=s.offsetX*n/a,t-=s.offsetY*r/o,n*=s.width/a,r*=s.height/o);var o=this.filmOffset;0!==o&&(i+=e*o/this.getFilmWidth()),this.projectionMatrix.makePerspective(i,i+n,t,t-r,e,this.far),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(e){const t=super.toJSON(e);return t.object.fov=this.fov,t.object.zoom=this.zoom,t.object.near=this.near,t.object.far=this.far,t.object.focus=this.focus,t.object.aspect=this.aspect,null!==this.view&&(t.object.view=Object.assign({},this.view)),t.object.filmGauge=this.filmGauge,t.object.filmOffset=this.filmOffset,t}}Ui.prototype.isPerspectiveCamera=!0;class Oi extends gn{constructor(e,t,r){if(super(),this.type="CubeCamera",!0===r.isWebGLCubeRenderTarget){this.renderTarget=r;const n=new Ui(90,1,e,t);n.layers=this.layers,n.up.set(0,-1,0),n.lookAt(new pr(1,0,0)),this.add(n);const i=new Ui(90,1,e,t);i.layers=this.layers,i.up.set(0,-1,0),i.lookAt(new pr(-1,0,0)),this.add(i);const a=new Ui(90,1,e,t);a.layers=this.layers,a.up.set(0,0,1),a.lookAt(new pr(0,1,0)),this.add(a);const s=new Ui(90,1,e,t);s.layers=this.layers,s.up.set(0,0,-1),s.lookAt(new pr(0,-1,0)),this.add(s);const o=new Ui(90,1,e,t);o.layers=this.layers,o.up.set(0,-1,0),o.lookAt(new pr(0,0,1)),this.add(o);const l=new Ui(90,1,e,t);l.layers=this.layers,l.up.set(0,-1,0),l.lookAt(new pr(0,0,-1)),this.add(l)}else console.error("THREE.CubeCamera: The constructor now expects an instance of WebGLCubeRenderTarget as third parameter.")}update(e,t){null===this.parent&&this.updateMatrixWorld();const r=this.renderTarget;var[n,i,a,s,o,l]=this.children,h=e.xr.enabled,c=e.getRenderTarget();e.xr.enabled=!1;var u=r.texture.generateMipmaps;r.texture.generateMipmaps=!1,e.setRenderTarget(r,0),e.render(t,n),e.setRenderTarget(r,1),e.render(t,i),e.setRenderTarget(r,2),e.render(t,a),e.setRenderTarget(r,3),e.render(t,s),e.setRenderTarget(r,4),e.render(t,o),r.texture.generateMipmaps=u,e.setRenderTarget(r,5),e.render(t,l),e.setRenderTarget(c),e.xr.enabled=h}}class zi extends sr{constructor(e,t,r,n,i,a,s,o,l,h){super(e=void 0!==e?e:[],t=void 0!==t?t:F,r,n,i,a,s=void 0!==s?s:Be,o,l,h),this._needsFlipEnvMap=!0,this.flipY=!1}get images(){return this.image}set images(e){this.image=e}}zi.prototype.isCubeTexture=!0;class Hi extends hr{constructor(e,t,r){Number.isInteger(t)&&(console.warn("THREE.WebGLCubeRenderTarget: constructor signature is now WebGLCubeRenderTarget( size, options )"),t=r),super(e,e,t),t=t||{},this.texture=new zi(void 0,t.mapping,t.wrapS,t.wrapT,t.magFilter,t.minFilter,t.format,t.type,t.anisotropy,t.encoding),this.texture.generateMipmaps=void 0!==t.generateMipmaps&&t.generateMipmaps,this.texture.minFilter=void 0!==t.minFilter?t.minFilter:k,this.texture._needsFlipEnvMap=!1}fromEquirectangularTexture(e,t){this.texture.type=t.type,this.texture.format=Ue,this.texture.encoding=t.encoding,this.texture.generateMipmaps=t.generateMipmaps,this.texture.minFilter=t.minFilter,this.texture.magFilter=t.magFilter;var r={uniforms:{tEquirect:{value:null}},vertexShader:`

				varying vec3 vWorldDirection;

				vec3 transformDirection( in vec3 dir, in mat4 matrix ) {

					return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );

				}

				void main() {

					vWorldDirection = transformDirection( position, modelMatrix );

					#include <begin_vertex>
					#include <project_vertex>

				}
			`,fragmentShader:`

				uniform sampler2D tEquirect;

				varying vec3 vWorldDirection;

				#include <common>

				void main() {

					vec3 direction = normalize( vWorldDirection );

					vec2 sampleUV = equirectUv( direction );

					gl_FragColor = texture2D( tEquirect, sampleUV );

				}
			`},n=new Pi(5,5,5);const i=new Fi({name:"CubemapFromEquirect",uniforms:Ii(r.uniforms),vertexShader:r.vertexShader,fragmentShader:r.fragmentShader,side:Y,blending:J});i.uniforms.tEquirect.value=t;const a=new Li(n,i);n=t.minFilter;t.minFilter===Pe&&(t.minFilter=k);const s=new Oi(1,10,this);return s.update(e,a),t.minFilter=n,a.geometry.dispose(),a.material.dispose(),this}clear(t,r,n,i){var e=t.getRenderTarget();for(let e=0;e<6;e++)t.setRenderTarget(this,e),t.clear(r,n,i);t.setRenderTarget(e)}}Hi.prototype.isWebGLCubeRenderTarget=!0;const Gi=new Fr,Vi=new pr;class ki{constructor(e=new _n,t=new _n,r=new _n,n=new _n,i=new _n,a=new _n){this.planes=[e,t,r,n,i,a]}set(e,t,r,n,i,a){const s=this.planes;return s[0].copy(e),s[1].copy(t),s[2].copy(r),s[3].copy(n),s[4].copy(i),s[5].copy(a),this}copy(t){const r=this.planes;for(let e=0;e<6;e++)r[e].copy(t.planes[e]);return this}setFromProjectionMatrix(e){const t=this.planes;var r=e.elements,n=r[0],i=r[1],a=r[2],s=r[3],o=r[4],l=r[5],h=r[6],c=r[7],u=r[8],d=r[9],p=r[10],m=r[11],f=r[12],g=r[13],e=r[14],r=r[15];return t[0].setComponents(s-n,c-o,m-u,r-f).normalize(),t[1].setComponents(s+n,c+o,m+u,r+f).normalize(),t[2].setComponents(s+i,c+l,m+d,r+g).normalize(),t[3].setComponents(s-i,c-l,m-d,r-g).normalize(),t[4].setComponents(s-a,c-h,m-p,r-e).normalize(),t[5].setComponents(s+a,c+h,m+p,r+e).normalize(),this}intersectsObject(e){const t=e.geometry;return null===t.boundingSphere&&t.computeBoundingSphere(),Gi.copy(t.boundingSphere).applyMatrix4(e.matrixWorld),this.intersectsSphere(Gi)}intersectsSprite(e){return Gi.center.set(0,0,0),Gi.radius=.7071067811865476,Gi.applyMatrix4(e.matrixWorld),this.intersectsSphere(Gi)}intersectsSphere(e){const t=this.planes;var r=e.center,n=-e.radius;for(let e=0;e<6;e++)if(t[e].distanceToPoint(r)<n)return!1;return!0}intersectsBox(t){var r=this.planes;for(let e=0;e<6;e++){const n=r[e];if(Vi.x=(0<n.normal.x?t.max:t.min).x,Vi.y=(0<n.normal.y?t.max:t.min).y,Vi.z=(0<n.normal.z?t.max:t.min).z,n.distanceToPoint(Vi)<0)return!1}return!0}containsPoint(t){const r=this.planes;for(let e=0;e<6;e++)if(r[e].distanceToPoint(t)<0)return!1;return!0}clone(){return(new this.constructor).copy(this)}}function Wi(){let r=null,e=!1,n=null,i=null;function a(e,t){n(e,t),i=r.requestAnimationFrame(a)}return{start:function(){!0!==e&&null!==n&&(i=r.requestAnimationFrame(a),e=!0)},stop:function(){r.cancelAnimationFrame(i),e=!1},setAnimationLoop:function(e){n=e},setContext:function(e){r=e}}}function ji(s,e){const o=e.isWebGL2,i=new WeakMap;return{get:function(e){return e.isInterleavedBufferAttribute&&(e=e.data),i.get(e)},remove:function(e){e.isInterleavedBufferAttribute&&(e=e.data);var t=i.get(e);t&&(s.deleteBuffer(t.buffer),i.delete(e))},update:function(e,t){if(e.isGLBufferAttribute){var r=i.get(e);(!r||r.version<e.version)&&i.set(e,{buffer:e.buffer,type:e.type,bytesPerElement:e.elementSize,version:e.version})}else{e.isInterleavedBufferAttribute&&(e=e.data);const n=i.get(e);void 0===n?i.set(e,function(e,t){var r=e.array,n=e.usage,i=s.createBuffer();s.bindBuffer(t,i),s.bufferData(t,r,n),e.onUploadCallback();let a=s.FLOAT;return r instanceof Float32Array?a=s.FLOAT:r instanceof Float64Array?console.warn("THREE.WebGLAttributes: Unsupported data buffer format: Float64Array."):r instanceof Uint16Array?e.isFloat16BufferAttribute?o?a=s.HALF_FLOAT:console.warn("THREE.WebGLAttributes: Usage of Float16BufferAttribute requires WebGL2."):a=s.UNSIGNED_SHORT:r instanceof Int16Array?a=s.SHORT:r instanceof Uint32Array?a=s.UNSIGNED_INT:r instanceof Int32Array?a=s.INT:r instanceof Int8Array?a=s.BYTE:(r instanceof Uint8Array||r instanceof Uint8ClampedArray)&&(a=s.UNSIGNED_BYTE),{buffer:i,type:a,bytesPerElement:r.BYTES_PER_ELEMENT,version:e.version}}(e,t)):n.version<e.version&&(function(e,t,r){const n=t.array,i=t.updateRange;s.bindBuffer(r,e),-1===i.count?s.bufferSubData(r,0,n):(o?s.bufferSubData(r,i.offset*n.BYTES_PER_ELEMENT,n,i.offset,i.count):s.bufferSubData(r,i.offset*n.BYTES_PER_ELEMENT,n.subarray(i.offset,i.offset+i.count)),i.count=-1)}(n.buffer,e,t),n.version=e.version)}}}}class Xi extends ui{constructor(e=1,t=1,r=1,n=1){super(),this.type="PlaneGeometry",this.parameters={width:e,height:t,widthSegments:r,heightSegments:n};var i=e/2,a=t/2,s=Math.floor(r),o=Math.floor(n),l=s+1,h=o+1,c=e/s,u=t/o;const d=[],p=[],m=[],f=[];for(let t=0;t<h;t++){var g=t*u-a;for(let e=0;e<l;e++){var v=e*c-i;p.push(v,-g,0),m.push(0,0,1),f.push(e/s),f.push(1-t/o)}}for(let t=0;t<o;t++)for(let e=0;e<s;e++){var y=e+l*t,x=e+l*(t+1),_=e+1+l*(t+1),M=e+1+l*t;d.push(y,x,M),d.push(x,_,M)}this.setIndex(d),this.setAttribute("position",new $n(p,3)),this.setAttribute("normal",new $n(m,3)),this.setAttribute("uv",new $n(f,2))}}const qi={alphamap_fragment:"#ifdef USE_ALPHAMAP\n\tdiffuseColor.a *= texture2D( alphaMap, vUv ).g;\n#endif",alphamap_pars_fragment:"#ifdef USE_ALPHAMAP\n\tuniform sampler2D alphaMap;\n#endif",alphatest_fragment:"#ifdef ALPHATEST\n\tif ( diffuseColor.a < ALPHATEST ) discard;\n#endif",aomap_fragment:"#ifdef USE_AOMAP\n\tfloat ambientOcclusion = ( texture2D( aoMap, vUv2 ).r - 1.0 ) * aoMapIntensity + 1.0;\n\treflectedLight.indirectDiffuse *= ambientOcclusion;\n\t#if defined( USE_ENVMAP ) && defined( STANDARD )\n\t\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\n\t\treflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.specularRoughness );\n\t#endif\n#endif",aomap_pars_fragment:"#ifdef USE_AOMAP\n\tuniform sampler2D aoMap;\n\tuniform float aoMapIntensity;\n#endif",begin_vertex:"vec3 transformed = vec3( position );",beginnormal_vertex:"vec3 objectNormal = vec3( normal );\n#ifdef USE_TANGENT\n\tvec3 objectTangent = vec3( tangent.xyz );\n#endif",bsdfs:"vec2 integrateSpecularBRDF( const in float dotNV, const in float roughness ) {\n\tconst vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );\n\tconst vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );\n\tvec4 r = roughness * c0 + c1;\n\tfloat a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;\n\treturn vec2( -1.04, 1.04 ) * a004 + r.zw;\n}\nfloat punctualLightIntensityToIrradianceFactor( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {\n#if defined ( PHYSICALLY_CORRECT_LIGHTS )\n\tfloat distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );\n\tif( cutoffDistance > 0.0 ) {\n\t\tdistanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );\n\t}\n\treturn distanceFalloff;\n#else\n\tif( cutoffDistance > 0.0 && decayExponent > 0.0 ) {\n\t\treturn pow( saturate( -lightDistance / cutoffDistance + 1.0 ), decayExponent );\n\t}\n\treturn 1.0;\n#endif\n}\nvec3 BRDF_Diffuse_Lambert( const in vec3 diffuseColor ) {\n\treturn RECIPROCAL_PI * diffuseColor;\n}\nvec3 F_Schlick( const in vec3 specularColor, const in float dotLH ) {\n\tfloat fresnel = exp2( ( -5.55473 * dotLH - 6.98316 ) * dotLH );\n\treturn ( 1.0 - specularColor ) * fresnel + specularColor;\n}\nvec3 F_Schlick_RoughnessDependent( const in vec3 F0, const in float dotNV, const in float roughness ) {\n\tfloat fresnel = exp2( ( -5.55473 * dotNV - 6.98316 ) * dotNV );\n\tvec3 Fr = max( vec3( 1.0 - roughness ), F0 ) - F0;\n\treturn Fr * fresnel + F0;\n}\nfloat G_GGX_Smith( const in float alpha, const in float dotNL, const in float dotNV ) {\n\tfloat a2 = pow2( alpha );\n\tfloat gl = dotNL + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\n\tfloat gv = dotNV + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\n\treturn 1.0 / ( gl * gv );\n}\nfloat G_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {\n\tfloat a2 = pow2( alpha );\n\tfloat gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\n\tfloat gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\n\treturn 0.5 / max( gv + gl, EPSILON );\n}\nfloat D_GGX( const in float alpha, const in float dotNH ) {\n\tfloat a2 = pow2( alpha );\n\tfloat denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;\n\treturn RECIPROCAL_PI * a2 / pow2( denom );\n}\nvec3 BRDF_Specular_GGX( const in IncidentLight incidentLight, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float roughness ) {\n\tfloat alpha = pow2( roughness );\n\tvec3 halfDir = normalize( incidentLight.direction + viewDir );\n\tfloat dotNL = saturate( dot( normal, incidentLight.direction ) );\n\tfloat dotNV = saturate( dot( normal, viewDir ) );\n\tfloat dotNH = saturate( dot( normal, halfDir ) );\n\tfloat dotLH = saturate( dot( incidentLight.direction, halfDir ) );\n\tvec3 F = F_Schlick( specularColor, dotLH );\n\tfloat G = G_GGX_SmithCorrelated( alpha, dotNL, dotNV );\n\tfloat D = D_GGX( alpha, dotNH );\n\treturn F * ( G * D );\n}\nvec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {\n\tconst float LUT_SIZE = 64.0;\n\tconst float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;\n\tconst float LUT_BIAS = 0.5 / LUT_SIZE;\n\tfloat dotNV = saturate( dot( N, V ) );\n\tvec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );\n\tuv = uv * LUT_SCALE + LUT_BIAS;\n\treturn uv;\n}\nfloat LTC_ClippedSphereFormFactor( const in vec3 f ) {\n\tfloat l = length( f );\n\treturn max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );\n}\nvec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {\n\tfloat x = dot( v1, v2 );\n\tfloat y = abs( x );\n\tfloat a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;\n\tfloat b = 3.4175940 + ( 4.1616724 + y ) * y;\n\tfloat v = a / b;\n\tfloat theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;\n\treturn cross( v1, v2 ) * theta_sintheta;\n}\nvec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {\n\tvec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];\n\tvec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];\n\tvec3 lightNormal = cross( v1, v2 );\n\tif( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );\n\tvec3 T1, T2;\n\tT1 = normalize( V - N * dot( V, N ) );\n\tT2 = - cross( N, T1 );\n\tmat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );\n\tvec3 coords[ 4 ];\n\tcoords[ 0 ] = mat * ( rectCoords[ 0 ] - P );\n\tcoords[ 1 ] = mat * ( rectCoords[ 1 ] - P );\n\tcoords[ 2 ] = mat * ( rectCoords[ 2 ] - P );\n\tcoords[ 3 ] = mat * ( rectCoords[ 3 ] - P );\n\tcoords[ 0 ] = normalize( coords[ 0 ] );\n\tcoords[ 1 ] = normalize( coords[ 1 ] );\n\tcoords[ 2 ] = normalize( coords[ 2 ] );\n\tcoords[ 3 ] = normalize( coords[ 3 ] );\n\tvec3 vectorFormFactor = vec3( 0.0 );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );\n\tfloat result = LTC_ClippedSphereFormFactor( vectorFormFactor );\n\treturn vec3( result );\n}\nvec3 BRDF_Specular_GGX_Environment( const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float roughness ) {\n\tfloat dotNV = saturate( dot( normal, viewDir ) );\n\tvec2 brdf = integrateSpecularBRDF( dotNV, roughness );\n\treturn specularColor * brdf.x + brdf.y;\n}\nvoid BRDF_Specular_Multiscattering_Environment( const in GeometricContext geometry, const in vec3 specularColor, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {\n\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\n\tvec3 F = F_Schlick_RoughnessDependent( specularColor, dotNV, roughness );\n\tvec2 brdf = integrateSpecularBRDF( dotNV, roughness );\n\tvec3 FssEss = F * brdf.x + brdf.y;\n\tfloat Ess = brdf.x + brdf.y;\n\tfloat Ems = 1.0 - Ess;\n\tvec3 Favg = specularColor + ( 1.0 - specularColor ) * 0.047619;\tvec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );\n\tsingleScatter += FssEss;\n\tmultiScatter += Fms * Ems;\n}\nfloat G_BlinnPhong_Implicit( ) {\n\treturn 0.25;\n}\nfloat D_BlinnPhong( const in float shininess, const in float dotNH ) {\n\treturn RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );\n}\nvec3 BRDF_Specular_BlinnPhong( const in IncidentLight incidentLight, const in GeometricContext geometry, const in vec3 specularColor, const in float shininess ) {\n\tvec3 halfDir = normalize( incidentLight.direction + geometry.viewDir );\n\tfloat dotNH = saturate( dot( geometry.normal, halfDir ) );\n\tfloat dotLH = saturate( dot( incidentLight.direction, halfDir ) );\n\tvec3 F = F_Schlick( specularColor, dotLH );\n\tfloat G = G_BlinnPhong_Implicit( );\n\tfloat D = D_BlinnPhong( shininess, dotNH );\n\treturn F * ( G * D );\n}\nfloat GGXRoughnessToBlinnExponent( const in float ggxRoughness ) {\n\treturn ( 2.0 / pow2( ggxRoughness + 0.0001 ) - 2.0 );\n}\nfloat BlinnExponentToGGXRoughness( const in float blinnExponent ) {\n\treturn sqrt( 2.0 / ( blinnExponent + 2.0 ) );\n}\n#if defined( USE_SHEEN )\nfloat D_Charlie(float roughness, float NoH) {\n\tfloat invAlpha = 1.0 / roughness;\n\tfloat cos2h = NoH * NoH;\n\tfloat sin2h = max(1.0 - cos2h, 0.0078125);\treturn (2.0 + invAlpha) * pow(sin2h, invAlpha * 0.5) / (2.0 * PI);\n}\nfloat V_Neubelt(float NoV, float NoL) {\n\treturn saturate(1.0 / (4.0 * (NoL + NoV - NoL * NoV)));\n}\nvec3 BRDF_Specular_Sheen( const in float roughness, const in vec3 L, const in GeometricContext geometry, vec3 specularColor ) {\n\tvec3 N = geometry.normal;\n\tvec3 V = geometry.viewDir;\n\tvec3 H = normalize( V + L );\n\tfloat dotNH = saturate( dot( N, H ) );\n\treturn specularColor * D_Charlie( roughness, dotNH ) * V_Neubelt( dot(N, V), dot(N, L) );\n}\n#endif",bumpmap_pars_fragment:"#ifdef USE_BUMPMAP\n\tuniform sampler2D bumpMap;\n\tuniform float bumpScale;\n\tvec2 dHdxy_fwd() {\n\t\tvec2 dSTdx = dFdx( vUv );\n\t\tvec2 dSTdy = dFdy( vUv );\n\t\tfloat Hll = bumpScale * texture2D( bumpMap, vUv ).x;\n\t\tfloat dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;\n\t\tfloat dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;\n\t\treturn vec2( dBx, dBy );\n\t}\n\tvec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy, float faceDirection ) {\n\t\tvec3 vSigmaX = vec3( dFdx( surf_pos.x ), dFdx( surf_pos.y ), dFdx( surf_pos.z ) );\n\t\tvec3 vSigmaY = vec3( dFdy( surf_pos.x ), dFdy( surf_pos.y ), dFdy( surf_pos.z ) );\n\t\tvec3 vN = surf_norm;\n\t\tvec3 R1 = cross( vSigmaY, vN );\n\t\tvec3 R2 = cross( vN, vSigmaX );\n\t\tfloat fDet = dot( vSigmaX, R1 ) * faceDirection;\n\t\tvec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\n\t\treturn normalize( abs( fDet ) * surf_norm - vGrad );\n\t}\n#endif",clipping_planes_fragment:"#if NUM_CLIPPING_PLANES > 0\n\tvec4 plane;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {\n\t\tplane = clippingPlanes[ i ];\n\t\tif ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;\n\t}\n\t#pragma unroll_loop_end\n\t#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES\n\t\tbool clipped = true;\n\t\t#pragma unroll_loop_start\n\t\tfor ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {\n\t\t\tplane = clippingPlanes[ i ];\n\t\t\tclipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;\n\t\t}\n\t\t#pragma unroll_loop_end\n\t\tif ( clipped ) discard;\n\t#endif\n#endif",clipping_planes_pars_fragment:"#if NUM_CLIPPING_PLANES > 0\n\tvarying vec3 vClipPosition;\n\tuniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];\n#endif",clipping_planes_pars_vertex:"#if NUM_CLIPPING_PLANES > 0\n\tvarying vec3 vClipPosition;\n#endif",clipping_planes_vertex:"#if NUM_CLIPPING_PLANES > 0\n\tvClipPosition = - mvPosition.xyz;\n#endif",color_fragment:"#if defined( USE_COLOR_ALPHA )\n\tdiffuseColor *= vColor;\n#elif defined( USE_COLOR )\n\tdiffuseColor.rgb *= vColor;\n#endif",color_pars_fragment:"#if defined( USE_COLOR_ALPHA )\n\tvarying vec4 vColor;\n#elif defined( USE_COLOR )\n\tvarying vec3 vColor;\n#endif",color_pars_vertex:"#if defined( USE_COLOR_ALPHA )\n\tvarying vec4 vColor;\n#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )\n\tvarying vec3 vColor;\n#endif",color_vertex:"#if defined( USE_COLOR_ALPHA )\n\tvColor = vec4( 1.0 );\n#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )\n\tvColor = vec3( 1.0 );\n#endif\n#ifdef USE_COLOR\n\tvColor *= color;\n#endif\n#ifdef USE_INSTANCING_COLOR\n\tvColor.xyz *= instanceColor.xyz;\n#endif",common:"#define PI 3.141592653589793\n#define PI2 6.283185307179586\n#define PI_HALF 1.5707963267948966\n#define RECIPROCAL_PI 0.3183098861837907\n#define RECIPROCAL_PI2 0.15915494309189535\n#define EPSILON 1e-6\n#ifndef saturate\n#define saturate(a) clamp( a, 0.0, 1.0 )\n#endif\n#define whiteComplement(a) ( 1.0 - saturate( a ) )\nfloat pow2( const in float x ) { return x*x; }\nfloat pow3( const in float x ) { return x*x*x; }\nfloat pow4( const in float x ) { float x2 = x*x; return x2*x2; }\nfloat average( const in vec3 color ) { return dot( color, vec3( 0.3333 ) ); }\nhighp float rand( const in vec2 uv ) {\n\tconst highp float a = 12.9898, b = 78.233, c = 43758.5453;\n\thighp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );\n\treturn fract(sin(sn) * c);\n}\n#ifdef HIGH_PRECISION\n\tfloat precisionSafeLength( vec3 v ) { return length( v ); }\n#else\n\tfloat max3( vec3 v ) { return max( max( v.x, v.y ), v.z ); }\n\tfloat precisionSafeLength( vec3 v ) {\n\t\tfloat maxComponent = max3( abs( v ) );\n\t\treturn length( v / maxComponent ) * maxComponent;\n\t}\n#endif\nstruct IncidentLight {\n\tvec3 color;\n\tvec3 direction;\n\tbool visible;\n};\nstruct ReflectedLight {\n\tvec3 directDiffuse;\n\tvec3 directSpecular;\n\tvec3 indirectDiffuse;\n\tvec3 indirectSpecular;\n};\nstruct GeometricContext {\n\tvec3 position;\n\tvec3 normal;\n\tvec3 viewDir;\n#ifdef CLEARCOAT\n\tvec3 clearcoatNormal;\n#endif\n};\nvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\n\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\n}\nvec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {\n\treturn normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );\n}\nvec3 projectOnPlane(in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\n\tfloat distance = dot( planeNormal, point - pointOnPlane );\n\treturn - distance * planeNormal + point;\n}\nfloat sideOfPlane( in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\n\treturn sign( dot( point - pointOnPlane, planeNormal ) );\n}\nvec3 linePlaneIntersect( in vec3 pointOnLine, in vec3 lineDirection, in vec3 pointOnPlane, in vec3 planeNormal ) {\n\treturn lineDirection * ( dot( planeNormal, pointOnPlane - pointOnLine ) / dot( planeNormal, lineDirection ) ) + pointOnLine;\n}\nmat3 transposeMat3( const in mat3 m ) {\n\tmat3 tmp;\n\ttmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );\n\ttmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );\n\ttmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );\n\treturn tmp;\n}\nfloat linearToRelativeLuminance( const in vec3 color ) {\n\tvec3 weights = vec3( 0.2126, 0.7152, 0.0722 );\n\treturn dot( weights, color.rgb );\n}\nbool isPerspectiveMatrix( mat4 m ) {\n\treturn m[ 2 ][ 3 ] == - 1.0;\n}\nvec2 equirectUv( in vec3 dir ) {\n\tfloat u = atan( dir.z, dir.x ) * RECIPROCAL_PI2 + 0.5;\n\tfloat v = asin( clamp( dir.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\n\treturn vec2( u, v );\n}",cube_uv_reflection_fragment:"#ifdef ENVMAP_TYPE_CUBE_UV\n\t#define cubeUV_maxMipLevel 8.0\n\t#define cubeUV_minMipLevel 4.0\n\t#define cubeUV_maxTileSize 256.0\n\t#define cubeUV_minTileSize 16.0\n\tfloat getFace( vec3 direction ) {\n\t\tvec3 absDirection = abs( direction );\n\t\tfloat face = - 1.0;\n\t\tif ( absDirection.x > absDirection.z ) {\n\t\t\tif ( absDirection.x > absDirection.y )\n\t\t\t\tface = direction.x > 0.0 ? 0.0 : 3.0;\n\t\t\telse\n\t\t\t\tface = direction.y > 0.0 ? 1.0 : 4.0;\n\t\t} else {\n\t\t\tif ( absDirection.z > absDirection.y )\n\t\t\t\tface = direction.z > 0.0 ? 2.0 : 5.0;\n\t\t\telse\n\t\t\t\tface = direction.y > 0.0 ? 1.0 : 4.0;\n\t\t}\n\t\treturn face;\n\t}\n\tvec2 getUV( vec3 direction, float face ) {\n\t\tvec2 uv;\n\t\tif ( face == 0.0 ) {\n\t\t\tuv = vec2( direction.z, direction.y ) / abs( direction.x );\n\t\t} else if ( face == 1.0 ) {\n\t\t\tuv = vec2( - direction.x, - direction.z ) / abs( direction.y );\n\t\t} else if ( face == 2.0 ) {\n\t\t\tuv = vec2( - direction.x, direction.y ) / abs( direction.z );\n\t\t} else if ( face == 3.0 ) {\n\t\t\tuv = vec2( - direction.z, direction.y ) / abs( direction.x );\n\t\t} else if ( face == 4.0 ) {\n\t\t\tuv = vec2( - direction.x, direction.z ) / abs( direction.y );\n\t\t} else {\n\t\t\tuv = vec2( direction.x, direction.y ) / abs( direction.z );\n\t\t}\n\t\treturn 0.5 * ( uv + 1.0 );\n\t}\n\tvec3 bilinearCubeUV( sampler2D envMap, vec3 direction, float mipInt ) {\n\t\tfloat face = getFace( direction );\n\t\tfloat filterInt = max( cubeUV_minMipLevel - mipInt, 0.0 );\n\t\tmipInt = max( mipInt, cubeUV_minMipLevel );\n\t\tfloat faceSize = exp2( mipInt );\n\t\tfloat texelSize = 1.0 / ( 3.0 * cubeUV_maxTileSize );\n\t\tvec2 uv = getUV( direction, face ) * ( faceSize - 1.0 );\n\t\tvec2 f = fract( uv );\n\t\tuv += 0.5 - f;\n\t\tif ( face > 2.0 ) {\n\t\t\tuv.y += faceSize;\n\t\t\tface -= 3.0;\n\t\t}\n\t\tuv.x += face * faceSize;\n\t\tif ( mipInt < cubeUV_maxMipLevel ) {\n\t\t\tuv.y += 2.0 * cubeUV_maxTileSize;\n\t\t}\n\t\tuv.y += filterInt * 2.0 * cubeUV_minTileSize;\n\t\tuv.x += 3.0 * max( 0.0, cubeUV_maxTileSize - 2.0 * faceSize );\n\t\tuv *= texelSize;\n\t\tvec3 tl = envMapTexelToLinear( texture2D( envMap, uv ) ).rgb;\n\t\tuv.x += texelSize;\n\t\tvec3 tr = envMapTexelToLinear( texture2D( envMap, uv ) ).rgb;\n\t\tuv.y += texelSize;\n\t\tvec3 br = envMapTexelToLinear( texture2D( envMap, uv ) ).rgb;\n\t\tuv.x -= texelSize;\n\t\tvec3 bl = envMapTexelToLinear( texture2D( envMap, uv ) ).rgb;\n\t\tvec3 tm = mix( tl, tr, f.x );\n\t\tvec3 bm = mix( bl, br, f.x );\n\t\treturn mix( tm, bm, f.y );\n\t}\n\t#define r0 1.0\n\t#define v0 0.339\n\t#define m0 - 2.0\n\t#define r1 0.8\n\t#define v1 0.276\n\t#define m1 - 1.0\n\t#define r4 0.4\n\t#define v4 0.046\n\t#define m4 2.0\n\t#define r5 0.305\n\t#define v5 0.016\n\t#define m5 3.0\n\t#define r6 0.21\n\t#define v6 0.0038\n\t#define m6 4.0\n\tfloat roughnessToMip( float roughness ) {\n\t\tfloat mip = 0.0;\n\t\tif ( roughness >= r1 ) {\n\t\t\tmip = ( r0 - roughness ) * ( m1 - m0 ) / ( r0 - r1 ) + m0;\n\t\t} else if ( roughness >= r4 ) {\n\t\t\tmip = ( r1 - roughness ) * ( m4 - m1 ) / ( r1 - r4 ) + m1;\n\t\t} else if ( roughness >= r5 ) {\n\t\t\tmip = ( r4 - roughness ) * ( m5 - m4 ) / ( r4 - r5 ) + m4;\n\t\t} else if ( roughness >= r6 ) {\n\t\t\tmip = ( r5 - roughness ) * ( m6 - m5 ) / ( r5 - r6 ) + m5;\n\t\t} else {\n\t\t\tmip = - 2.0 * log2( 1.16 * roughness );\t\t}\n\t\treturn mip;\n\t}\n\tvec4 textureCubeUV( sampler2D envMap, vec3 sampleDir, float roughness ) {\n\t\tfloat mip = clamp( roughnessToMip( roughness ), m0, cubeUV_maxMipLevel );\n\t\tfloat mipF = fract( mip );\n\t\tfloat mipInt = floor( mip );\n\t\tvec3 color0 = bilinearCubeUV( envMap, sampleDir, mipInt );\n\t\tif ( mipF == 0.0 ) {\n\t\t\treturn vec4( color0, 1.0 );\n\t\t} else {\n\t\t\tvec3 color1 = bilinearCubeUV( envMap, sampleDir, mipInt + 1.0 );\n\t\t\treturn vec4( mix( color0, color1, mipF ), 1.0 );\n\t\t}\n\t}\n#endif",defaultnormal_vertex:"vec3 transformedNormal = objectNormal;\n#ifdef USE_INSTANCING\n\tmat3 m = mat3( instanceMatrix );\n\ttransformedNormal /= vec3( dot( m[ 0 ], m[ 0 ] ), dot( m[ 1 ], m[ 1 ] ), dot( m[ 2 ], m[ 2 ] ) );\n\ttransformedNormal = m * transformedNormal;\n#endif\ntransformedNormal = normalMatrix * transformedNormal;\n#ifdef FLIP_SIDED\n\ttransformedNormal = - transformedNormal;\n#endif\n#ifdef USE_TANGENT\n\tvec3 transformedTangent = ( modelViewMatrix * vec4( objectTangent, 0.0 ) ).xyz;\n\t#ifdef FLIP_SIDED\n\t\ttransformedTangent = - transformedTangent;\n\t#endif\n#endif",displacementmap_pars_vertex:"#ifdef USE_DISPLACEMENTMAP\n\tuniform sampler2D displacementMap;\n\tuniform float displacementScale;\n\tuniform float displacementBias;\n#endif",displacementmap_vertex:"#ifdef USE_DISPLACEMENTMAP\n\ttransformed += normalize( objectNormal ) * ( texture2D( displacementMap, vUv ).x * displacementScale + displacementBias );\n#endif",emissivemap_fragment:"#ifdef USE_EMISSIVEMAP\n\tvec4 emissiveColor = texture2D( emissiveMap, vUv );\n\temissiveColor.rgb = emissiveMapTexelToLinear( emissiveColor ).rgb;\n\ttotalEmissiveRadiance *= emissiveColor.rgb;\n#endif",emissivemap_pars_fragment:"#ifdef USE_EMISSIVEMAP\n\tuniform sampler2D emissiveMap;\n#endif",encodings_fragment:"gl_FragColor = linearToOutputTexel( gl_FragColor );",encodings_pars_fragment:"\nvec4 LinearToLinear( in vec4 value ) {\n\treturn value;\n}\nvec4 GammaToLinear( in vec4 value, in float gammaFactor ) {\n\treturn vec4( pow( value.rgb, vec3( gammaFactor ) ), value.a );\n}\nvec4 LinearToGamma( in vec4 value, in float gammaFactor ) {\n\treturn vec4( pow( value.rgb, vec3( 1.0 / gammaFactor ) ), value.a );\n}\nvec4 sRGBToLinear( in vec4 value ) {\n\treturn vec4( mix( pow( value.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), value.rgb * 0.0773993808, vec3( lessThanEqual( value.rgb, vec3( 0.04045 ) ) ) ), value.a );\n}\nvec4 LinearTosRGB( in vec4 value ) {\n\treturn vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );\n}\nvec4 RGBEToLinear( in vec4 value ) {\n\treturn vec4( value.rgb * exp2( value.a * 255.0 - 128.0 ), 1.0 );\n}\nvec4 LinearToRGBE( in vec4 value ) {\n\tfloat maxComponent = max( max( value.r, value.g ), value.b );\n\tfloat fExp = clamp( ceil( log2( maxComponent ) ), -128.0, 127.0 );\n\treturn vec4( value.rgb / exp2( fExp ), ( fExp + 128.0 ) / 255.0 );\n}\nvec4 RGBMToLinear( in vec4 value, in float maxRange ) {\n\treturn vec4( value.rgb * value.a * maxRange, 1.0 );\n}\nvec4 LinearToRGBM( in vec4 value, in float maxRange ) {\n\tfloat maxRGB = max( value.r, max( value.g, value.b ) );\n\tfloat M = clamp( maxRGB / maxRange, 0.0, 1.0 );\n\tM = ceil( M * 255.0 ) / 255.0;\n\treturn vec4( value.rgb / ( M * maxRange ), M );\n}\nvec4 RGBDToLinear( in vec4 value, in float maxRange ) {\n\treturn vec4( value.rgb * ( ( maxRange / 255.0 ) / value.a ), 1.0 );\n}\nvec4 LinearToRGBD( in vec4 value, in float maxRange ) {\n\tfloat maxRGB = max( value.r, max( value.g, value.b ) );\n\tfloat D = max( maxRange / maxRGB, 1.0 );\n\tD = clamp( floor( D ) / 255.0, 0.0, 1.0 );\n\treturn vec4( value.rgb * ( D * ( 255.0 / maxRange ) ), D );\n}\nconst mat3 cLogLuvM = mat3( 0.2209, 0.3390, 0.4184, 0.1138, 0.6780, 0.7319, 0.0102, 0.1130, 0.2969 );\nvec4 LinearToLogLuv( in vec4 value ) {\n\tvec3 Xp_Y_XYZp = cLogLuvM * value.rgb;\n\tXp_Y_XYZp = max( Xp_Y_XYZp, vec3( 1e-6, 1e-6, 1e-6 ) );\n\tvec4 vResult;\n\tvResult.xy = Xp_Y_XYZp.xy / Xp_Y_XYZp.z;\n\tfloat Le = 2.0 * log2(Xp_Y_XYZp.y) + 127.0;\n\tvResult.w = fract( Le );\n\tvResult.z = ( Le - ( floor( vResult.w * 255.0 ) ) / 255.0 ) / 255.0;\n\treturn vResult;\n}\nconst mat3 cLogLuvInverseM = mat3( 6.0014, -2.7008, -1.7996, -1.3320, 3.1029, -5.7721, 0.3008, -1.0882, 5.6268 );\nvec4 LogLuvToLinear( in vec4 value ) {\n\tfloat Le = value.z * 255.0 + value.w;\n\tvec3 Xp_Y_XYZp;\n\tXp_Y_XYZp.y = exp2( ( Le - 127.0 ) / 2.0 );\n\tXp_Y_XYZp.z = Xp_Y_XYZp.y / value.y;\n\tXp_Y_XYZp.x = value.x * Xp_Y_XYZp.z;\n\tvec3 vRGB = cLogLuvInverseM * Xp_Y_XYZp.rgb;\n\treturn vec4( max( vRGB, 0.0 ), 1.0 );\n}",envmap_fragment:"#ifdef USE_ENVMAP\n\t#ifdef ENV_WORLDPOS\n\t\tvec3 cameraToFrag;\n\t\tif ( isOrthographic ) {\n\t\t\tcameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\n\t\t} else {\n\t\t\tcameraToFrag = normalize( vWorldPosition - cameraPosition );\n\t\t}\n\t\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\t\t\tvec3 reflectVec = reflect( cameraToFrag, worldNormal );\n\t\t#else\n\t\t\tvec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );\n\t\t#endif\n\t#else\n\t\tvec3 reflectVec = vReflect;\n\t#endif\n\t#ifdef ENVMAP_TYPE_CUBE\n\t\tvec4 envColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\n\t#elif defined( ENVMAP_TYPE_CUBE_UV )\n\t\tvec4 envColor = textureCubeUV( envMap, reflectVec, 0.0 );\n\t#else\n\t\tvec4 envColor = vec4( 0.0 );\n\t#endif\n\t#ifndef ENVMAP_TYPE_CUBE_UV\n\t\tenvColor = envMapTexelToLinear( envColor );\n\t#endif\n\t#ifdef ENVMAP_BLENDING_MULTIPLY\n\t\toutgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );\n\t#elif defined( ENVMAP_BLENDING_MIX )\n\t\toutgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );\n\t#elif defined( ENVMAP_BLENDING_ADD )\n\t\toutgoingLight += envColor.xyz * specularStrength * reflectivity;\n\t#endif\n#endif",envmap_common_pars_fragment:"#ifdef USE_ENVMAP\n\tuniform float envMapIntensity;\n\tuniform float flipEnvMap;\n\tuniform int maxMipLevel;\n\t#ifdef ENVMAP_TYPE_CUBE\n\t\tuniform samplerCube envMap;\n\t#else\n\t\tuniform sampler2D envMap;\n\t#endif\n\t\n#endif",envmap_pars_fragment:"#ifdef USE_ENVMAP\n\tuniform float reflectivity;\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\n\t\t#define ENV_WORLDPOS\n\t#endif\n\t#ifdef ENV_WORLDPOS\n\t\tvarying vec3 vWorldPosition;\n\t\tuniform float refractionRatio;\n\t#else\n\t\tvarying vec3 vReflect;\n\t#endif\n#endif",envmap_pars_vertex:"#ifdef USE_ENVMAP\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) ||defined( PHONG )\n\t\t#define ENV_WORLDPOS\n\t#endif\n\t#ifdef ENV_WORLDPOS\n\t\t\n\t\tvarying vec3 vWorldPosition;\n\t#else\n\t\tvarying vec3 vReflect;\n\t\tuniform float refractionRatio;\n\t#endif\n#endif",envmap_physical_pars_fragment:"#if defined( USE_ENVMAP )\n\t#ifdef ENVMAP_MODE_REFRACTION\n\t\tuniform float refractionRatio;\n\t#endif\n\tvec3 getLightProbeIndirectIrradiance( const in GeometricContext geometry, const in int maxMIPLevel ) {\n\t\tvec3 worldNormal = inverseTransformDirection( geometry.normal, viewMatrix );\n\t\t#ifdef ENVMAP_TYPE_CUBE\n\t\t\tvec3 queryVec = vec3( flipEnvMap * worldNormal.x, worldNormal.yz );\n\t\t\t#ifdef TEXTURE_LOD_EXT\n\t\t\t\tvec4 envMapColor = textureCubeLodEXT( envMap, queryVec, float( maxMIPLevel ) );\n\t\t\t#else\n\t\t\t\tvec4 envMapColor = textureCube( envMap, queryVec, float( maxMIPLevel ) );\n\t\t\t#endif\n\t\t\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\n\t\t#elif defined( ENVMAP_TYPE_CUBE_UV )\n\t\t\tvec4 envMapColor = textureCubeUV( envMap, worldNormal, 1.0 );\n\t\t#else\n\t\t\tvec4 envMapColor = vec4( 0.0 );\n\t\t#endif\n\t\treturn PI * envMapColor.rgb * envMapIntensity;\n\t}\n\tfloat getSpecularMIPLevel( const in float roughness, const in int maxMIPLevel ) {\n\t\tfloat maxMIPLevelScalar = float( maxMIPLevel );\n\t\tfloat sigma = PI * roughness * roughness / ( 1.0 + roughness );\n\t\tfloat desiredMIPLevel = maxMIPLevelScalar + log2( sigma );\n\t\treturn clamp( desiredMIPLevel, 0.0, maxMIPLevelScalar );\n\t}\n\tvec3 getLightProbeIndirectRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness, const in int maxMIPLevel ) {\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\t\t\tvec3 reflectVec = reflect( -viewDir, normal );\n\t\t\treflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );\n\t\t#else\n\t\t\tvec3 reflectVec = refract( -viewDir, normal, refractionRatio );\n\t\t#endif\n\t\treflectVec = inverseTransformDirection( reflectVec, viewMatrix );\n\t\tfloat specularMIPLevel = getSpecularMIPLevel( roughness, maxMIPLevel );\n\t\t#ifdef ENVMAP_TYPE_CUBE\n\t\t\tvec3 queryReflectVec = vec3( flipEnvMap * reflectVec.x, reflectVec.yz );\n\t\t\t#ifdef TEXTURE_LOD_EXT\n\t\t\t\tvec4 envMapColor = textureCubeLodEXT( envMap, queryReflectVec, specularMIPLevel );\n\t\t\t#else\n\t\t\t\tvec4 envMapColor = textureCube( envMap, queryReflectVec, specularMIPLevel );\n\t\t\t#endif\n\t\t\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\n\t\t#elif defined( ENVMAP_TYPE_CUBE_UV )\n\t\t\tvec4 envMapColor = textureCubeUV( envMap, reflectVec, roughness );\n\t\t#endif\n\t\treturn envMapColor.rgb * envMapIntensity;\n\t}\n#endif",envmap_vertex:"#ifdef USE_ENVMAP\n\t#ifdef ENV_WORLDPOS\n\t\tvWorldPosition = worldPosition.xyz;\n\t#else\n\t\tvec3 cameraToVertex;\n\t\tif ( isOrthographic ) {\n\t\t\tcameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\n\t\t} else {\n\t\t\tcameraToVertex = normalize( worldPosition.xyz - cameraPosition );\n\t\t}\n\t\tvec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\t\t\tvReflect = reflect( cameraToVertex, worldNormal );\n\t\t#else\n\t\t\tvReflect = refract( cameraToVertex, worldNormal, refractionRatio );\n\t\t#endif\n\t#endif\n#endif",fog_vertex:"#ifdef USE_FOG\n\tfogDepth = - mvPosition.z;\n#endif",fog_pars_vertex:"#ifdef USE_FOG\n\tvarying float fogDepth;\n#endif",fog_fragment:"#ifdef USE_FOG\n\t#ifdef FOG_EXP2\n\t\tfloat fogFactor = 1.0 - exp( - fogDensity * fogDensity * fogDepth * fogDepth );\n\t#else\n\t\tfloat fogFactor = smoothstep( fogNear, fogFar, fogDepth );\n\t#endif\n\tgl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );\n#endif",fog_pars_fragment:"#ifdef USE_FOG\n\tuniform vec3 fogColor;\n\tvarying float fogDepth;\n\t#ifdef FOG_EXP2\n\t\tuniform float fogDensity;\n\t#else\n\t\tuniform float fogNear;\n\t\tuniform float fogFar;\n\t#endif\n#endif",gradientmap_pars_fragment:"#ifdef USE_GRADIENTMAP\n\tuniform sampler2D gradientMap;\n#endif\nvec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {\n\tfloat dotNL = dot( normal, lightDirection );\n\tvec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );\n\t#ifdef USE_GRADIENTMAP\n\t\treturn texture2D( gradientMap, coord ).rgb;\n\t#else\n\t\treturn ( coord.x < 0.7 ) ? vec3( 0.7 ) : vec3( 1.0 );\n\t#endif\n}",lightmap_fragment:"#ifdef USE_LIGHTMAP\n\tvec4 lightMapTexel= texture2D( lightMap, vUv2 );\n\treflectedLight.indirectDiffuse += PI * lightMapTexelToLinear( lightMapTexel ).rgb * lightMapIntensity;\n#endif",lightmap_pars_fragment:"#ifdef USE_LIGHTMAP\n\tuniform sampler2D lightMap;\n\tuniform float lightMapIntensity;\n#endif",lights_lambert_vertex:"vec3 diffuse = vec3( 1.0 );\nGeometricContext geometry;\ngeometry.position = mvPosition.xyz;\ngeometry.normal = normalize( transformedNormal );\ngeometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( -mvPosition.xyz );\nGeometricContext backGeometry;\nbackGeometry.position = geometry.position;\nbackGeometry.normal = -geometry.normal;\nbackGeometry.viewDir = geometry.viewDir;\nvLightFront = vec3( 0.0 );\nvIndirectFront = vec3( 0.0 );\n#ifdef DOUBLE_SIDED\n\tvLightBack = vec3( 0.0 );\n\tvIndirectBack = vec3( 0.0 );\n#endif\nIncidentLight directLight;\nfloat dotNL;\nvec3 directLightColor_Diffuse;\nvIndirectFront += getAmbientLightIrradiance( ambientLightColor );\nvIndirectFront += getLightProbeIrradiance( lightProbe, geometry );\n#ifdef DOUBLE_SIDED\n\tvIndirectBack += getAmbientLightIrradiance( ambientLightColor );\n\tvIndirectBack += getLightProbeIrradiance( lightProbe, backGeometry );\n#endif\n#if NUM_POINT_LIGHTS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n\t\tgetPointDirectLightIrradiance( pointLights[ i ], geometry, directLight );\n\t\tdotNL = dot( geometry.normal, directLight.direction );\n\t\tdirectLightColor_Diffuse = PI * directLight.color;\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\n\t\t#endif\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if NUM_SPOT_LIGHTS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n\t\tgetSpotDirectLightIrradiance( spotLights[ i ], geometry, directLight );\n\t\tdotNL = dot( geometry.normal, directLight.direction );\n\t\tdirectLightColor_Diffuse = PI * directLight.color;\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\n\t\t#endif\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if NUM_DIR_LIGHTS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n\t\tgetDirectionalDirectLightIrradiance( directionalLights[ i ], geometry, directLight );\n\t\tdotNL = dot( geometry.normal, directLight.direction );\n\t\tdirectLightColor_Diffuse = PI * directLight.color;\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\n\t\t#endif\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if NUM_HEMI_LIGHTS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\n\t\tvIndirectFront += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvIndirectBack += getHemisphereLightIrradiance( hemisphereLights[ i ], backGeometry );\n\t\t#endif\n\t}\n\t#pragma unroll_loop_end\n#endif",lights_pars_begin:"uniform bool receiveShadow;\nuniform vec3 ambientLightColor;\nuniform vec3 lightProbe[ 9 ];\nvec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {\n\tfloat x = normal.x, y = normal.y, z = normal.z;\n\tvec3 result = shCoefficients[ 0 ] * 0.886227;\n\tresult += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;\n\tresult += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;\n\tresult += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;\n\tresult += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;\n\tresult += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;\n\tresult += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );\n\tresult += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;\n\tresult += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );\n\treturn result;\n}\nvec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in GeometricContext geometry ) {\n\tvec3 worldNormal = inverseTransformDirection( geometry.normal, viewMatrix );\n\tvec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );\n\treturn irradiance;\n}\nvec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {\n\tvec3 irradiance = ambientLightColor;\n\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\tirradiance *= PI;\n\t#endif\n\treturn irradiance;\n}\n#if NUM_DIR_LIGHTS > 0\n\tstruct DirectionalLight {\n\t\tvec3 direction;\n\t\tvec3 color;\n\t};\n\tuniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];\n\tvoid getDirectionalDirectLightIrradiance( const in DirectionalLight directionalLight, const in GeometricContext geometry, out IncidentLight directLight ) {\n\t\tdirectLight.color = directionalLight.color;\n\t\tdirectLight.direction = directionalLight.direction;\n\t\tdirectLight.visible = true;\n\t}\n#endif\n#if NUM_POINT_LIGHTS > 0\n\tstruct PointLight {\n\t\tvec3 position;\n\t\tvec3 color;\n\t\tfloat distance;\n\t\tfloat decay;\n\t};\n\tuniform PointLight pointLights[ NUM_POINT_LIGHTS ];\n\tvoid getPointDirectLightIrradiance( const in PointLight pointLight, const in GeometricContext geometry, out IncidentLight directLight ) {\n\t\tvec3 lVector = pointLight.position - geometry.position;\n\t\tdirectLight.direction = normalize( lVector );\n\t\tfloat lightDistance = length( lVector );\n\t\tdirectLight.color = pointLight.color;\n\t\tdirectLight.color *= punctualLightIntensityToIrradianceFactor( lightDistance, pointLight.distance, pointLight.decay );\n\t\tdirectLight.visible = ( directLight.color != vec3( 0.0 ) );\n\t}\n#endif\n#if NUM_SPOT_LIGHTS > 0\n\tstruct SpotLight {\n\t\tvec3 position;\n\t\tvec3 direction;\n\t\tvec3 color;\n\t\tfloat distance;\n\t\tfloat decay;\n\t\tfloat coneCos;\n\t\tfloat penumbraCos;\n\t};\n\tuniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];\n\tvoid getSpotDirectLightIrradiance( const in SpotLight spotLight, const in GeometricContext geometry, out IncidentLight directLight ) {\n\t\tvec3 lVector = spotLight.position - geometry.position;\n\t\tdirectLight.direction = normalize( lVector );\n\t\tfloat lightDistance = length( lVector );\n\t\tfloat angleCos = dot( directLight.direction, spotLight.direction );\n\t\tif ( angleCos > spotLight.coneCos ) {\n\t\t\tfloat spotEffect = smoothstep( spotLight.coneCos, spotLight.penumbraCos, angleCos );\n\t\t\tdirectLight.color = spotLight.color;\n\t\t\tdirectLight.color *= spotEffect * punctualLightIntensityToIrradianceFactor( lightDistance, spotLight.distance, spotLight.decay );\n\t\t\tdirectLight.visible = true;\n\t\t} else {\n\t\t\tdirectLight.color = vec3( 0.0 );\n\t\t\tdirectLight.visible = false;\n\t\t}\n\t}\n#endif\n#if NUM_RECT_AREA_LIGHTS > 0\n\tstruct RectAreaLight {\n\t\tvec3 color;\n\t\tvec3 position;\n\t\tvec3 halfWidth;\n\t\tvec3 halfHeight;\n\t};\n\tuniform sampler2D ltc_1;\tuniform sampler2D ltc_2;\n\tuniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];\n#endif\n#if NUM_HEMI_LIGHTS > 0\n\tstruct HemisphereLight {\n\t\tvec3 direction;\n\t\tvec3 skyColor;\n\t\tvec3 groundColor;\n\t};\n\tuniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];\n\tvec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in GeometricContext geometry ) {\n\t\tfloat dotNL = dot( geometry.normal, hemiLight.direction );\n\t\tfloat hemiDiffuseWeight = 0.5 * dotNL + 0.5;\n\t\tvec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );\n\t\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\t\tirradiance *= PI;\n\t\t#endif\n\t\treturn irradiance;\n\t}\n#endif",lights_toon_fragment:"ToonMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb;",lights_toon_pars_fragment:"varying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\nstruct ToonMaterial {\n\tvec3 diffuseColor;\n};\nvoid RE_Direct_Toon( const in IncidentLight directLight, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\n\tvec3 irradiance = getGradientIrradiance( geometry.normal, directLight.direction ) * directLight.color;\n\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\tirradiance *= PI;\n\t#endif\n\treflectedLight.directDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n}\n#define RE_Direct\t\t\t\tRE_Direct_Toon\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_Toon\n#define Material_LightProbeLOD( material )\t(0)",lights_phong_fragment:"BlinnPhongMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb;\nmaterial.specularColor = specular;\nmaterial.specularShininess = shininess;\nmaterial.specularStrength = specularStrength;",lights_phong_pars_fragment:"varying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\nstruct BlinnPhongMaterial {\n\tvec3 diffuseColor;\n\tvec3 specularColor;\n\tfloat specularShininess;\n\tfloat specularStrength;\n};\nvoid RE_Direct_BlinnPhong( const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\n\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\n\tvec3 irradiance = dotNL * directLight.color;\n\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\tirradiance *= PI;\n\t#endif\n\treflectedLight.directDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n\treflectedLight.directSpecular += irradiance * BRDF_Specular_BlinnPhong( directLight, geometry, material.specularColor, material.specularShininess ) * material.specularStrength;\n}\nvoid RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n}\n#define RE_Direct\t\t\t\tRE_Direct_BlinnPhong\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_BlinnPhong\n#define Material_LightProbeLOD( material )\t(0)",lights_physical_fragment:"PhysicalMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );\nvec3 dxy = max( abs( dFdx( geometryNormal ) ), abs( dFdy( geometryNormal ) ) );\nfloat geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );\nmaterial.specularRoughness = max( roughnessFactor, 0.0525 );material.specularRoughness += geometryRoughness;\nmaterial.specularRoughness = min( material.specularRoughness, 1.0 );\n#ifdef REFLECTIVITY\n\tmaterial.specularColor = mix( vec3( MAXIMUM_SPECULAR_COEFFICIENT * pow2( reflectivity ) ), rawDiffuseColor, metalnessFactor );\n#else\n\tmaterial.specularColor = mix( vec3( DEFAULT_SPECULAR_COEFFICIENT ), rawDiffuseColor, metalnessFactor );\n#endif\n#ifdef CLEARCOAT\n\tmaterial.clearcoat = clearcoat;\n\tmaterial.clearcoatRoughness = clearcoatRoughness;\n\t#ifdef USE_CLEARCOATMAP\n\t\tmaterial.clearcoat *= texture2D( clearcoatMap, vUv ).x;\n\t#endif\n\t#ifdef USE_CLEARCOAT_ROUGHNESSMAP\n\t\tmaterial.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vUv ).y;\n\t#endif\n\tmaterial.clearcoat = saturate( material.clearcoat );\tmaterial.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );\n\tmaterial.clearcoatRoughness += geometryRoughness;\n\tmaterial.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );\n#endif\n#ifdef USE_SHEEN\n\tmaterial.sheenColor = sheen;\n#endif",lights_physical_pars_fragment:"struct PhysicalMaterial {\n\tvec3 diffuseColor;\n\tfloat specularRoughness;\n\tvec3 specularColor;\n#ifdef CLEARCOAT\n\tfloat clearcoat;\n\tfloat clearcoatRoughness;\n#endif\n#ifdef USE_SHEEN\n\tvec3 sheenColor;\n#endif\n};\n#define MAXIMUM_SPECULAR_COEFFICIENT 0.16\n#define DEFAULT_SPECULAR_COEFFICIENT 0.04\nfloat clearcoatDHRApprox( const in float roughness, const in float dotNL ) {\n\treturn DEFAULT_SPECULAR_COEFFICIENT + ( 1.0 - DEFAULT_SPECULAR_COEFFICIENT ) * ( pow( 1.0 - dotNL, 5.0 ) * pow( 1.0 - roughness, 2.0 ) );\n}\n#if NUM_RECT_AREA_LIGHTS > 0\n\tvoid RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\t\tvec3 normal = geometry.normal;\n\t\tvec3 viewDir = geometry.viewDir;\n\t\tvec3 position = geometry.position;\n\t\tvec3 lightPos = rectAreaLight.position;\n\t\tvec3 halfWidth = rectAreaLight.halfWidth;\n\t\tvec3 halfHeight = rectAreaLight.halfHeight;\n\t\tvec3 lightColor = rectAreaLight.color;\n\t\tfloat roughness = material.specularRoughness;\n\t\tvec3 rectCoords[ 4 ];\n\t\trectCoords[ 0 ] = lightPos + halfWidth - halfHeight;\t\trectCoords[ 1 ] = lightPos - halfWidth - halfHeight;\n\t\trectCoords[ 2 ] = lightPos - halfWidth + halfHeight;\n\t\trectCoords[ 3 ] = lightPos + halfWidth + halfHeight;\n\t\tvec2 uv = LTC_Uv( normal, viewDir, roughness );\n\t\tvec4 t1 = texture2D( ltc_1, uv );\n\t\tvec4 t2 = texture2D( ltc_2, uv );\n\t\tmat3 mInv = mat3(\n\t\t\tvec3( t1.x, 0, t1.y ),\n\t\t\tvec3(\t\t0, 1,\t\t0 ),\n\t\t\tvec3( t1.z, 0, t1.w )\n\t\t);\n\t\tvec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );\n\t\treflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );\n\t\treflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );\n\t}\n#endif\nvoid RE_Direct_Physical( const in IncidentLight directLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\n\tvec3 irradiance = dotNL * directLight.color;\n\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\tirradiance *= PI;\n\t#endif\n\t#ifdef CLEARCOAT\n\t\tfloat ccDotNL = saturate( dot( geometry.clearcoatNormal, directLight.direction ) );\n\t\tvec3 ccIrradiance = ccDotNL * directLight.color;\n\t\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\t\tccIrradiance *= PI;\n\t\t#endif\n\t\tfloat clearcoatDHR = material.clearcoat * clearcoatDHRApprox( material.clearcoatRoughness, ccDotNL );\n\t\treflectedLight.directSpecular += ccIrradiance * material.clearcoat * BRDF_Specular_GGX( directLight, geometry.viewDir, geometry.clearcoatNormal, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearcoatRoughness );\n\t#else\n\t\tfloat clearcoatDHR = 0.0;\n\t#endif\n\t#ifdef USE_SHEEN\n\t\treflectedLight.directSpecular += ( 1.0 - clearcoatDHR ) * irradiance * BRDF_Specular_Sheen(\n\t\t\tmaterial.specularRoughness,\n\t\t\tdirectLight.direction,\n\t\t\tgeometry,\n\t\t\tmaterial.sheenColor\n\t\t);\n\t#else\n\t\treflectedLight.directSpecular += ( 1.0 - clearcoatDHR ) * irradiance * BRDF_Specular_GGX( directLight, geometry.viewDir, geometry.normal, material.specularColor, material.specularRoughness);\n\t#endif\n\treflectedLight.directDiffuse += ( 1.0 - clearcoatDHR ) * irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {\n\t#ifdef CLEARCOAT\n\t\tfloat ccDotNV = saturate( dot( geometry.clearcoatNormal, geometry.viewDir ) );\n\t\treflectedLight.indirectSpecular += clearcoatRadiance * material.clearcoat * BRDF_Specular_GGX_Environment( geometry.viewDir, geometry.clearcoatNormal, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearcoatRoughness );\n\t\tfloat ccDotNL = ccDotNV;\n\t\tfloat clearcoatDHR = material.clearcoat * clearcoatDHRApprox( material.clearcoatRoughness, ccDotNL );\n\t#else\n\t\tfloat clearcoatDHR = 0.0;\n\t#endif\n\tfloat clearcoatInv = 1.0 - clearcoatDHR;\n\tvec3 singleScattering = vec3( 0.0 );\n\tvec3 multiScattering = vec3( 0.0 );\n\tvec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;\n\tBRDF_Specular_Multiscattering_Environment( geometry, material.specularColor, material.specularRoughness, singleScattering, multiScattering );\n\tvec3 diffuse = material.diffuseColor * ( 1.0 - ( singleScattering + multiScattering ) );\n\treflectedLight.indirectSpecular += clearcoatInv * radiance * singleScattering;\n\treflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;\n\treflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;\n}\n#define RE_Direct\t\t\t\tRE_Direct_Physical\n#define RE_Direct_RectArea\t\tRE_Direct_RectArea_Physical\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_Physical\n#define RE_IndirectSpecular\t\tRE_IndirectSpecular_Physical\nfloat computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {\n\treturn saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );\n}",lights_fragment_begin:"\nGeometricContext geometry;\ngeometry.position = - vViewPosition;\ngeometry.normal = normal;\ngeometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );\n#ifdef CLEARCOAT\n\tgeometry.clearcoatNormal = clearcoatNormal;\n#endif\nIncidentLight directLight;\n#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )\n\tPointLight pointLight;\n\t#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0\n\tPointLightShadow pointLightShadow;\n\t#endif\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n\t\tpointLight = pointLights[ i ];\n\t\tgetPointDirectLightIrradiance( pointLight, geometry, directLight );\n\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )\n\t\tpointLightShadow = pointLightShadows[ i ];\n\t\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )\n\tSpotLight spotLight;\n\t#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0\n\tSpotLightShadow spotLightShadow;\n\t#endif\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n\t\tspotLight = spotLights[ i ];\n\t\tgetSpotDirectLightIrradiance( spotLight, geometry, directLight );\n\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\n\t\tspotLightShadow = spotLightShadows[ i ];\n\t\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )\n\tDirectionalLight directionalLight;\n\t#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0\n\tDirectionalLightShadow directionalLightShadow;\n\t#endif\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n\t\tdirectionalLight = directionalLights[ i ];\n\t\tgetDirectionalDirectLightIrradiance( directionalLight, geometry, directLight );\n\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )\n\t\tdirectionalLightShadow = directionalLightShadows[ i ];\n\t\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )\n\tRectAreaLight rectAreaLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {\n\t\trectAreaLight = rectAreaLights[ i ];\n\t\tRE_Direct_RectArea( rectAreaLight, geometry, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if defined( RE_IndirectDiffuse )\n\tvec3 iblIrradiance = vec3( 0.0 );\n\tvec3 irradiance = getAmbientLightIrradiance( ambientLightColor );\n\tirradiance += getLightProbeIrradiance( lightProbe, geometry );\n\t#if ( NUM_HEMI_LIGHTS > 0 )\n\t\t#pragma unroll_loop_start\n\t\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\n\t\t\tirradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\n\t\t}\n\t\t#pragma unroll_loop_end\n\t#endif\n#endif\n#if defined( RE_IndirectSpecular )\n\tvec3 radiance = vec3( 0.0 );\n\tvec3 clearcoatRadiance = vec3( 0.0 );\n#endif",lights_fragment_maps:"#if defined( RE_IndirectDiffuse )\n\t#ifdef USE_LIGHTMAP\n\t\tvec4 lightMapTexel= texture2D( lightMap, vUv2 );\n\t\tvec3 lightMapIrradiance = lightMapTexelToLinear( lightMapTexel ).rgb * lightMapIntensity;\n\t\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\t\tlightMapIrradiance *= PI;\n\t\t#endif\n\t\tirradiance += lightMapIrradiance;\n\t#endif\n\t#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )\n\t\tiblIrradiance += getLightProbeIndirectIrradiance( geometry, maxMipLevel );\n\t#endif\n#endif\n#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )\n\tradiance += getLightProbeIndirectRadiance( geometry.viewDir, geometry.normal, material.specularRoughness, maxMipLevel );\n\t#ifdef CLEARCOAT\n\t\tclearcoatRadiance += getLightProbeIndirectRadiance( geometry.viewDir, geometry.clearcoatNormal, material.clearcoatRoughness, maxMipLevel );\n\t#endif\n#endif",lights_fragment_end:"#if defined( RE_IndirectDiffuse )\n\tRE_IndirectDiffuse( irradiance, geometry, material, reflectedLight );\n#endif\n#if defined( RE_IndirectSpecular )\n\tRE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometry, material, reflectedLight );\n#endif",logdepthbuf_fragment:"#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\n\tgl_FragDepthEXT = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;\n#endif",logdepthbuf_pars_fragment:"#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\n\tuniform float logDepthBufFC;\n\tvarying float vFragDepth;\n\tvarying float vIsPerspective;\n#endif",logdepthbuf_pars_vertex:"#ifdef USE_LOGDEPTHBUF\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\t\tvarying float vFragDepth;\n\t\tvarying float vIsPerspective;\n\t#else\n\t\tuniform float logDepthBufFC;\n\t#endif\n#endif",logdepthbuf_vertex:"#ifdef USE_LOGDEPTHBUF\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\t\tvFragDepth = 1.0 + gl_Position.w;\n\t\tvIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );\n\t#else\n\t\tif ( isPerspectiveMatrix( projectionMatrix ) ) {\n\t\t\tgl_Position.z = log2( max( EPSILON, gl_Position.w + 1.0 ) ) * logDepthBufFC - 1.0;\n\t\t\tgl_Position.z *= gl_Position.w;\n\t\t}\n\t#endif\n#endif",map_fragment:"#ifdef USE_MAP\n\tvec4 texelColor = texture2D( map, vUv );\n\ttexelColor = mapTexelToLinear( texelColor );\n\tdiffuseColor *= texelColor;\n#endif",map_pars_fragment:"#ifdef USE_MAP\n\tuniform sampler2D map;\n#endif",map_particle_fragment:"#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\n\tvec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;\n#endif\n#ifdef USE_MAP\n\tvec4 mapTexel = texture2D( map, uv );\n\tdiffuseColor *= mapTexelToLinear( mapTexel );\n#endif\n#ifdef USE_ALPHAMAP\n\tdiffuseColor.a *= texture2D( alphaMap, uv ).g;\n#endif",map_particle_pars_fragment:"#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\n\tuniform mat3 uvTransform;\n#endif\n#ifdef USE_MAP\n\tuniform sampler2D map;\n#endif\n#ifdef USE_ALPHAMAP\n\tuniform sampler2D alphaMap;\n#endif",metalnessmap_fragment:"float metalnessFactor = metalness;\n#ifdef USE_METALNESSMAP\n\tvec4 texelMetalness = texture2D( metalnessMap, vUv );\n\tmetalnessFactor *= texelMetalness.b;\n#endif",metalnessmap_pars_fragment:"#ifdef USE_METALNESSMAP\n\tuniform sampler2D metalnessMap;\n#endif",morphnormal_vertex:"#ifdef USE_MORPHNORMALS\n\tobjectNormal *= morphTargetBaseInfluence;\n\tobjectNormal += morphNormal0 * morphTargetInfluences[ 0 ];\n\tobjectNormal += morphNormal1 * morphTargetInfluences[ 1 ];\n\tobjectNormal += morphNormal2 * morphTargetInfluences[ 2 ];\n\tobjectNormal += morphNormal3 * morphTargetInfluences[ 3 ];\n#endif",morphtarget_pars_vertex:"#ifdef USE_MORPHTARGETS\n\tuniform float morphTargetBaseInfluence;\n\t#ifndef USE_MORPHNORMALS\n\t\tuniform float morphTargetInfluences[ 8 ];\n\t#else\n\t\tuniform float morphTargetInfluences[ 4 ];\n\t#endif\n#endif",morphtarget_vertex:"#ifdef USE_MORPHTARGETS\n\ttransformed *= morphTargetBaseInfluence;\n\ttransformed += morphTarget0 * morphTargetInfluences[ 0 ];\n\ttransformed += morphTarget1 * morphTargetInfluences[ 1 ];\n\ttransformed += morphTarget2 * morphTargetInfluences[ 2 ];\n\ttransformed += morphTarget3 * morphTargetInfluences[ 3 ];\n\t#ifndef USE_MORPHNORMALS\n\t\ttransformed += morphTarget4 * morphTargetInfluences[ 4 ];\n\t\ttransformed += morphTarget5 * morphTargetInfluences[ 5 ];\n\t\ttransformed += morphTarget6 * morphTargetInfluences[ 6 ];\n\t\ttransformed += morphTarget7 * morphTargetInfluences[ 7 ];\n\t#endif\n#endif",normal_fragment_begin:"float faceDirection = gl_FrontFacing ? 1.0 : - 1.0;\n#ifdef FLAT_SHADED\n\tvec3 fdx = vec3( dFdx( vViewPosition.x ), dFdx( vViewPosition.y ), dFdx( vViewPosition.z ) );\n\tvec3 fdy = vec3( dFdy( vViewPosition.x ), dFdy( vViewPosition.y ), dFdy( vViewPosition.z ) );\n\tvec3 normal = normalize( cross( fdx, fdy ) );\n#else\n\tvec3 normal = normalize( vNormal );\n\t#ifdef DOUBLE_SIDED\n\t\tnormal = normal * faceDirection;\n\t#endif\n\t#ifdef USE_TANGENT\n\t\tvec3 tangent = normalize( vTangent );\n\t\tvec3 bitangent = normalize( vBitangent );\n\t\t#ifdef DOUBLE_SIDED\n\t\t\ttangent = tangent * faceDirection;\n\t\t\tbitangent = bitangent * faceDirection;\n\t\t#endif\n\t\t#if defined( TANGENTSPACE_NORMALMAP ) || defined( USE_CLEARCOAT_NORMALMAP )\n\t\t\tmat3 vTBN = mat3( tangent, bitangent, normal );\n\t\t#endif\n\t#endif\n#endif\nvec3 geometryNormal = normal;",normal_fragment_maps:"#ifdef OBJECTSPACE_NORMALMAP\n\tnormal = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\n\t#ifdef FLIP_SIDED\n\t\tnormal = - normal;\n\t#endif\n\t#ifdef DOUBLE_SIDED\n\t\tnormal = normal * faceDirection;\n\t#endif\n\tnormal = normalize( normalMatrix * normal );\n#elif defined( TANGENTSPACE_NORMALMAP )\n\tvec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\n\tmapN.xy *= normalScale;\n\t#ifdef USE_TANGENT\n\t\tnormal = normalize( vTBN * mapN );\n\t#else\n\t\tnormal = perturbNormal2Arb( -vViewPosition, normal, mapN, faceDirection );\n\t#endif\n#elif defined( USE_BUMPMAP )\n\tnormal = perturbNormalArb( -vViewPosition, normal, dHdxy_fwd(), faceDirection );\n#endif",normalmap_pars_fragment:"#ifdef USE_NORMALMAP\n\tuniform sampler2D normalMap;\n\tuniform vec2 normalScale;\n#endif\n#ifdef OBJECTSPACE_NORMALMAP\n\tuniform mat3 normalMatrix;\n#endif\n#if ! defined ( USE_TANGENT ) && ( defined ( TANGENTSPACE_NORMALMAP ) || defined ( USE_CLEARCOAT_NORMALMAP ) )\n\tvec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm, vec3 mapN, float faceDirection ) {\n\t\tvec3 q0 = vec3( dFdx( eye_pos.x ), dFdx( eye_pos.y ), dFdx( eye_pos.z ) );\n\t\tvec3 q1 = vec3( dFdy( eye_pos.x ), dFdy( eye_pos.y ), dFdy( eye_pos.z ) );\n\t\tvec2 st0 = dFdx( vUv.st );\n\t\tvec2 st1 = dFdy( vUv.st );\n\t\tvec3 N = surf_norm;\n\t\tvec3 q1perp = cross( q1, N );\n\t\tvec3 q0perp = cross( N, q0 );\n\t\tvec3 T = q1perp * st0.x + q0perp * st1.x;\n\t\tvec3 B = q1perp * st0.y + q0perp * st1.y;\n\t\tfloat det = max( dot( T, T ), dot( B, B ) );\n\t\tfloat scale = ( det == 0.0 ) ? 0.0 : faceDirection * inversesqrt( det );\n\t\treturn normalize( T * ( mapN.x * scale ) + B * ( mapN.y * scale ) + N * mapN.z );\n\t}\n#endif",clearcoat_normal_fragment_begin:"#ifdef CLEARCOAT\n\tvec3 clearcoatNormal = geometryNormal;\n#endif",clearcoat_normal_fragment_maps:"#ifdef USE_CLEARCOAT_NORMALMAP\n\tvec3 clearcoatMapN = texture2D( clearcoatNormalMap, vUv ).xyz * 2.0 - 1.0;\n\tclearcoatMapN.xy *= clearcoatNormalScale;\n\t#ifdef USE_TANGENT\n\t\tclearcoatNormal = normalize( vTBN * clearcoatMapN );\n\t#else\n\t\tclearcoatNormal = perturbNormal2Arb( - vViewPosition, clearcoatNormal, clearcoatMapN, faceDirection );\n\t#endif\n#endif",clearcoat_pars_fragment:"#ifdef USE_CLEARCOATMAP\n\tuniform sampler2D clearcoatMap;\n#endif\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\n\tuniform sampler2D clearcoatRoughnessMap;\n#endif\n#ifdef USE_CLEARCOAT_NORMALMAP\n\tuniform sampler2D clearcoatNormalMap;\n\tuniform vec2 clearcoatNormalScale;\n#endif",packing:"vec3 packNormalToRGB( const in vec3 normal ) {\n\treturn normalize( normal ) * 0.5 + 0.5;\n}\nvec3 unpackRGBToNormal( const in vec3 rgb ) {\n\treturn 2.0 * rgb.xyz - 1.0;\n}\nconst float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;\nconst vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256., 256. );\nconst vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );\nconst float ShiftRight8 = 1. / 256.;\nvec4 packDepthToRGBA( const in float v ) {\n\tvec4 r = vec4( fract( v * PackFactors ), v );\n\tr.yzw -= r.xyz * ShiftRight8;\treturn r * PackUpscale;\n}\nfloat unpackRGBAToDepth( const in vec4 v ) {\n\treturn dot( v, UnpackFactors );\n}\nvec4 pack2HalfToRGBA( vec2 v ) {\n\tvec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ));\n\treturn vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w);\n}\nvec2 unpackRGBATo2Half( vec4 v ) {\n\treturn vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );\n}\nfloat viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {\n\treturn ( viewZ + near ) / ( near - far );\n}\nfloat orthographicDepthToViewZ( const in float linearClipZ, const in float near, const in float far ) {\n\treturn linearClipZ * ( near - far ) - near;\n}\nfloat viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {\n\treturn (( near + viewZ ) * far ) / (( far - near ) * viewZ );\n}\nfloat perspectiveDepthToViewZ( const in float invClipZ, const in float near, const in float far ) {\n\treturn ( near * far ) / ( ( far - near ) * invClipZ - far );\n}",premultiplied_alpha_fragment:"#ifdef PREMULTIPLIED_ALPHA\n\tgl_FragColor.rgb *= gl_FragColor.a;\n#endif",project_vertex:"vec4 mvPosition = vec4( transformed, 1.0 );\n#ifdef USE_INSTANCING\n\tmvPosition = instanceMatrix * mvPosition;\n#endif\nmvPosition = modelViewMatrix * mvPosition;\ngl_Position = projectionMatrix * mvPosition;",dithering_fragment:"#ifdef DITHERING\n\tgl_FragColor.rgb = dithering( gl_FragColor.rgb );\n#endif",dithering_pars_fragment:"#ifdef DITHERING\n\tvec3 dithering( vec3 color ) {\n\t\tfloat grid_position = rand( gl_FragCoord.xy );\n\t\tvec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );\n\t\tdither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );\n\t\treturn color + dither_shift_RGB;\n\t}\n#endif",roughnessmap_fragment:"float roughnessFactor = roughness;\n#ifdef USE_ROUGHNESSMAP\n\tvec4 texelRoughness = texture2D( roughnessMap, vUv );\n\troughnessFactor *= texelRoughness.g;\n#endif",roughnessmap_pars_fragment:"#ifdef USE_ROUGHNESSMAP\n\tuniform sampler2D roughnessMap;\n#endif",shadowmap_pars_fragment:"#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\t\tuniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tstruct DirectionalLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\t\tuniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHT_SHADOWS ];\n\t\tstruct SpotLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\t\tuniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tstruct PointLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t\tfloat shadowCameraNear;\n\t\t\tfloat shadowCameraFar;\n\t\t};\n\t\tuniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\n\t#endif\n\tfloat texture2DCompare( sampler2D depths, vec2 uv, float compare ) {\n\t\treturn step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );\n\t}\n\tvec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {\n\t\treturn unpackRGBATo2Half( texture2D( shadow, uv ) );\n\t}\n\tfloat VSMShadow (sampler2D shadow, vec2 uv, float compare ){\n\t\tfloat occlusion = 1.0;\n\t\tvec2 distribution = texture2DDistribution( shadow, uv );\n\t\tfloat hard_shadow = step( compare , distribution.x );\n\t\tif (hard_shadow != 1.0 ) {\n\t\t\tfloat distance = compare - distribution.x ;\n\t\t\tfloat variance = max( 0.00000, distribution.y * distribution.y );\n\t\t\tfloat softness_probability = variance / (variance + distance * distance );\t\t\tsoftness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );\t\t\tocclusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );\n\t\t}\n\t\treturn occlusion;\n\t}\n\tfloat getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {\n\t\tfloat shadow = 1.0;\n\t\tshadowCoord.xyz /= shadowCoord.w;\n\t\tshadowCoord.z += shadowBias;\n\t\tbvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );\n\t\tbool inFrustum = all( inFrustumVec );\n\t\tbvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );\n\t\tbool frustumTest = all( frustumTestVec );\n\t\tif ( frustumTest ) {\n\t\t#if defined( SHADOWMAP_TYPE_PCF )\n\t\t\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\n\t\t\tfloat dx0 = - texelSize.x * shadowRadius;\n\t\t\tfloat dy0 = - texelSize.y * shadowRadius;\n\t\t\tfloat dx1 = + texelSize.x * shadowRadius;\n\t\t\tfloat dy1 = + texelSize.y * shadowRadius;\n\t\t\tfloat dx2 = dx0 / 2.0;\n\t\t\tfloat dy2 = dy0 / 2.0;\n\t\t\tfloat dx3 = dx1 / 2.0;\n\t\t\tfloat dy3 = dy1 / 2.0;\n\t\t\tshadow = (\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\n\t\t\t) * ( 1.0 / 17.0 );\n\t\t#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\n\t\t\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\n\t\t\tfloat dx = texelSize.x;\n\t\t\tfloat dy = texelSize.y;\n\t\t\tvec2 uv = shadowCoord.xy;\n\t\t\tvec2 f = fract( uv * shadowMapSize + 0.5 );\n\t\t\tuv -= f * texelSize;\n\t\t\tshadow = (\n\t\t\t\ttexture2DCompare( shadowMap, uv, shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ), \n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),\n\t\t\t\t\t f.x ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ), \n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),\n\t\t\t\t\t f.x ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ), \n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),\n\t\t\t\t\t f.y ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ), \n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),\n\t\t\t\t\t f.y ) +\n\t\t\t\tmix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ), \n\t\t\t\t\t\t\ttexture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),\n\t\t\t\t\t\t\tf.x ),\n\t\t\t\t\t mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ), \n\t\t\t\t\t\t\ttexture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),\n\t\t\t\t\t\t\tf.x ),\n\t\t\t\t\t f.y )\n\t\t\t) * ( 1.0 / 9.0 );\n\t\t#elif defined( SHADOWMAP_TYPE_VSM )\n\t\t\tshadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );\n\t\t#else\n\t\t\tshadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );\n\t\t#endif\n\t\t}\n\t\treturn shadow;\n\t}\n\tvec2 cubeToUV( vec3 v, float texelSizeY ) {\n\t\tvec3 absV = abs( v );\n\t\tfloat scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );\n\t\tabsV *= scaleToCube;\n\t\tv *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );\n\t\tvec2 planar = v.xy;\n\t\tfloat almostATexel = 1.5 * texelSizeY;\n\t\tfloat almostOne = 1.0 - almostATexel;\n\t\tif ( absV.z >= almostOne ) {\n\t\t\tif ( v.z > 0.0 )\n\t\t\t\tplanar.x = 4.0 - v.x;\n\t\t} else if ( absV.x >= almostOne ) {\n\t\t\tfloat signX = sign( v.x );\n\t\t\tplanar.x = v.z * signX + 2.0 * signX;\n\t\t} else if ( absV.y >= almostOne ) {\n\t\t\tfloat signY = sign( v.y );\n\t\t\tplanar.x = v.x + 2.0 * signY + 2.0;\n\t\t\tplanar.y = v.z * signY - 2.0;\n\t\t}\n\t\treturn vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );\n\t}\n\tfloat getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {\n\t\tvec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );\n\t\tvec3 lightToPosition = shadowCoord.xyz;\n\t\tfloat dp = ( length( lightToPosition ) - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );\t\tdp += shadowBias;\n\t\tvec3 bd3D = normalize( lightToPosition );\n\t\t#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )\n\t\t\tvec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;\n\t\t\treturn (\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )\n\t\t\t) * ( 1.0 / 9.0 );\n\t\t#else\n\t\t\treturn texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );\n\t\t#endif\n\t}\n#endif",shadowmap_pars_vertex:"#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\t\tuniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tstruct DirectionalLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\t\tuniform mat4 spotShadowMatrix[ NUM_SPOT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHT_SHADOWS ];\n\t\tstruct SpotLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\t\tuniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tstruct PointLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t\tfloat shadowCameraNear;\n\t\t\tfloat shadowCameraFar;\n\t\t};\n\t\tuniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\n\t#endif\n#endif",shadowmap_vertex:"#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0 || NUM_SPOT_LIGHT_SHADOWS > 0 || NUM_POINT_LIGHT_SHADOWS > 0\n\t\tvec3 shadowWorldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\n\t\tvec4 shadowWorldPosition;\n\t#endif\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\n\t\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * directionalLightShadows[ i ].shadowNormalBias, 0 );\n\t\tvDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * shadowWorldPosition;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {\n\t\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * spotLightShadows[ i ].shadowNormalBias, 0 );\n\t\tvSpotShadowCoord[ i ] = spotShadowMatrix[ i ] * shadowWorldPosition;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\n\t\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * pointLightShadows[ i ].shadowNormalBias, 0 );\n\t\tvPointShadowCoord[ i ] = pointShadowMatrix[ i ] * shadowWorldPosition;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n#endif",shadowmask_pars_fragment:"float getShadowMask() {\n\tfloat shadow = 1.0;\n\t#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\tDirectionalLightShadow directionalLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\n\t\tdirectionalLight = directionalLightShadows[ i ];\n\t\tshadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\tSpotLightShadow spotLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {\n\t\tspotLight = spotLightShadows[ i ];\n\t\tshadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\tPointLightShadow pointLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\n\t\tpointLight = pointLightShadows[ i ];\n\t\tshadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#endif\n\treturn shadow;\n}",skinbase_vertex:"#ifdef USE_SKINNING\n\tmat4 boneMatX = getBoneMatrix( skinIndex.x );\n\tmat4 boneMatY = getBoneMatrix( skinIndex.y );\n\tmat4 boneMatZ = getBoneMatrix( skinIndex.z );\n\tmat4 boneMatW = getBoneMatrix( skinIndex.w );\n#endif",skinning_pars_vertex:"#ifdef USE_SKINNING\n\tuniform mat4 bindMatrix;\n\tuniform mat4 bindMatrixInverse;\n\t#ifdef BONE_TEXTURE\n\t\tuniform highp sampler2D boneTexture;\n\t\tuniform int boneTextureSize;\n\t\tmat4 getBoneMatrix( const in float i ) {\n\t\t\tfloat j = i * 4.0;\n\t\t\tfloat x = mod( j, float( boneTextureSize ) );\n\t\t\tfloat y = floor( j / float( boneTextureSize ) );\n\t\t\tfloat dx = 1.0 / float( boneTextureSize );\n\t\t\tfloat dy = 1.0 / float( boneTextureSize );\n\t\t\ty = dy * ( y + 0.5 );\n\t\t\tvec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\n\t\t\tvec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\n\t\t\tvec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\n\t\t\tvec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\n\t\t\tmat4 bone = mat4( v1, v2, v3, v4 );\n\t\t\treturn bone;\n\t\t}\n\t#else\n\t\tuniform mat4 boneMatrices[ MAX_BONES ];\n\t\tmat4 getBoneMatrix( const in float i ) {\n\t\t\tmat4 bone = boneMatrices[ int(i) ];\n\t\t\treturn bone;\n\t\t}\n\t#endif\n#endif",skinning_vertex:"#ifdef USE_SKINNING\n\tvec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );\n\tvec4 skinned = vec4( 0.0 );\n\tskinned += boneMatX * skinVertex * skinWeight.x;\n\tskinned += boneMatY * skinVertex * skinWeight.y;\n\tskinned += boneMatZ * skinVertex * skinWeight.z;\n\tskinned += boneMatW * skinVertex * skinWeight.w;\n\ttransformed = ( bindMatrixInverse * skinned ).xyz;\n#endif",skinnormal_vertex:"#ifdef USE_SKINNING\n\tmat4 skinMatrix = mat4( 0.0 );\n\tskinMatrix += skinWeight.x * boneMatX;\n\tskinMatrix += skinWeight.y * boneMatY;\n\tskinMatrix += skinWeight.z * boneMatZ;\n\tskinMatrix += skinWeight.w * boneMatW;\n\tskinMatrix = bindMatrixInverse * skinMatrix * bindMatrix;\n\tobjectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;\n\t#ifdef USE_TANGENT\n\t\tobjectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;\n\t#endif\n#endif",specularmap_fragment:"float specularStrength;\n#ifdef USE_SPECULARMAP\n\tvec4 texelSpecular = texture2D( specularMap, vUv );\n\tspecularStrength = texelSpecular.r;\n#else\n\tspecularStrength = 1.0;\n#endif",specularmap_pars_fragment:"#ifdef USE_SPECULARMAP\n\tuniform sampler2D specularMap;\n#endif",tonemapping_fragment:"#if defined( TONE_MAPPING )\n\tgl_FragColor.rgb = toneMapping( gl_FragColor.rgb );\n#endif",tonemapping_pars_fragment:"#ifndef saturate\n#define saturate(a) clamp( a, 0.0, 1.0 )\n#endif\nuniform float toneMappingExposure;\nvec3 LinearToneMapping( vec3 color ) {\n\treturn toneMappingExposure * color;\n}\nvec3 ReinhardToneMapping( vec3 color ) {\n\tcolor *= toneMappingExposure;\n\treturn saturate( color / ( vec3( 1.0 ) + color ) );\n}\nvec3 OptimizedCineonToneMapping( vec3 color ) {\n\tcolor *= toneMappingExposure;\n\tcolor = max( vec3( 0.0 ), color - 0.004 );\n\treturn pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );\n}\nvec3 RRTAndODTFit( vec3 v ) {\n\tvec3 a = v * ( v + 0.0245786 ) - 0.000090537;\n\tvec3 b = v * ( 0.983729 * v + 0.4329510 ) + 0.238081;\n\treturn a / b;\n}\nvec3 ACESFilmicToneMapping( vec3 color ) {\n\tconst mat3 ACESInputMat = mat3(\n\t\tvec3( 0.59719, 0.07600, 0.02840 ),\t\tvec3( 0.35458, 0.90834, 0.13383 ),\n\t\tvec3( 0.04823, 0.01566, 0.83777 )\n\t);\n\tconst mat3 ACESOutputMat = mat3(\n\t\tvec3(\t1.60475, -0.10208, -0.00327 ),\t\tvec3( -0.53108,\t1.10813, -0.07276 ),\n\t\tvec3( -0.07367, -0.00605,\t1.07602 )\n\t);\n\tcolor *= toneMappingExposure / 0.6;\n\tcolor = ACESInputMat * color;\n\tcolor = RRTAndODTFit( color );\n\tcolor = ACESOutputMat * color;\n\treturn saturate( color );\n}\nvec3 CustomToneMapping( vec3 color ) { return color; }",transmission_fragment:"#ifdef USE_TRANSMISSION\n\t#ifdef USE_TRANSMISSIONMAP\n\t\ttotalTransmission *= texture2D( transmissionMap, vUv ).r;\n\t#endif\n\t#ifdef USE_THICKNESSNMAP\n\t\tthicknessFactor *= texture2D( thicknessMap, vUv ).g;\n\t#endif\n\tvec3 pos = vWorldPosition.xyz / vWorldPosition.w;\n\tvec3 v = normalize( cameraPosition - pos );\n\tvec3 viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );\n\tfloat ior = ( 1.0 + 0.4 * reflectivity ) / ( 1.0 - 0.4 * reflectivity );\n\tvec3 f0 = vec3( pow( ior - 1.0, 2.0 ) / pow( ior + 1.0, 2.0 ) );\n\tvec3 f90 = vec3( 1.0 );\n\tvec3 f_transmission = totalTransmission * getIBLVolumeRefraction(\n\t\tnormal, v, viewDir, roughnessFactor, diffuseColor.rgb, f0, f90,\n\t\tpos, modelMatrix, viewMatrix, projectionMatrix, ior, thicknessFactor,\n\t\tattenuationColor, attenuationDistance);\n\tdiffuseColor.rgb = mix( diffuseColor.rgb, f_transmission, totalTransmission );\n#endif",transmission_pars_fragment:"#ifdef USE_TRANSMISSION\n\t#ifdef USE_TRANSMISSIONMAP\n\t\tuniform sampler2D transmissionMap;\n\t#endif\n\t#ifdef USE_THICKNESSMAP\n\t\tuniform sampler2D thicknessMap;\n\t#endif\n\tuniform vec2 transmissionSamplerSize;\n\tuniform sampler2D transmissionSamplerMap;\n\tuniform mat4 modelMatrix;\n\tuniform mat4 projectionMatrix;\n\tvarying vec4 vWorldPosition;\n\tvec3 getVolumeTransmissionRay(vec3 n, vec3 v, float thickness, float ior, mat4 modelMatrix) {\n\t\tvec3 refractionVector = refract(-v, normalize(n), 1.0 / ior);\n\t\tvec3 modelScale;\n\t\tmodelScale.x = length(vec3(modelMatrix[0].xyz));\n\t\tmodelScale.y = length(vec3(modelMatrix[1].xyz));\n\t\tmodelScale.z = length(vec3(modelMatrix[2].xyz));\n\t\treturn normalize(refractionVector) * thickness * modelScale;\n\t}\n\tfloat applyIorToRoughness(float roughness, float ior) {\n\t\treturn roughness * clamp(ior * 2.0 - 2.0, 0.0, 1.0);\n\t}\n\tvec3 getTransmissionSample(vec2 fragCoord, float roughness, float ior) {\n\t\tfloat framebufferLod = log2(transmissionSamplerSize.x) * applyIorToRoughness(roughness, ior);\n\t\treturn texture2DLodEXT(transmissionSamplerMap, fragCoord.xy, framebufferLod).rgb;\n\t}\n\tvec3 applyVolumeAttenuation(vec3 radiance, float transmissionDistance, vec3 attenuationColor, float attenuationDistance) {\n\t\tif (attenuationDistance == 0.0) {\n\t\t\treturn radiance;\n\t\t} else {\n\t\t\tvec3 attenuationCoefficient = -log(attenuationColor) / attenuationDistance;\n\t\t\tvec3 transmittance = exp(-attenuationCoefficient * transmissionDistance);\t\t\treturn transmittance * radiance;\n\t\t}\n\t}\n\tvec3 getIBLVolumeRefraction(vec3 n, vec3 v, vec3 viewDir, float perceptualRoughness, vec3 baseColor, vec3 f0, vec3 f90,\n\t\tvec3 position, mat4 modelMatrix, mat4 viewMatrix, mat4 projMatrix, float ior, float thickness, vec3 attenuationColor, float attenuationDistance) {\n\t\tvec3 transmissionRay = getVolumeTransmissionRay(n, v, thickness, ior, modelMatrix);\n\t\tvec3 refractedRayExit = position + transmissionRay;\n\t\tvec4 ndcPos = projMatrix * viewMatrix * vec4(refractedRayExit, 1.0);\n\t\tvec2 refractionCoords = ndcPos.xy / ndcPos.w;\n\t\trefractionCoords += 1.0;\n\t\trefractionCoords /= 2.0;\n\t\tvec3 transmittedLight = getTransmissionSample(refractionCoords, perceptualRoughness, ior);\n\t\tvec3 attenuatedColor = applyVolumeAttenuation(transmittedLight, length(transmissionRay), attenuationColor, attenuationDistance);\n\t\tfloat NdotV = saturate(dot(n, viewDir));\n\t\tvec2 brdf = integrateSpecularBRDF(NdotV, perceptualRoughness);\n\t\tvec3 specularColor = f0 * brdf.x + f90 * brdf.y;\n\t\treturn (1.0 - specularColor) * attenuatedColor * baseColor;\n\t}\n#endif",uv_pars_fragment:"#if ( defined( USE_UV ) && ! defined( UVS_VERTEX_ONLY ) )\n\tvarying vec2 vUv;\n#endif",uv_pars_vertex:"#ifdef USE_UV\n\t#ifdef UVS_VERTEX_ONLY\n\t\tvec2 vUv;\n\t#else\n\t\tvarying vec2 vUv;\n\t#endif\n\tuniform mat3 uvTransform;\n#endif",uv_vertex:"#ifdef USE_UV\n\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\n#endif",uv2_pars_fragment:"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\tvarying vec2 vUv2;\n#endif",uv2_pars_vertex:"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\tattribute vec2 uv2;\n\tvarying vec2 vUv2;\n\tuniform mat3 uv2Transform;\n#endif",uv2_vertex:"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\tvUv2 = ( uv2Transform * vec3( uv2, 1 ) ).xy;\n#endif",worldpos_vertex:"#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP ) || defined ( USE_TRANSMISSION )\n\tvec4 worldPosition = vec4( transformed, 1.0 );\n\t#ifdef USE_INSTANCING\n\t\tworldPosition = instanceMatrix * worldPosition;\n\t#endif\n\tworldPosition = modelMatrix * worldPosition;\n#endif",background_frag:"uniform sampler2D t2D;\nvarying vec2 vUv;\nvoid main() {\n\tvec4 texColor = texture2D( t2D, vUv );\n\tgl_FragColor = mapTexelToLinear( texColor );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n}",background_vert:"varying vec2 vUv;\nuniform mat3 uvTransform;\nvoid main() {\n\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\n\tgl_Position = vec4( position.xy, 1.0, 1.0 );\n}",cube_frag:"#include <envmap_common_pars_fragment>\nuniform float opacity;\nvarying vec3 vWorldDirection;\n#include <cube_uv_reflection_fragment>\nvoid main() {\n\tvec3 vReflect = vWorldDirection;\n\t#include <envmap_fragment>\n\tgl_FragColor = envColor;\n\tgl_FragColor.a *= opacity;\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n}",cube_vert:"varying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n\tvWorldDirection = transformDirection( position, modelMatrix );\n\t#include <begin_vertex>\n\t#include <project_vertex>\n\tgl_Position.z = gl_Position.w;\n}",depth_frag:"#if DEPTH_PACKING == 3200\n\tuniform float opacity;\n#endif\n#include <common>\n#include <packing>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvarying vec2 vHighPrecisionZW;\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( 1.0 );\n\t#if DEPTH_PACKING == 3200\n\t\tdiffuseColor.a = opacity;\n\t#endif\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <logdepthbuf_fragment>\n\tfloat fragCoordZ = 0.5 * vHighPrecisionZW[0] / vHighPrecisionZW[1] + 0.5;\n\t#if DEPTH_PACKING == 3200\n\t\tgl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );\n\t#elif DEPTH_PACKING == 3201\n\t\tgl_FragColor = packDepthToRGBA( fragCoordZ );\n\t#endif\n}",depth_vert:"#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvarying vec2 vHighPrecisionZW;\nvoid main() {\n\t#include <uv_vertex>\n\t#include <skinbase_vertex>\n\t#ifdef USE_DISPLACEMENTMAP\n\t\t#include <beginnormal_vertex>\n\t\t#include <morphnormal_vertex>\n\t\t#include <skinnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvHighPrecisionZW = gl_Position.zw;\n}",distanceRGBA_frag:"#define DISTANCE\nuniform vec3 referencePosition;\nuniform float nearDistance;\nuniform float farDistance;\nvarying vec3 vWorldPosition;\n#include <common>\n#include <packing>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main () {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( 1.0 );\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\tfloat dist = length( vWorldPosition - referencePosition );\n\tdist = ( dist - nearDistance ) / ( farDistance - nearDistance );\n\tdist = saturate( dist );\n\tgl_FragColor = packDepthToRGBA( dist );\n}",distanceRGBA_vert:"#define DISTANCE\nvarying vec3 vWorldPosition;\n#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <skinbase_vertex>\n\t#ifdef USE_DISPLACEMENTMAP\n\t\t#include <beginnormal_vertex>\n\t\t#include <morphnormal_vertex>\n\t\t#include <skinnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <worldpos_vertex>\n\t#include <clipping_planes_vertex>\n\tvWorldPosition = worldPosition.xyz;\n}",equirect_frag:"uniform sampler2D tEquirect;\nvarying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n\tvec3 direction = normalize( vWorldDirection );\n\tvec2 sampleUV = equirectUv( direction );\n\tvec4 texColor = texture2D( tEquirect, sampleUV );\n\tgl_FragColor = mapTexelToLinear( texColor );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n}",equirect_vert:"varying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n\tvWorldDirection = transformDirection( position, modelMatrix );\n\t#include <begin_vertex>\n\t#include <project_vertex>\n}",linedashed_frag:"uniform vec3 diffuse;\nuniform float opacity;\nuniform float dashSize;\nuniform float totalSize;\nvarying float vLineDistance;\n#include <common>\n#include <color_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tif ( mod( vLineDistance, totalSize ) > dashSize ) {\n\t\tdiscard;\n\t}\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <color_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n}",linedashed_vert:"uniform float scale;\nattribute float lineDistance;\nvarying float vLineDistance;\n#include <common>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\tvLineDistance = scale * lineDistance;\n\t#include <color_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n}",meshbasic_frag:"uniform vec3 diffuse;\nuniform float opacity;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <cube_uv_reflection_fragment>\n#include <fog_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\t#ifdef USE_LIGHTMAP\n\t\n\t\tvec4 lightMapTexel= texture2D( lightMap, vUv2 );\n\t\treflectedLight.indirectDiffuse += lightMapTexelToLinear( lightMapTexel ).rgb * lightMapIntensity;\n\t#else\n\t\treflectedLight.indirectDiffuse += vec3( 1.0 );\n\t#endif\n\t#include <aomap_fragment>\n\treflectedLight.indirectDiffuse *= diffuseColor.rgb;\n\tvec3 outgoingLight = reflectedLight.indirectDiffuse;\n\t#include <envmap_fragment>\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshbasic_vert:"#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <skinbase_vertex>\n\t#ifdef USE_ENVMAP\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <worldpos_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <envmap_vertex>\n\t#include <fog_vertex>\n}",meshlambert_frag:"uniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float opacity;\nvarying vec3 vLightFront;\nvarying vec3 vIndirectFront;\n#ifdef DOUBLE_SIDED\n\tvarying vec3 vLightBack;\n\tvarying vec3 vIndirectBack;\n#endif\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <cube_uv_reflection_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <fog_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <shadowmask_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\t#include <emissivemap_fragment>\n\t#ifdef DOUBLE_SIDED\n\t\treflectedLight.indirectDiffuse += ( gl_FrontFacing ) ? vIndirectFront : vIndirectBack;\n\t#else\n\t\treflectedLight.indirectDiffuse += vIndirectFront;\n\t#endif\n\t#include <lightmap_fragment>\n\treflectedLight.indirectDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb );\n\t#ifdef DOUBLE_SIDED\n\t\treflectedLight.directDiffuse = ( gl_FrontFacing ) ? vLightFront : vLightBack;\n\t#else\n\t\treflectedLight.directDiffuse = vLightFront;\n\t#endif\n\treflectedLight.directDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb ) * getShadowMask();\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\n\t#include <envmap_fragment>\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshlambert_vert:"#define LAMBERT\nvarying vec3 vLightFront;\nvarying vec3 vIndirectFront;\n#ifdef DOUBLE_SIDED\n\tvarying vec3 vLightBack;\n\tvarying vec3 vIndirectBack;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <envmap_pars_vertex>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <worldpos_vertex>\n\t#include <envmap_vertex>\n\t#include <lights_lambert_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",meshmatcap_frag:"#define MATCAP\nuniform vec3 diffuse;\nuniform float opacity;\nuniform sampler2D matcap;\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <fog_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\tvec3 viewDir = normalize( vViewPosition );\n\tvec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );\n\tvec3 y = cross( viewDir, x );\n\tvec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;\n\t#ifdef USE_MATCAP\n\t\tvec4 matcapColor = texture2D( matcap, uv );\n\t\tmatcapColor = matcapTexelToLinear( matcapColor );\n\t#else\n\t\tvec4 matcapColor = vec4( 1.0 );\n\t#endif\n\tvec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshmatcap_vert:"#define MATCAP\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <color_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#ifndef FLAT_SHADED\n\t\tvNormal = normalize( transformedNormal );\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n\tvViewPosition = - mvPosition.xyz;\n}",meshtoon_frag:"#define TOON\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <gradientmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <lights_toon_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\t#include <lights_toon_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshtoon_vert:"#define TOON\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n#ifndef FLAT_SHADED\n\tvNormal = normalize( transformedNormal );\n#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",meshphong_frag:"#define PHONG\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform vec3 specular;\nuniform float shininess;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <cube_uv_reflection_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <lights_phong_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\t#include <lights_phong_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\n\t#include <envmap_fragment>\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshphong_vert:"#define PHONG\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n#ifndef FLAT_SHADED\n\tvNormal = normalize( transformedNormal );\n#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <envmap_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",meshphysical_frag:"#define STANDARD\n#ifdef PHYSICAL\n\t#define REFLECTIVITY\n\t#define CLEARCOAT\n#endif\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float roughness;\nuniform float metalness;\nuniform float opacity;\n#ifdef USE_TRANSMISSION\n\tuniform float transmission;\n\tuniform float thickness;\n\tuniform vec3 attenuationColor;\n\tuniform float attenuationDistance;\n#endif\n#ifdef REFLECTIVITY\n\tuniform float reflectivity;\n#endif\n#ifdef CLEARCOAT\n\tuniform float clearcoat;\n\tuniform float clearcoatRoughness;\n#endif\n#ifdef USE_SHEEN\n\tuniform vec3 sheen;\n#endif\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n\t#ifdef USE_TANGENT\n\t\tvarying vec3 vTangent;\n\t\tvarying vec3 vBitangent;\n\t#endif\n#endif\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <bsdfs>\n#include <transmission_pars_fragment>\n#include <cube_uv_reflection_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_physical_pars_fragment>\n#include <fog_pars_fragment>\n#include <lights_pars_begin>\n#include <lights_physical_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <clearcoat_pars_fragment>\n#include <roughnessmap_pars_fragment>\n#include <metalnessmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#ifdef USE_TRANSMISSION\n\t\tfloat totalTransmission = transmission;\n\t\tfloat thicknessFactor = thickness;\n\t#endif\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <roughnessmap_fragment>\n\t#include <metalnessmap_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <clearcoat_normal_fragment_begin>\n\t#include <clearcoat_normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\tvec3 rawDiffuseColor = diffuseColor.rgb;\n\t#include <transmission_fragment>\n\t#include <lights_physical_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshphysical_vert:"#define STANDARD\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n\t#ifdef USE_TANGENT\n\t\tvarying vec3 vTangent;\n\t\tvarying vec3 vBitangent;\n\t#endif\n#endif\n#ifdef USE_TRANSMISSION\n\tvarying vec4 vWorldPosition;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n#ifndef FLAT_SHADED\n\tvNormal = normalize( transformedNormal );\n\t#ifdef USE_TANGENT\n\t\tvTangent = normalize( transformedTangent );\n\t\tvBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );\n\t#endif\n#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n#ifdef USE_TRANSMISSION\n\tvWorldPosition = worldPosition;\n#endif\n}",normal_frag:"#define NORMAL\nuniform float opacity;\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\n\tvarying vec3 vViewPosition;\n#endif\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n\t#ifdef USE_TANGENT\n\t\tvarying vec3 vTangent;\n\t\tvarying vec3 vBitangent;\n\t#endif\n#endif\n#include <packing>\n#include <uv_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\t#include <logdepthbuf_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\tgl_FragColor = vec4( packNormalToRGB( normal ), opacity );\n}",normal_vert:"#define NORMAL\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\n\tvarying vec3 vViewPosition;\n#endif\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n\t#ifdef USE_TANGENT\n\t\tvarying vec3 vTangent;\n\t\tvarying vec3 vBitangent;\n\t#endif\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n#ifndef FLAT_SHADED\n\tvNormal = normalize( transformedNormal );\n\t#ifdef USE_TANGENT\n\t\tvTangent = normalize( transformedTangent );\n\t\tvBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );\n\t#endif\n#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\n\tvViewPosition = - mvPosition.xyz;\n#endif\n}",points_frag:"uniform vec3 diffuse;\nuniform float opacity;\n#include <common>\n#include <color_pars_fragment>\n#include <map_particle_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_particle_fragment>\n\t#include <color_fragment>\n\t#include <alphatest_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n}",points_vert:"uniform float size;\nuniform float scale;\n#include <common>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <color_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <project_vertex>\n\tgl_PointSize = size;\n\t#ifdef USE_SIZEATTENUATION\n\t\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\n\t\tif ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );\n\t#endif\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <worldpos_vertex>\n\t#include <fog_vertex>\n}",shadow_frag:"uniform vec3 color;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <shadowmap_pars_fragment>\n#include <shadowmask_pars_fragment>\nvoid main() {\n\tgl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n}",shadow_vert:"#include <common>\n#include <fog_pars_vertex>\n#include <shadowmap_pars_vertex>\nvoid main() {\n\t#include <begin_vertex>\n\t#include <project_vertex>\n\t#include <worldpos_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",sprite_frag:"uniform vec3 diffuse;\nuniform float opacity;\n#include <common>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n}",sprite_vert:"uniform float rotation;\nuniform vec2 center;\n#include <common>\n#include <uv_pars_vertex>\n#include <fog_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\tvec4 mvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );\n\tvec2 scale;\n\tscale.x = length( vec3( modelMatrix[ 0 ].x, modelMatrix[ 0 ].y, modelMatrix[ 0 ].z ) );\n\tscale.y = length( vec3( modelMatrix[ 1 ].x, modelMatrix[ 1 ].y, modelMatrix[ 1 ].z ) );\n\t#ifndef USE_SIZEATTENUATION\n\t\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\n\t\tif ( isPerspective ) scale *= - mvPosition.z;\n\t#endif\n\tvec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;\n\tvec2 rotatedPosition;\n\trotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;\n\trotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;\n\tmvPosition.xy += rotatedPosition;\n\tgl_Position = projectionMatrix * mvPosition;\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n}"},Yi={common:{diffuse:{value:new Hn(16777215)},opacity:{value:1},map:{value:null},uvTransform:{value:new rr},uv2Transform:{value:new rr},alphaMap:{value:null}},specularmap:{specularMap:{value:null}},envmap:{envMap:{value:null},flipEnvMap:{value:-1},reflectivity:{value:1},refractionRatio:{value:.98},maxMipLevel:{value:0}},aomap:{aoMap:{value:null},aoMapIntensity:{value:1}},lightmap:{lightMap:{value:null},lightMapIntensity:{value:1}},emissivemap:{emissiveMap:{value:null}},bumpmap:{bumpMap:{value:null},bumpScale:{value:1}},normalmap:{normalMap:{value:null},normalScale:{value:new tr(1,1)}},displacementmap:{displacementMap:{value:null},displacementScale:{value:1},displacementBias:{value:0}},roughnessmap:{roughnessMap:{value:null}},metalnessmap:{metalnessMap:{value:null}},gradientmap:{gradientMap:{value:null}},fog:{fogDensity:{value:25e-5},fogNear:{value:1},fogFar:{value:2e3},fogColor:{value:new Hn(16777215)}},lights:{ambientLightColor:{value:[]},lightProbe:{value:[]},directionalLights:{value:[],properties:{direction:{},color:{}}},directionalLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},directionalShadowMap:{value:[]},directionalShadowMatrix:{value:[]},spotLights:{value:[],properties:{color:{},position:{},direction:{},distance:{},coneCos:{},penumbraCos:{},decay:{}}},spotLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},spotShadowMap:{value:[]},spotShadowMatrix:{value:[]},pointLights:{value:[],properties:{color:{},position:{},decay:{},distance:{}}},pointLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{},shadowCameraNear:{},shadowCameraFar:{}}},pointShadowMap:{value:[]},pointShadowMatrix:{value:[]},hemisphereLights:{value:[],properties:{direction:{},skyColor:{},groundColor:{}}},rectAreaLights:{value:[],properties:{color:{},position:{},width:{},height:{}}},ltc_1:{value:null},ltc_2:{value:null}},points:{diffuse:{value:new Hn(16777215)},opacity:{value:1},size:{value:1},scale:{value:1},map:{value:null},alphaMap:{value:null},uvTransform:{value:new rr}},sprite:{diffuse:{value:new Hn(16777215)},opacity:{value:1},center:{value:new tr(.5,.5)},rotation:{value:0},map:{value:null},alphaMap:{value:null},uvTransform:{value:new rr}}},Zi={basic:{uniforms:Di([Yi.common,Yi.specularmap,Yi.envmap,Yi.aomap,Yi.lightmap,Yi.fog]),vertexShader:qi.meshbasic_vert,fragmentShader:qi.meshbasic_frag},lambert:{uniforms:Di([Yi.common,Yi.specularmap,Yi.envmap,Yi.aomap,Yi.lightmap,Yi.emissivemap,Yi.fog,Yi.lights,{emissive:{value:new Hn(0)}}]),vertexShader:qi.meshlambert_vert,fragmentShader:qi.meshlambert_frag},phong:{uniforms:Di([Yi.common,Yi.specularmap,Yi.envmap,Yi.aomap,Yi.lightmap,Yi.emissivemap,Yi.bumpmap,Yi.normalmap,Yi.displacementmap,Yi.fog,Yi.lights,{emissive:{value:new Hn(0)},specular:{value:new Hn(1118481)},shininess:{value:30}}]),vertexShader:qi.meshphong_vert,fragmentShader:qi.meshphong_frag},standard:{uniforms:Di([Yi.common,Yi.envmap,Yi.aomap,Yi.lightmap,Yi.emissivemap,Yi.bumpmap,Yi.normalmap,Yi.displacementmap,Yi.roughnessmap,Yi.metalnessmap,Yi.fog,Yi.lights,{emissive:{value:new Hn(0)},roughness:{value:1},metalness:{value:0},envMapIntensity:{value:1}}]),vertexShader:qi.meshphysical_vert,fragmentShader:qi.meshphysical_frag},toon:{uniforms:Di([Yi.common,Yi.aomap,Yi.lightmap,Yi.emissivemap,Yi.bumpmap,Yi.normalmap,Yi.displacementmap,Yi.gradientmap,Yi.fog,Yi.lights,{emissive:{value:new Hn(0)}}]),vertexShader:qi.meshtoon_vert,fragmentShader:qi.meshtoon_frag},matcap:{uniforms:Di([Yi.common,Yi.bumpmap,Yi.normalmap,Yi.displacementmap,Yi.fog,{matcap:{value:null}}]),vertexShader:qi.meshmatcap_vert,fragmentShader:qi.meshmatcap_frag},points:{uniforms:Di([Yi.points,Yi.fog]),vertexShader:qi.points_vert,fragmentShader:qi.points_frag},dashed:{uniforms:Di([Yi.common,Yi.fog,{scale:{value:1},dashSize:{value:1},totalSize:{value:2}}]),vertexShader:qi.linedashed_vert,fragmentShader:qi.linedashed_frag},depth:{uniforms:Di([Yi.common,Yi.displacementmap]),vertexShader:qi.depth_vert,fragmentShader:qi.depth_frag},normal:{uniforms:Di([Yi.common,Yi.bumpmap,Yi.normalmap,Yi.displacementmap,{opacity:{value:1}}]),vertexShader:qi.normal_vert,fragmentShader:qi.normal_frag},sprite:{uniforms:Di([Yi.sprite,Yi.fog]),vertexShader:qi.sprite_vert,fragmentShader:qi.sprite_frag},background:{uniforms:{uvTransform:{value:new rr},t2D:{value:null}},vertexShader:qi.background_vert,fragmentShader:qi.background_frag},cube:{uniforms:Di([Yi.envmap,{opacity:{value:1}}]),vertexShader:qi.cube_vert,fragmentShader:qi.cube_frag},equirect:{uniforms:{tEquirect:{value:null}},vertexShader:qi.equirect_vert,fragmentShader:qi.equirect_frag},distanceRGBA:{uniforms:Di([Yi.common,Yi.displacementmap,{referencePosition:{value:new pr},nearDistance:{value:1},farDistance:{value:1e3}}]),vertexShader:qi.distanceRGBA_vert,fragmentShader:qi.distanceRGBA_frag},shadow:{uniforms:Di([Yi.lights,Yi.fog,{color:{value:new Hn(0)},opacity:{value:1}}]),vertexShader:qi.shadow_vert,fragmentShader:qi.shadow_frag}};function Ji(a,s,r,o,n){const l=new Hn(0);let h=0,c,u,d=null,p=0,m=null;function f(e,t){r.buffers.color.setClear(e.r,e.g,e.b,t,n)}return{getClearColor:function(){return l},setClearColor:function(e,t=1){l.set(e),h=t,f(l,h)},getClearAlpha:function(){return h},setClearAlpha:function(e){h=e,f(l,h)},render:function(e,t){let r=!1,n=!0===t.isScene?t.background:null;n&&n.isTexture&&(n=s.get(n));const i=a.xr;(t=i.getSession&&i.getSession())&&"additive"===t.environmentBlendMode&&(n=null),null===n?f(l,h):n&&n.isColor&&(f(n,1),r=!0),(a.autoClear||r)&&a.clear(a.autoClearColor,a.autoClearDepth,a.autoClearStencil),n&&(n.isCubeTexture||n.mapping===U)?(void 0===u&&(u=new Li(new Pi(1,1,1),new Fi({name:"BackgroundCubeMaterial",uniforms:Ii(Zi.cube.uniforms),vertexShader:Zi.cube.vertexShader,fragmentShader:Zi.cube.fragmentShader,side:Y,depthTest:!1,depthWrite:!1,fog:!1})),u.geometry.deleteAttribute("normal"),u.geometry.deleteAttribute("uv"),u.onBeforeRender=function(e,t,r){this.matrixWorld.copyPosition(r.matrixWorld)},Object.defineProperty(u.material,"envMap",{get:function(){return this.uniforms.envMap.value}}),o.update(u)),u.material.uniforms.envMap.value=n,u.material.uniforms.flipEnvMap.value=n.isCubeTexture&&n._needsFlipEnvMap?-1:1,d===n&&p===n.version&&m===a.toneMapping||(u.material.needsUpdate=!0,d=n,p=n.version,m=a.toneMapping),e.unshift(u,u.geometry,u.material,0,0,null)):n&&n.isTexture&&(void 0===c&&(c=new Li(new Xi(2,2),new Fi({name:"BackgroundMaterial",uniforms:Ii(Zi.background.uniforms),vertexShader:Zi.background.vertexShader,fragmentShader:Zi.background.fragmentShader,side:R,depthTest:!1,depthWrite:!1,fog:!1})),c.geometry.deleteAttribute("normal"),Object.defineProperty(c.material,"map",{get:function(){return this.uniforms.t2D.value}}),o.update(c)),c.material.uniforms.t2D.value=n,!0===n.matrixAutoUpdate&&n.updateMatrix(),c.material.uniforms.uvTransform.value.copy(n.matrix),d===n&&p===n.version&&m===a.toneMapping||(c.material.needsUpdate=!0,d=n,p=n.version,m=a.toneMapping),e.unshift(c,c.geometry,c.material,0,0,null))}}}function Ki(M,w,b,E){const i=M.getParameter(M.MAX_VERTEX_ATTRIBS),o=E.isWebGL2?null:w.get("OES_vertex_array_object"),l=E.isWebGL2||null!==o,h={},e=d(null);let c=e;function u(e){return E.isWebGL2?M.bindVertexArray(e):o.bindVertexArrayOES(e)}function a(e){return E.isWebGL2?M.deleteVertexArray(e):o.deleteVertexArrayOES(e)}function d(e){const t=[],r=[],n=[];for(let e=0;e<i;e++)t[e]=0,r[e]=0,n[e]=0;return{geometry:null,program:null,wireframe:!1,newAttributes:t,enabledAttributes:r,attributeDivisors:n,object:e,attributes:{},index:null}}function T(){const r=c.newAttributes;for(let e=0,t=r.length;e<t;e++)r[e]=0}function S(e){A(e,0)}function A(e,t){const r=c.newAttributes,n=c.enabledAttributes,i=c.attributeDivisors;if(r[e]=1,0===n[e]&&(M.enableVertexAttribArray(e),n[e]=1),i[e]!==t){const a=E.isWebGL2?M:w.get("ANGLE_instanced_arrays");a[E.isWebGL2?"vertexAttribDivisor":"vertexAttribDivisorANGLE"](e,t),i[e]=t}}function R(){var r=c.newAttributes;const n=c.enabledAttributes;for(let e=0,t=n.length;e<t;e++)n[e]!==r[e]&&(M.disableVertexAttribArray(e),n[e]=0)}function L(e,t,r,n,i,a){!0!==E.isWebGL2||r!==M.INT&&r!==M.UNSIGNED_INT?M.vertexAttribPointer(e,t,r,n,i,a):M.vertexAttribIPointer(e,t,r,i,a)}function s(){t(),c!==e&&(c=e,u(c.object))}function t(){e.geometry=null,e.program=null,e.wireframe=!1}return{setup:function(e,t,r,n,i){let a=!1;var s;l?(s=function(e,t,r){r=!0===r.wireframe;let n=h[e.id];void 0===n&&(n={},h[e.id]=n);let i=n[t.id];void 0===i&&(i={},n[t.id]=i);let a=i[r];void 0===a&&(a=d(E.isWebGL2?M.createVertexArray():o.createVertexArrayOES()),i[r]=a);return a}(n,r,t),c!==s&&(c=s,u(c.object)),a=function(e,t){var r=c.attributes,n=e.attributes;let i=0;for(const o in n){var a=r[o],s=n[o];if(void 0===a)return!0;if(a.attribute!==s)return!0;if(a.data!==s.data)return!0;i++}return c.attributesNum!==i||c.index!==t}(n,i),a&&function(e,t){const r={},n=e.attributes;let i=0;for(const s in n){var a=n[s];const o={};(o.attribute=a).data&&(o.data=a.data),r[s]=o,i++}c.attributes=r,c.attributesNum=i,c.index=t}(n,i)):(s=!0===t.wireframe,c.geometry===n.id&&c.program===r.id&&c.wireframe===s||(c.geometry=n.id,c.program=r.id,c.wireframe=s,a=!0)),!0===e.isInstancedMesh&&(a=!0),null!==i&&b.update(i,M.ELEMENT_ARRAY_BUFFER),a&&(function(e,t,r,n){if(!1===E.isWebGL2&&(e.isInstancedMesh||n.isInstancedBufferGeometry)&&null===w.get("ANGLE_instanced_arrays"))return;T();var i=n.attributes,a=r.getAttributes(),s=t.defaultAttributeValues;for(const _ in a){var o=a[_];if(0<=o){var l=i[_];if(void 0!==l){var h,c,u,d,p,m=l.normalized,f=l.itemSize,g=b.get(l);void 0!==g&&(h=g.buffer,c=g.type,u=g.bytesPerElement,l.isInterleavedBufferAttribute?(d=l.data,p=d.stride,g=l.offset,d&&d.isInstancedInterleavedBuffer?(A(o,d.meshPerAttribute),void 0===n._maxInstanceCount&&(n._maxInstanceCount=d.meshPerAttribute*d.count)):S(o),M.bindBuffer(M.ARRAY_BUFFER,h),L(o,f,c,m,p*u,g*u)):(l.isInstancedBufferAttribute?(A(o,l.meshPerAttribute),void 0===n._maxInstanceCount&&(n._maxInstanceCount=l.meshPerAttribute*l.count)):S(o),M.bindBuffer(M.ARRAY_BUFFER,h),L(o,f,c,m,0,0)))}else if("instanceMatrix"===_){m=b.get(e.instanceMatrix);void 0!==m&&(y=m.buffer,v=m.type,A(o+0,1),A(o+1,1),A(o+2,1),A(o+3,1),M.bindBuffer(M.ARRAY_BUFFER,y),M.vertexAttribPointer(o+0,4,v,!1,64,0),M.vertexAttribPointer(o+1,4,v,!1,64,16),M.vertexAttribPointer(o+2,4,v,!1,64,32),M.vertexAttribPointer(o+3,4,v,!1,64,48))}else if("instanceColor"===_){var v,y=b.get(e.instanceColor);void 0!==y&&(v=y.buffer,y=y.type,A(o,1),M.bindBuffer(M.ARRAY_BUFFER,v),M.vertexAttribPointer(o,3,y,!1,12,0))}else if(void 0!==s){var x=s[_];if(void 0!==x)switch(x.length){case 2:M.vertexAttrib2fv(o,x);break;case 3:M.vertexAttrib3fv(o,x);break;case 4:M.vertexAttrib4fv(o,x);break;default:M.vertexAttrib1fv(o,x)}}}}R()}(e,t,r,n),null!==i&&M.bindBuffer(M.ELEMENT_ARRAY_BUFFER,b.get(i).buffer))},reset:s,resetDefaultState:t,dispose:function(){s();for(const e in h){const t=h[e];for(const r in t){const n=t[r];for(const i in n)a(n[i].object),delete n[i];delete t[r]}delete h[e]}},releaseStatesOfGeometry:function(e){if(void 0!==h[e.id]){const t=h[e.id];for(const r in t){const n=t[r];for(const i in n)a(n[i].object),delete n[i];delete t[r]}delete h[e.id]}},releaseStatesOfProgram:function(e){for(const t in h){const r=h[t];if(void 0!==r[e.id]){const n=r[e.id];for(const i in n)a(n[i].object),delete n[i];delete r[e.id]}}},initAttributes:T,enableAttribute:S,disableUnusedAttributes:R}}function Qi(a,s,o,e){const l=e.isWebGL2;let h;this.setMode=function(e){h=e},this.render=function(e,t){a.drawArrays(h,e,t),o.update(t,h,1)},this.renderInstances=function(r,n,i){if(0!==i){let e,t;if(l)e=a,t="drawArraysInstanced";else if(e=s.get("ANGLE_instanced_arrays"),t="drawArraysInstancedANGLE",null===e)return void console.error("THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");e[t](h,r,n,i),o.update(n,h,i)}}}function $i(t,r,e){let n;function i(e){if("highp"===e){if(0<t.getShaderPrecisionFormat(t.VERTEX_SHADER,t.HIGH_FLOAT).precision&&0<t.getShaderPrecisionFormat(t.FRAGMENT_SHADER,t.HIGH_FLOAT).precision)return"highp";e="mediump"}return"mediump"===e&&0<t.getShaderPrecisionFormat(t.VERTEX_SHADER,t.MEDIUM_FLOAT).precision&&0<t.getShaderPrecisionFormat(t.FRAGMENT_SHADER,t.MEDIUM_FLOAT).precision?"mediump":"lowp"}var a="undefined"!=typeof WebGL2RenderingContext&&t instanceof WebGL2RenderingContext||"undefined"!=typeof WebGL2ComputeRenderingContext&&t instanceof WebGL2ComputeRenderingContext;let s=void 0!==e.precision?e.precision:"highp";var o=i(s);o!==s&&(console.warn("THREE.WebGLRenderer:",s,"not supported, using",o,"instead."),s=o);var l=a||r.has("WEBGL_draw_buffers"),h=!0===e.logarithmicDepthBuffer,c=t.getParameter(t.MAX_TEXTURE_IMAGE_UNITS),u=t.getParameter(t.MAX_VERTEX_TEXTURE_IMAGE_UNITS),d=t.getParameter(t.MAX_TEXTURE_SIZE),p=t.getParameter(t.MAX_CUBE_MAP_TEXTURE_SIZE),m=t.getParameter(t.MAX_VERTEX_ATTRIBS),f=t.getParameter(t.MAX_VERTEX_UNIFORM_VECTORS),g=t.getParameter(t.MAX_VARYING_VECTORS),v=t.getParameter(t.MAX_FRAGMENT_UNIFORM_VECTORS),y=0<u,x=a||r.has("OES_texture_float"),o=y&&x,e=a?t.getParameter(t.MAX_SAMPLES):0;return{isWebGL2:a,drawBuffers:l,getMaxAnisotropy:function(){return void 0!==n||(n=!0===r.has("EXT_texture_filter_anisotropic")?(e=r.get("EXT_texture_filter_anisotropic"),t.getParameter(e.MAX_TEXTURE_MAX_ANISOTROPY_EXT)):0),n;var e},getMaxPrecision:i,precision:s,logarithmicDepthBuffer:h,maxTextures:c,maxVertexTextures:u,maxTextureSize:d,maxCubemapSize:p,maxAttributes:m,maxVertexUniforms:f,maxVaryings:g,maxFragmentUniforms:v,vertexTextures:y,floatFragmentTextures:x,floatVertexTextures:o,maxSamples:e}}function ea(t){const o=this;let h=null,c=0,u=!1,d=!1;const l=new _n,p=new rr,m={value:null,needsUpdate:!1};function f(){m.value!==h&&(m.value=h,m.needsUpdate=0<c),o.numPlanes=c,o.numIntersection=0}function g(r,e,n,t){var i=null!==r?r.length:0;let a=null;if(0!==i){if(a=m.value,!0!==t||null===a){var t=n+4*i,s=e.matrixWorldInverse;p.getNormalMatrix(s),(null===a||a.length<t)&&(a=new Float32Array(t));for(let e=0,t=n;e!==i;++e,t+=4)l.copy(r[e]).applyMatrix4(s,p),l.normal.toArray(a,t),a[t+3]=l.constant}m.value=a,m.needsUpdate=!0}return o.numPlanes=i,o.numIntersection=0,a}this.uniform=m,this.numPlanes=0,this.numIntersection=0,this.init=function(e,t,r){var n=0!==e.length||t||0!==c||u;return u=t,h=g(e,r,0),c=e.length,n},this.beginShadows=function(){d=!0,g(null)},this.endShadows=function(){d=!1,f()},this.setState=function(e,r,n){var i=e.clippingPlanes,a=e.clipIntersection,s=e.clipShadows;const o=t.get(e);if(!u||null===i||0===i.length||d&&!s)d?g(null):f();else{var s=d?0:c,l=4*s;let t=o.clippingState||null;m.value=t,t=g(i,r,l,n);for(let e=0;e!==l;++e)t[e]=h[e];o.clippingState=t,this.numIntersection=a?this.numPlanes:0,this.numPlanes+=s}}}function ta(i){let a=new WeakMap;function s(e,t){return t===l?e.mapping=F:t===h&&(e.mapping=B),e}function o(e){const t=e.target;t.removeEventListener("dispose",o);const r=a.get(t);void 0!==r&&(a.delete(t),r.dispose())}return{get:function(e){if(e&&e.isTexture){var t=e.mapping;if(t===l||t===h){if(a.has(e))return s(a.get(e).texture,e.mapping);var r=e.image;if(r&&0<r.height){t=i.getRenderTarget();const n=new Hi(r.height/2);return n.fromEquirectangularTexture(i,e),a.set(e,n),i.setRenderTarget(t),e.addEventListener("dispose",o),s(n.texture,e.mapping)}return null}}return e},dispose:function(){a=new WeakMap}}}function ra(r){const n={};function i(e){if(void 0!==n[e])return n[e];let t;switch(e){case"WEBGL_depth_texture":t=r.getExtension("WEBGL_depth_texture")||r.getExtension("MOZ_WEBGL_depth_texture")||r.getExtension("WEBKIT_WEBGL_depth_texture");break;case"EXT_texture_filter_anisotropic":t=r.getExtension("EXT_texture_filter_anisotropic")||r.getExtension("MOZ_EXT_texture_filter_anisotropic")||r.getExtension("WEBKIT_EXT_texture_filter_anisotropic");break;case"WEBGL_compressed_texture_s3tc":t=r.getExtension("WEBGL_compressed_texture_s3tc")||r.getExtension("MOZ_WEBGL_compressed_texture_s3tc")||r.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");break;case"WEBGL_compressed_texture_pvrtc":t=r.getExtension("WEBGL_compressed_texture_pvrtc")||r.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc");break;default:t=r.getExtension(e)}return n[e]=t,t}return{has:function(e){return null!==i(e)},init:function(e){e.isWebGL2?i("EXT_color_buffer_float"):(i("WEBGL_depth_texture"),i("OES_texture_float"),i("OES_texture_half_float"),i("OES_texture_half_float_linear"),i("OES_standard_derivatives"),i("OES_element_index_uint"),i("OES_vertex_array_object"),i("ANGLE_instanced_arrays")),i("OES_texture_float_linear"),i("EXT_color_buffer_half_float")},get:function(e){var t=i(e);return null===t&&console.warn("THREE.WebGLRenderer: "+e+" extension not supported."),t}}}function na(s,m,n,i){const a={},f=new WeakMap;function o(e){const t=e.target;null!==t.index&&m.remove(t.index);for(const r in t.attributes)m.remove(t.attributes[r]);t.removeEventListener("dispose",o),delete a[t.id];e=f.get(t);e&&(m.remove(e),f.delete(t)),i.releaseStatesOfGeometry(t),!0===t.isInstancedBufferGeometry&&delete t._maxInstanceCount,n.memory.geometries--}function l(e){const r=[];var t=e.index,n=e.attributes.position;let i=0;if(null!==t){var a=t.array;i=t.version;for(let e=0,t=a.length;e<t;e+=3){var s=a[e+0],o=a[e+1],l=a[e+2];r.push(s,o,o,l,l,s)}}else{var h=n.array;i=n.version;for(let e=0,t=h.length/3-1;e<t;e+=3){var c=e+0,u=e+1,d=e+2;r.push(c,u,u,d,d,c)}}const p=new(65535<ti(r)?Kn:Zn)(r,1);p.version=i;h=f.get(e);h&&m.remove(h),f.set(e,p)}return{get:function(e,t){return!0===a[t.id]||(t.addEventListener("dispose",o),a[t.id]=!0,n.memory.geometries++),t},update:function(e){var t=e.attributes;for(const i in t)m.update(t[i],s.ARRAY_BUFFER);var r=e.morphAttributes;for(const a in r){var n=r[a];for(let e=0,t=n.length;e<t;e++)m.update(n[e],s.ARRAY_BUFFER)}},getWireframeAttribute:function(e){var t,r=f.get(e);return(!r||null!==(t=e.index)&&r.version<t.version)&&l(e),f.get(e)}}}function ia(a,s,o,e){const l=e.isWebGL2;let h;let c,u;this.setMode=function(e){h=e},this.setIndex=function(e){c=e.type,u=e.bytesPerElement},this.render=function(e,t){a.drawElements(h,t,c,e*u),o.update(t,h,1)},this.renderInstances=function(r,n,i){if(0!==i){let e,t;if(l)e=a,t="drawElementsInstanced";else if(e=s.get("ANGLE_instanced_arrays"),t="drawElementsInstancedANGLE",null===e)return void console.error("THREE.WebGLIndexedBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");e[t](h,n,c,r*u,i),o.update(n,h,i)}}}function aa(n){const i={frame:0,calls:0,triangles:0,points:0,lines:0};return{memory:{geometries:0,textures:0},render:i,programs:null,autoReset:!0,reset:function(){i.frame++,i.calls=0,i.triangles=0,i.points=0,i.lines=0},update:function(e,t,r){switch(i.calls++,t){case n.TRIANGLES:i.triangles+=r*(e/3);break;case n.LINES:i.lines+=r*(e/2);break;case n.LINE_STRIP:i.lines+=r*(e-1);break;case n.LINE_LOOP:i.lines+=r*e;break;case n.POINTS:i.points+=r*e;break;default:console.error("THREE.WebGLInfo: Unknown draw mode:",t)}}}}function sa(e,t){return e[0]-t[0]}function oa(e,t){return Math.abs(t[1])-Math.abs(e[1])}function la(p){const m={},f=new Float32Array(8),g=[];for(let e=0;e<8;e++)g[e]=[e,0];return{update:function(e,t,r,n){var i=e.morphTargetInfluences,a=void 0===i?0:i.length;let s=m[t.id];if(void 0===s){s=[];for(let e=0;e<a;e++)s[e]=[e,0];m[t.id]=s}for(let e=0;e<a;e++){const d=s[e];d[0]=e,d[1]=i[e]}s.sort(oa);for(let e=0;e<8;e++)e<a&&s[e][1]?(g[e][0]=s[e][0],g[e][1]=s[e][1]):(g[e][0]=Number.MAX_SAFE_INTEGER,g[e][1]=0);g.sort(sa);var o=r.morphTargets&&t.morphAttributes.position,l=r.morphNormals&&t.morphAttributes.normal;let h=0;for(let e=0;e<8;e++){var c=g[e],u=c[0],c=c[1];u!==Number.MAX_SAFE_INTEGER&&c?(o&&t.getAttribute("morphTarget"+e)!==o[u]&&t.setAttribute("morphTarget"+e,o[u]),l&&t.getAttribute("morphNormal"+e)!==l[u]&&t.setAttribute("morphNormal"+e,l[u]),f[e]=c,h+=c):(o&&!0===t.hasAttribute("morphTarget"+e)&&t.deleteAttribute("morphTarget"+e),l&&!0===t.hasAttribute("morphNormal"+e)&&t.deleteAttribute("morphNormal"+e),f[e]=0)}r=t.morphTargetsRelative?1:1-h,n.getUniforms().setValue(p,"morphTargetBaseInfluence",r),n.getUniforms().setValue(p,"morphTargetInfluences",f)}}}function ha(n,i,a,s){let o=new WeakMap;function l(e){const t=e.target;t.removeEventListener("dispose",l),a.remove(t.instanceMatrix),null!==t.instanceColor&&a.remove(t.instanceColor)}return{update:function(e){var t=s.render.frame,r=e.geometry,r=i.get(e,r);return o.get(r)!==t&&(i.update(r),o.set(r,t)),e.isInstancedMesh&&(!1===e.hasEventListener("dispose",l)&&e.addEventListener("dispose",l),a.update(e.instanceMatrix,n.ARRAY_BUFFER),null!==e.instanceColor&&a.update(e.instanceColor,n.ARRAY_BUFFER)),r},dispose:function(){o=new WeakMap}}}Zi.physical={uniforms:Di([Zi.standard.uniforms,{clearcoat:{value:0},clearcoatMap:{value:null},clearcoatRoughness:{value:0},clearcoatRoughnessMap:{value:null},clearcoatNormalScale:{value:new tr(1,1)},clearcoatNormalMap:{value:null},sheen:{value:new Hn(0)},transmission:{value:0},transmissionMap:{value:null},transmissionSamplerSize:{value:new tr},transmissionSamplerMap:{value:null},thickness:{value:0},thicknessMap:{value:null},attenuationDistance:{value:0},attenuationColor:{value:new Hn(0)}}]),vertexShader:qi.meshphysical_vert,fragmentShader:qi.meshphysical_frag};class ca extends sr{constructor(e=null,t=1,r=1,n=1){super(null),this.image={data:e,width:t,height:r,depth:n},this.magFilter=Ce,this.minFilter=Ce,this.wrapR=Le,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1,this.needsUpdate=!0}}class ua extends sr{constructor(e=null,t=1,r=1,n=1){super(null),this.image={data:e,width:t,height:r,depth:n},this.magFilter=Ce,this.minFilter=Ce,this.wrapR=Le,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1,this.needsUpdate=!0}}ua.prototype.isDataTexture3D=ca.prototype.isDataTexture2DArray=!0;const da=new sr,pa=new ca,ma=new ua,fa=new zi,ga=[],va=[],ya=new Float32Array(16),xa=new Float32Array(9),_a=new Float32Array(4);function Ma(r,n,i){const e=r[0];if(e<=0||0<e)return r;var t=n*i;let a=ga[t];if(void 0===a&&(a=new Float32Array(t),ga[t]=a),0!==n){e.toArray(a,0);for(let e=1,t=0;e!==n;++e)t+=i,r[e].toArray(a,t)}return a}function wa(r,n){if(r.length===n.length){for(let e=0,t=r.length;e<t;e++)if(r[e]!==n[e])return;return 1}}function ba(r,n){for(let e=0,t=n.length;e<t;e++)r[e]=n[e]}function Ea(t,r){let n=va[r];void 0===n&&(n=new Int32Array(r),va[r]=n);for(let e=0;e!==r;++e)n[e]=t.allocateTextureUnit();return n}function Ta(e,t){const r=this.cache;r[0]!==t&&(e.uniform1f(this.addr,t),r[0]=t)}function Sa(e,t){const r=this.cache;void 0!==t.x?r[0]===t.x&&r[1]===t.y||(e.uniform2f(this.addr,t.x,t.y),r[0]=t.x,r[1]=t.y):wa(r,t)||(e.uniform2fv(this.addr,t),ba(r,t))}function Aa(e,t){const r=this.cache;void 0!==t.x?r[0]===t.x&&r[1]===t.y&&r[2]===t.z||(e.uniform3f(this.addr,t.x,t.y,t.z),r[0]=t.x,r[1]=t.y,r[2]=t.z):void 0!==t.r?r[0]===t.r&&r[1]===t.g&&r[2]===t.b||(e.uniform3f(this.addr,t.r,t.g,t.b),r[0]=t.r,r[1]=t.g,r[2]=t.b):wa(r,t)||(e.uniform3fv(this.addr,t),ba(r,t))}function Ra(e,t){const r=this.cache;void 0!==t.x?r[0]===t.x&&r[1]===t.y&&r[2]===t.z&&r[3]===t.w||(e.uniform4f(this.addr,t.x,t.y,t.z,t.w),r[0]=t.x,r[1]=t.y,r[2]=t.z,r[3]=t.w):wa(r,t)||(e.uniform4fv(this.addr,t),ba(r,t))}function La(e,t){var r=this.cache,n=t.elements;void 0===n?wa(r,t)||(e.uniformMatrix2fv(this.addr,!1,t),ba(r,t)):wa(r,n)||(_a.set(n),e.uniformMatrix2fv(this.addr,!1,_a),ba(r,n))}function Ca(e,t){var r=this.cache,n=t.elements;void 0===n?wa(r,t)||(e.uniformMatrix3fv(this.addr,!1,t),ba(r,t)):wa(r,n)||(xa.set(n),e.uniformMatrix3fv(this.addr,!1,xa),ba(r,n))}function Pa(e,t){var r=this.cache,n=t.elements;void 0===n?wa(r,t)||(e.uniformMatrix4fv(this.addr,!1,t),ba(r,t)):wa(r,n)||(ya.set(n),e.uniformMatrix4fv(this.addr,!1,ya),ba(r,n))}function Ia(e,t){const r=this.cache;r[0]!==t&&(e.uniform1i(this.addr,t),r[0]=t)}function Da(e,t){var r=this.cache;wa(r,t)||(e.uniform2iv(this.addr,t),ba(r,t))}function Na(e,t){var r=this.cache;wa(r,t)||(e.uniform3iv(this.addr,t),ba(r,t))}function Fa(e,t){var r=this.cache;wa(r,t)||(e.uniform4iv(this.addr,t),ba(r,t))}function Ba(e,t){const r=this.cache;r[0]!==t&&(e.uniform1ui(this.addr,t),r[0]=t)}function Ua(e,t){var r=this.cache;wa(r,t)||(e.uniform2uiv(this.addr,t),ba(r,t))}function Oa(e,t){var r=this.cache;wa(r,t)||(e.uniform3uiv(this.addr,t),ba(r,t))}function za(e,t){var r=this.cache;wa(r,t)||(e.uniform4uiv(this.addr,t),ba(r,t))}function Ha(e,t,r){const n=this.cache;var i=r.allocateTextureUnit();n[0]!==i&&(e.uniform1i(this.addr,i),n[0]=i),r.safeSetTexture2D(t||da,i)}function Ga(e,t,r){const n=this.cache;var i=r.allocateTextureUnit();n[0]!==i&&(e.uniform1i(this.addr,i),n[0]=i),r.setTexture3D(t||ma,i)}function Va(e,t,r){const n=this.cache;var i=r.allocateTextureUnit();n[0]!==i&&(e.uniform1i(this.addr,i),n[0]=i),r.safeSetTextureCube(t||fa,i)}function ka(e,t,r){const n=this.cache;var i=r.allocateTextureUnit();n[0]!==i&&(e.uniform1i(this.addr,i),n[0]=i),r.setTexture2DArray(t||pa,i)}function Wa(e,t){e.uniform1fv(this.addr,t)}function ja(e,t){t=Ma(t,this.size,2);e.uniform2fv(this.addr,t)}function Xa(e,t){t=Ma(t,this.size,3);e.uniform3fv(this.addr,t)}function qa(e,t){t=Ma(t,this.size,4);e.uniform4fv(this.addr,t)}function Ya(e,t){t=Ma(t,this.size,4);e.uniformMatrix2fv(this.addr,!1,t)}function Za(e,t){t=Ma(t,this.size,9);e.uniformMatrix3fv(this.addr,!1,t)}function Ja(e,t){t=Ma(t,this.size,16);e.uniformMatrix4fv(this.addr,!1,t)}function Ka(e,t){e.uniform1iv(this.addr,t)}function Qa(e,t){e.uniform2iv(this.addr,t)}function $a(e,t){e.uniform3iv(this.addr,t)}function es(e,t){e.uniform4iv(this.addr,t)}function ts(e,t){e.uniform1uiv(this.addr,t)}function rs(e,t){e.uniform2uiv(this.addr,t)}function ns(e,t){e.uniform3uiv(this.addr,t)}function is(e,t){e.uniform4uiv(this.addr,t)}function as(e,t,r){var n=t.length,i=Ea(r,n);e.uniform1iv(this.addr,i);for(let e=0;e!==n;++e)r.safeSetTexture2D(t[e]||da,i[e])}function ss(e,t,r){var n=t.length,i=Ea(r,n);e.uniform1iv(this.addr,i);for(let e=0;e!==n;++e)r.safeSetTextureCube(t[e]||fa,i[e])}function os(e,t,r){this.id=e,this.addr=r,this.cache=[],this.setValue=function(e){switch(e){case 5126:return Ta;case 35664:return Sa;case 35665:return Aa;case 35666:return Ra;case 35674:return La;case 35675:return Ca;case 35676:return Pa;case 5124:case 35670:return Ia;case 35667:case 35671:return Da;case 35668:case 35672:return Na;case 35669:case 35673:return Fa;case 5125:return Ba;case 36294:return Ua;case 36295:return Oa;case 36296:return za;case 35678:case 36198:case 36298:case 36306:case 35682:return Ha;case 35679:case 36299:case 36307:return Ga;case 35680:case 36300:case 36308:case 36293:return Va;case 36289:case 36303:case 36311:case 36292:return ka}}(t.type)}function ls(e,t,r){this.id=e,this.addr=r,this.cache=[],this.size=t.size,this.setValue=function(e){switch(e){case 5126:return Wa;case 35664:return ja;case 35665:return Xa;case 35666:return qa;case 35674:return Ya;case 35675:return Za;case 35676:return Ja;case 5124:case 35670:return Ka;case 35667:case 35671:return Qa;case 35668:case 35672:return $a;case 35669:case 35673:return es;case 5125:return ts;case 36294:return rs;case 36295:return ns;case 36296:return is;case 35678:case 36198:case 36298:case 36306:case 35682:return as;case 35680:case 36300:case 36308:case 36293:return ss}}(t.type)}function hs(e){this.id=e,this.seq=[],this.map={}}ls.prototype.updateCache=function(e){var t=this.cache;e instanceof Float32Array&&t.length!==e.length&&(this.cache=new Float32Array(e.length)),ba(t,e)},hs.prototype.setValue=function(r,n,i){var a=this.seq;for(let e=0,t=a.length;e!==t;++e){const s=a[e];s.setValue(r,n[s.id],i)}};const cs=/(\w+)(\])?(\[|\.)?/g;function us(e,t){e.seq.push(t),e.map[t.id]=t}function ds(t,r){this.seq=[],this.map={};var n=t.getProgramParameter(r,t.ACTIVE_UNIFORMS);for(let e=0;e<n;++e){var i=t.getActiveUniform(r,e);!function(e,r,n){var i=e.name,a=i.length;for(cs.lastIndex=0;;){var s=cs.exec(i),o=cs.lastIndex;let t=s[1];var l="]"===s[2],s=s[3];if(l&&(t|=0),void 0===s||"["===s&&o+2===a){us(n,new(void 0===s?os:ls)(t,e,r));break}{let e=n.map[t];void 0===e&&(e=new hs(t),us(n,e)),n=e}}}(i,t.getUniformLocation(r,i.name),this)}}function ps(e,t,r){t=e.createShader(t);return e.shaderSource(t,r),e.compileShader(t),t}ds.prototype.setValue=function(e,t,r,n){const i=this.map[t];void 0!==i&&i.setValue(e,r,n)},ds.prototype.setOptional=function(e,t,r){t=t[r];void 0!==t&&this.setValue(e,r,t)},ds.upload=function(r,n,i,a){for(let e=0,t=n.length;e!==t;++e){const s=n[e],o=i[s.id];!1!==o.needsUpdate&&s.setValue(r,o.value,a)}},ds.seqWithValue=function(r,n){const i=[];for(let e=0,t=r.length;e!==t;++e){var a=r[e];a.id in n&&i.push(a)}return i};let ms=0;function fs(e){switch(e){case Lt:return["Linear","( value )"];case Ct:return["sRGB","( value )"];case It:return["RGBE","( value )"];case Dt:return["RGBM","( value, 7.0 )"];case Nt:return["RGBM","( value, 16.0 )"];case Ft:return["RGBD","( value, 256.0 )"];case Pt:return["Gamma","( value, float( GAMMA_FACTOR ) )"];case r:return["LogLuv","( value )"];default:return console.warn("THREE.WebGLProgram: Unsupported encoding:",e),["Linear","( value )"]}}function gs(e,t,r){var n=e.getShaderParameter(t,e.COMPILE_STATUS),i=e.getShaderInfoLog(t).trim();return n&&""===i?"":"THREE.WebGLShader: gl.getShaderInfoLog() "+r+"\n"+i+function(e){const t=e.split("\n");for(let e=0;e<t.length;e++)t[e]=e+1+": "+t[e];return t.join("\n")}(e.getShaderSource(t))}function vs(e,t){t=fs(t);return"vec4 "+e+"( vec4 value ) { return "+t[0]+"ToLinear"+t[1]+"; }"}function ys(e){return""!==e}function xs(e,t){return e.replace(/NUM_DIR_LIGHTS/g,t.numDirLights).replace(/NUM_SPOT_LIGHTS/g,t.numSpotLights).replace(/NUM_RECT_AREA_LIGHTS/g,t.numRectAreaLights).replace(/NUM_POINT_LIGHTS/g,t.numPointLights).replace(/NUM_HEMI_LIGHTS/g,t.numHemiLights).replace(/NUM_DIR_LIGHT_SHADOWS/g,t.numDirLightShadows).replace(/NUM_SPOT_LIGHT_SHADOWS/g,t.numSpotLightShadows).replace(/NUM_POINT_LIGHT_SHADOWS/g,t.numPointLightShadows)}function _s(e,t){return e.replace(/NUM_CLIPPING_PLANES/g,t.numClippingPlanes).replace(/UNION_CLIPPING_PLANES/g,t.numClippingPlanes-t.numClipIntersection)}const Ms=/^[ \t]*#include +<([\w\d./]+)>/gm;function ws(e){return e.replace(Ms,bs)}function bs(e,t){var r=qi[t];if(void 0===r)throw new Error("Can not resolve #include <"+t+">");return ws(r)}const Es=/#pragma unroll_loop[\s]+?for \( int i \= (\d+)\; i < (\d+)\; i \+\+ \) \{([\s\S]+?)(?=\})\}/g,Ts=/#pragma unroll_loop_start\s+for\s*\(\s*int\s+i\s*=\s*(\d+)\s*;\s*i\s*<\s*(\d+)\s*;\s*i\s*\+\+\s*\)\s*{([\s\S]+?)}\s+#pragma unroll_loop_end/g;function Ss(e){return e.replace(Ts,Rs).replace(Es,As)}function As(e,t,r,n){return console.warn("WebGLProgram: #pragma unroll_loop shader syntax is deprecated. Please use #pragma unroll_loop_start syntax instead."),Rs(0,t,r,n)}function Rs(e,t,r,n){let i="";for(let e=parseInt(t);e<parseInt(r);e++)i+=n.replace(/\[\s*i\s*\]/g,"[ "+e+" ]").replace(/UNROLLED_LOOP_INDEX/g,e);return i}function Ls(e){let t="precision "+e.precision+" float;\nprecision "+e.precision+" int;";return"highp"===e.precision?t+="\n#define HIGH_PRECISION":"mediump"===e.precision?t+="\n#define MEDIUM_PRECISION":"lowp"===e.precision&&(t+="\n#define LOW_PRECISION"),t}function Cs(r,e,t,n){const i=r.getContext();var a=t.defines,s=t.vertexShader,o=t.fragmentShader,l=function(e){let t="SHADOWMAP_TYPE_BASIC";return e.shadowMapType===S?t="SHADOWMAP_TYPE_PCF":e.shadowMapType===b?t="SHADOWMAP_TYPE_PCF_SOFT":e.shadowMapType===A&&(t="SHADOWMAP_TYPE_VSM"),t}(t),h=function(e){let t="ENVMAP_TYPE_CUBE";if(e.envMap)switch(e.envMapMode){case F:case B:t="ENVMAP_TYPE_CUBE";break;case U:case O:t="ENVMAP_TYPE_CUBE_UV"}return t}(t),c=function(e){let t="ENVMAP_MODE_REFLECTION";if(e.envMap)switch(e.envMapMode){case B:case O:t="ENVMAP_MODE_REFRACTION"}return t}(t),u=function(e){let t="ENVMAP_BLENDING_NONE";if(e.envMap)switch(e.combine){case E:t="ENVMAP_BLENDING_MULTIPLY";break;case T:t="ENVMAP_BLENDING_MIX";break;case L:t="ENVMAP_BLENDING_ADD"}return t}(t),d=0<r.gammaFactor?r.gammaFactor:1;const p=t.isWebGL2?"":function(e){const t=[e.extensionDerivatives||e.envMapCubeUV||e.bumpMap||e.tangentSpaceNormalMap||e.clearcoatNormalMap||e.flatShading||"physical"===e.shaderID?"#extension GL_OES_standard_derivatives : enable":"",(e.extensionFragDepth||e.logarithmicDepthBuffer)&&e.rendererExtensionFragDepth?"#extension GL_EXT_frag_depth : enable":"",e.extensionDrawBuffers&&e.rendererExtensionDrawBuffers?"#extension GL_EXT_draw_buffers : require":"",(e.extensionShaderTextureLOD||e.envMap||0<e.transmission)&&e.rendererExtensionShaderTextureLod?"#extension GL_EXT_shader_texture_lod : enable":""];return t.filter(ys).join("\n")}(t),m=function(e){const t=[];for(const n in e){var r=e[n];!1!==r&&t.push("#define "+n+" "+r)}return t.join("\n")}(a),f=i.createProgram();let g,v,y=t.glslVersion?"#version "+t.glslVersion+"\n":"";t.isRawShaderMaterial?(g=[m].filter(ys).join("\n"),0<g.length&&(g+="\n"),v=[p,m].filter(ys).join("\n"),0<v.length&&(v+="\n")):(g=[Ls(t),"#define SHADER_NAME "+t.shaderName,m,t.instancing?"#define USE_INSTANCING":"",t.instancingColor?"#define USE_INSTANCING_COLOR":"",t.supportsVertexTextures?"#define VERTEX_TEXTURES":"","#define GAMMA_FACTOR "+d,"#define MAX_BONES "+t.maxBones,t.useFog&&t.fog?"#define USE_FOG":"",t.useFog&&t.fogExp2?"#define FOG_EXP2":"",t.map?"#define USE_MAP":"",t.envMap?"#define USE_ENVMAP":"",t.envMap?"#define "+c:"",t.lightMap?"#define USE_LIGHTMAP":"",t.aoMap?"#define USE_AOMAP":"",t.emissiveMap?"#define USE_EMISSIVEMAP":"",t.bumpMap?"#define USE_BUMPMAP":"",t.normalMap?"#define USE_NORMALMAP":"",t.normalMap&&t.objectSpaceNormalMap?"#define OBJECTSPACE_NORMALMAP":"",t.normalMap&&t.tangentSpaceNormalMap?"#define TANGENTSPACE_NORMALMAP":"",t.clearcoatMap?"#define USE_CLEARCOATMAP":"",t.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",t.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",t.displacementMap&&t.supportsVertexTextures?"#define USE_DISPLACEMENTMAP":"",t.specularMap?"#define USE_SPECULARMAP":"",t.roughnessMap?"#define USE_ROUGHNESSMAP":"",t.metalnessMap?"#define USE_METALNESSMAP":"",t.alphaMap?"#define USE_ALPHAMAP":"",t.transmission?"#define USE_TRANSMISSION":"",t.transmissionMap?"#define USE_TRANSMISSIONMAP":"",t.thicknessMap?"#define USE_THICKNESSMAP":"",t.vertexTangents?"#define USE_TANGENT":"",t.vertexColors?"#define USE_COLOR":"",t.vertexAlphas?"#define USE_COLOR_ALPHA":"",t.vertexUvs?"#define USE_UV":"",t.uvsVertexOnly?"#define UVS_VERTEX_ONLY":"",t.flatShading?"#define FLAT_SHADED":"",t.skinning?"#define USE_SKINNING":"",t.useVertexTexture?"#define BONE_TEXTURE":"",t.morphTargets?"#define USE_MORPHTARGETS":"",t.morphNormals&&!1===t.flatShading?"#define USE_MORPHNORMALS":"",t.doubleSided?"#define DOUBLE_SIDED":"",t.flipSided?"#define FLIP_SIDED":"",t.shadowMapEnabled?"#define USE_SHADOWMAP":"",t.shadowMapEnabled?"#define "+l:"",t.sizeAttenuation?"#define USE_SIZEATTENUATION":"",t.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",t.logarithmicDepthBuffer&&t.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"","uniform mat4 modelMatrix;","uniform mat4 modelViewMatrix;","uniform mat4 projectionMatrix;","uniform mat4 viewMatrix;","uniform mat3 normalMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;","#ifdef USE_INSTANCING","\tattribute mat4 instanceMatrix;","#endif","#ifdef USE_INSTANCING_COLOR","\tattribute vec3 instanceColor;","#endif","attribute vec3 position;","attribute vec3 normal;","attribute vec2 uv;","#ifdef USE_TANGENT","\tattribute vec4 tangent;","#endif","#if defined( USE_COLOR_ALPHA )","\tattribute vec4 color;","#elif defined( USE_COLOR )","\tattribute vec3 color;","#endif","#ifdef USE_MORPHTARGETS","\tattribute vec3 morphTarget0;","\tattribute vec3 morphTarget1;","\tattribute vec3 morphTarget2;","\tattribute vec3 morphTarget3;","\t#ifdef USE_MORPHNORMALS","\t\tattribute vec3 morphNormal0;","\t\tattribute vec3 morphNormal1;","\t\tattribute vec3 morphNormal2;","\t\tattribute vec3 morphNormal3;","\t#else","\t\tattribute vec3 morphTarget4;","\t\tattribute vec3 morphTarget5;","\t\tattribute vec3 morphTarget6;","\t\tattribute vec3 morphTarget7;","\t#endif","#endif","#ifdef USE_SKINNING","\tattribute vec4 skinIndex;","\tattribute vec4 skinWeight;","#endif","\n"].filter(ys).join("\n"),v=[p,Ls(t),"#define SHADER_NAME "+t.shaderName,m,t.alphaTest?"#define ALPHATEST "+t.alphaTest+(t.alphaTest%1?"":".0"):"","#define GAMMA_FACTOR "+d,t.useFog&&t.fog?"#define USE_FOG":"",t.useFog&&t.fogExp2?"#define FOG_EXP2":"",t.map?"#define USE_MAP":"",t.matcap?"#define USE_MATCAP":"",t.envMap?"#define USE_ENVMAP":"",t.envMap?"#define "+h:"",t.envMap?"#define "+c:"",t.envMap?"#define "+u:"",t.lightMap?"#define USE_LIGHTMAP":"",t.aoMap?"#define USE_AOMAP":"",t.emissiveMap?"#define USE_EMISSIVEMAP":"",t.bumpMap?"#define USE_BUMPMAP":"",t.normalMap?"#define USE_NORMALMAP":"",t.normalMap&&t.objectSpaceNormalMap?"#define OBJECTSPACE_NORMALMAP":"",t.normalMap&&t.tangentSpaceNormalMap?"#define TANGENTSPACE_NORMALMAP":"",t.clearcoatMap?"#define USE_CLEARCOATMAP":"",t.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",t.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",t.specularMap?"#define USE_SPECULARMAP":"",t.roughnessMap?"#define USE_ROUGHNESSMAP":"",t.metalnessMap?"#define USE_METALNESSMAP":"",t.alphaMap?"#define USE_ALPHAMAP":"",t.sheen?"#define USE_SHEEN":"",t.transmission?"#define USE_TRANSMISSION":"",t.transmissionMap?"#define USE_TRANSMISSIONMAP":"",t.thicknessMap?"#define USE_THICKNESSMAP":"",t.vertexTangents?"#define USE_TANGENT":"",t.vertexColors||t.instancingColor?"#define USE_COLOR":"",t.vertexAlphas?"#define USE_COLOR_ALPHA":"",t.vertexUvs?"#define USE_UV":"",t.uvsVertexOnly?"#define UVS_VERTEX_ONLY":"",t.gradientMap?"#define USE_GRADIENTMAP":"",t.flatShading?"#define FLAT_SHADED":"",t.doubleSided?"#define DOUBLE_SIDED":"",t.flipSided?"#define FLIP_SIDED":"",t.shadowMapEnabled?"#define USE_SHADOWMAP":"",t.shadowMapEnabled?"#define "+l:"",t.premultipliedAlpha?"#define PREMULTIPLIED_ALPHA":"",t.physicallyCorrectLights?"#define PHYSICALLY_CORRECT_LIGHTS":"",t.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",t.logarithmicDepthBuffer&&t.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"",(t.extensionShaderTextureLOD||t.envMap)&&t.rendererExtensionShaderTextureLod?"#define TEXTURE_LOD_EXT":"","uniform mat4 viewMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;",t.toneMapping!==Re?"#define TONE_MAPPING":"",t.toneMapping!==Re?qi.tonemapping_pars_fragment:"",t.toneMapping!==Re?function(e,t){let r;switch(t){case C:r="Linear";break;case P:r="Reinhard";break;case I:r="OptimizedCineon";break;case D:r="ACESFilmic";break;case N:r="Custom";break;default:console.warn("THREE.WebGLProgram: Unsupported toneMapping:",t),r="Linear"}return"vec3 "+e+"( vec3 color ) { return "+r+"ToneMapping( color ); }"}("toneMapping",t.toneMapping):"",t.dithering?"#define DITHERING":"",qi.encodings_pars_fragment,t.map?vs("mapTexelToLinear",t.mapEncoding):"",t.matcap?vs("matcapTexelToLinear",t.matcapEncoding):"",t.envMap?vs("envMapTexelToLinear",t.envMapEncoding):"",t.emissiveMap?vs("emissiveMapTexelToLinear",t.emissiveMapEncoding):"",t.lightMap?vs("lightMapTexelToLinear",t.lightMapEncoding):"",(x="linearToOutputTexel",_=fs(_=t.outputEncoding),"vec4 "+x+"( vec4 value ) { return LinearTo"+_[0]+_[1]+"; }"),t.depthPacking?"#define DEPTH_PACKING "+t.depthPacking:"","\n"].filter(ys).join("\n")),s=_s(xs(ws(s),t),t),o=_s(xs(ws(o),t),t),s=Ss(s),o=Ss(o),t.isWebGL2&&!0!==t.isRawShaderMaterial&&(y="#version 300 es\n",g=["#define attribute in","#define varying out","#define texture2D texture"].join("\n")+"\n"+g,v=["#define varying in",t.glslVersion===Gt?"":"out highp vec4 pc_fragColor;",t.glslVersion===Gt?"":"#define gl_FragColor pc_fragColor","#define gl_FragDepthEXT gl_FragDepth","#define texture2D texture","#define textureCube texture","#define texture2DProj textureProj","#define texture2DLodEXT textureLod","#define texture2DProjLodEXT textureProjLod","#define textureCubeLodEXT textureLod","#define texture2DGradEXT textureGrad","#define texture2DProjGradEXT textureProjGrad","#define textureCubeGradEXT textureGrad"].join("\n")+"\n"+v);var u=y+g+s,l=y+v+o,x=ps(i,i.VERTEX_SHADER,u),_=ps(i,i.FRAGMENT_SHADER,l);if(i.attachShader(f,x),i.attachShader(f,_),void 0!==t.index0AttributeName?i.bindAttribLocation(f,0,t.index0AttributeName):!0===t.morphTargets&&i.bindAttribLocation(f,0,"position"),i.linkProgram(f),r.debug.checkShaderErrors){s=i.getProgramInfoLog(f).trim(),o=i.getShaderInfoLog(x).trim(),u=i.getShaderInfoLog(_).trim();let e=!0,t=!0;!1===i.getProgramParameter(f,i.LINK_STATUS)?(e=!1,l=gs(i,x,"vertex"),r=gs(i,_,"fragment"),console.error("THREE.WebGLProgram: shader error: ",i.getError(),"gl.VALIDATE_STATUS",i.getProgramParameter(f,i.VALIDATE_STATUS),"gl.getProgramInfoLog",s,l,r)):""!==s?console.warn("THREE.WebGLProgram: gl.getProgramInfoLog()",s):""!==o&&""!==u||(t=!1),t&&(this.diagnostics={runnable:e,programLog:s,vertexShader:{log:o,prefix:g},fragmentShader:{log:u,prefix:v}})}i.deleteShader(x),i.deleteShader(_);let M;this.getUniforms=function(){return void 0===M&&(M=new ds(i,f)),M};let w;return this.getAttributes=function(){return void 0===w&&(w=function(t,r){const n={};var i=t.getProgramParameter(r,t.ACTIVE_ATTRIBUTES);for(let e=0;e<i;e++){var a=t.getActiveAttrib(r,e).name;n[a]=t.getAttribLocation(r,a)}return n}(i,f)),w},this.destroy=function(){n.releaseStatesOfProgram(this),i.deleteProgram(f),this.program=void 0},this.name=t.shaderName,this.id=ms++,this.cacheKey=e,this.usedTimes=1,this.program=f,this.vertexShader=x,this.fragmentShader=_,this}function Ps(d,p,m,f,t,g){const a=[],v=f.isWebGL2,y=f.logarithmicDepthBuffer,x=f.floatVertexTextures,_=f.maxVertexUniforms,M=f.vertexTextures;let w=f.precision;const b={MeshDepthMaterial:"depth",MeshDistanceMaterial:"distanceRGBA",MeshNormalMaterial:"normal",MeshBasicMaterial:"basic",MeshLambertMaterial:"lambert",MeshPhongMaterial:"phong",MeshToonMaterial:"toon",MeshStandardMaterial:"physical",MeshPhysicalMaterial:"physical",MeshMatcapMaterial:"matcap",LineBasicMaterial:"basic",LineDashedMaterial:"dashed",PointsMaterial:"points",ShadowMaterial:"shadow",SpriteMaterial:"sprite"},n=["precision","isWebGL2","supportsVertexTextures","outputEncoding","instancing","instancingColor","map","mapEncoding","matcap","matcapEncoding","envMap","envMapMode","envMapEncoding","envMapCubeUV","lightMap","lightMapEncoding","aoMap","emissiveMap","emissiveMapEncoding","bumpMap","normalMap","objectSpaceNormalMap","tangentSpaceNormalMap","clearcoatMap","clearcoatRoughnessMap","clearcoatNormalMap","displacementMap","specularMap","roughnessMap","metalnessMap","gradientMap","alphaMap","combine","vertexColors","vertexAlphas","vertexTangents","vertexUvs","uvsVertexOnly","fog","useFog","fogExp2","flatShading","sizeAttenuation","logarithmicDepthBuffer","skinning","maxBones","useVertexTexture","morphTargets","morphNormals","premultipliedAlpha","numDirLights","numPointLights","numSpotLights","numHemiLights","numRectAreaLights","numDirLightShadows","numPointLightShadows","numSpotLightShadows","shadowMapEnabled","shadowMapType","toneMapping","physicallyCorrectLights","alphaTest","doubleSided","flipSided","numClippingPlanes","numClipIntersection","depthPacking","dithering","sheen","transmission","transmissionMap","thicknessMap"];function E(e){let t;return t=e&&e.isTexture?e.encoding:e&&e.isWebGLRenderTarget?(console.warn("THREE.WebGLPrograms.getTextureEncodingFromMap: don't use render targets as textures. Use their .texture property instead."),e.texture.encoding):Lt,t}return{getParameters:function(e,t,r,n,i){var a=n.fog,s=e.isMeshStandardMaterial?n.environment:null,o=p.get(e.envMap||s),n=b[e.type],l=i.isSkinnedMesh?(s=(l=i).skeleton.bones,x?1024:(l=_,l=Math.floor((l-20)/4),(l=Math.min(l,s.length))<s.length?(console.warn("THREE.WebGLRenderer: Skeleton has "+s.length+" bones. This GPU supports "+l+"."),0):l)):0;null!==e.precision&&(w=f.getMaxPrecision(e.precision),w!==e.precision&&console.warn("THREE.WebGLProgram.getParameters:",e.precision,"not supported, using",w,"instead."));let h,c;c=n?(u=Zi[n],h=u.vertexShader,u.fragmentShader):(h=e.vertexShader,e.fragmentShader);var u=d.getRenderTarget();return{isWebGL2:v,shaderID:n,shaderName:e.type,vertexShader:h,fragmentShader:c,defines:e.defines,isRawShaderMaterial:!0===e.isRawShaderMaterial,glslVersion:e.glslVersion,precision:w,instancing:!0===i.isInstancedMesh,instancingColor:!0===i.isInstancedMesh&&null!==i.instanceColor,supportsVertexTextures:M,outputEncoding:null!==u?E(u.texture):d.outputEncoding,map:!!e.map,mapEncoding:E(e.map),matcap:!!e.matcap,matcapEncoding:E(e.matcap),envMap:!!o,envMapMode:o&&o.mapping,envMapEncoding:E(o),envMapCubeUV:!!o&&(o.mapping===U||o.mapping===O),lightMap:!!e.lightMap,lightMapEncoding:E(e.lightMap),aoMap:!!e.aoMap,emissiveMap:!!e.emissiveMap,emissiveMapEncoding:E(e.emissiveMap),bumpMap:!!e.bumpMap,normalMap:!!e.normalMap,objectSpaceNormalMap:e.normalMapType===Ot,tangentSpaceNormalMap:e.normalMapType===Ut,clearcoatMap:!!e.clearcoatMap,clearcoatRoughnessMap:!!e.clearcoatRoughnessMap,clearcoatNormalMap:!!e.clearcoatNormalMap,displacementMap:!!e.displacementMap,roughnessMap:!!e.roughnessMap,metalnessMap:!!e.metalnessMap,specularMap:!!e.specularMap,alphaMap:!!e.alphaMap,gradientMap:!!e.gradientMap,sheen:!!e.sheen,transmission:!!e.transmission,transmissionMap:!!e.transmissionMap,thicknessMap:!!e.thicknessMap,combine:e.combine,vertexTangents:e.normalMap&&e.vertexTangents,vertexColors:e.vertexColors,vertexAlphas:!0===e.vertexColors&&i.geometry&&i.geometry.attributes.color&&4===i.geometry.attributes.color.itemSize,vertexUvs:!!(e.map||e.bumpMap||e.normalMap||e.specularMap||e.alphaMap||e.emissiveMap||e.roughnessMap||e.metalnessMap||e.clearcoatMap||e.clearcoatRoughnessMap||e.clearcoatNormalMap||e.displacementMap||e.transmission||e.transmissionMap||e.thicknessMap),uvsVertexOnly:!(e.map||e.bumpMap||e.normalMap||e.specularMap||e.alphaMap||e.emissiveMap||e.roughnessMap||e.metalnessMap||e.clearcoatNormalMap||e.transmission||e.transmissionMap||e.thicknessMap||!e.displacementMap),fog:!!a,useFog:e.fog,fogExp2:a&&a.isFogExp2,flatShading:!!e.flatShading,sizeAttenuation:e.sizeAttenuation,logarithmicDepthBuffer:y,skinning:!0===i.isSkinnedMesh&&0<l,maxBones:l,useVertexTexture:x,morphTargets:e.morphTargets,morphNormals:e.morphNormals,numDirLights:t.directional.length,numPointLights:t.point.length,numSpotLights:t.spot.length,numRectAreaLights:t.rectArea.length,numHemiLights:t.hemi.length,numDirLightShadows:t.directionalShadowMap.length,numPointLightShadows:t.pointShadowMap.length,numSpotLightShadows:t.spotShadowMap.length,numClippingPlanes:g.numPlanes,numClipIntersection:g.numIntersection,dithering:e.dithering,shadowMapEnabled:d.shadowMap.enabled&&0<r.length,shadowMapType:d.shadowMap.type,toneMapping:e.toneMapped?d.toneMapping:Re,physicallyCorrectLights:d.physicallyCorrectLights,premultipliedAlpha:e.premultipliedAlpha,alphaTest:e.alphaTest,doubleSided:e.side===Z,flipSided:e.side===Y,depthPacking:void 0!==e.depthPacking&&e.depthPacking,index0AttributeName:e.index0AttributeName,extensionDerivatives:e.extensions&&e.extensions.derivatives,extensionFragDepth:e.extensions&&e.extensions.fragDepth,extensionDrawBuffers:e.extensions&&e.extensions.drawBuffers,extensionShaderTextureLOD:e.extensions&&e.extensions.shaderTextureLOD,rendererExtensionFragDepth:v||m.has("EXT_frag_depth"),rendererExtensionDrawBuffers:v||m.has("WEBGL_draw_buffers"),rendererExtensionShaderTextureLod:v||m.has("EXT_shader_texture_lod"),customProgramCacheKey:e.customProgramCacheKey()}},getProgramCacheKey:function(t){const r=[];if(t.shaderID?r.push(t.shaderID):(r.push(t.fragmentShader),r.push(t.vertexShader)),void 0!==t.defines)for(const e in t.defines)r.push(e),r.push(t.defines[e]);if(!1===t.isRawShaderMaterial){for(let e=0;e<n.length;e++)r.push(t[n[e]]);r.push(d.outputEncoding),r.push(d.gammaFactor)}return r.push(t.customProgramCacheKey),r.join()},getUniforms:function(e){var t=b[e.type];let r;return r=t?(t=Zi[t],Ni.clone(t.uniforms)):e.uniforms,r},acquireProgram:function(e,r){let n;for(let e=0,t=a.length;e<t;e++){var i=a[e];if(i.cacheKey===r){n=i,++n.usedTimes;break}}return void 0===n&&(n=new Cs(d,r,e,t),a.push(n)),n},releaseProgram:function(e){var t;0==--e.usedTimes&&(t=a.indexOf(e),a[t]=a[a.length-1],a.pop(),e.destroy())},programs:a}}function Is(){let n=new WeakMap;return{get:function(e){let t=n.get(e);return void 0===t&&(t={},n.set(e,t)),t},remove:function(e){n.delete(e)},update:function(e,t,r){n.get(e)[t]=r},dispose:function(){n=new WeakMap}}}function Ds(e,t){return e.groupOrder!==t.groupOrder?e.groupOrder-t.groupOrder:e.renderOrder!==t.renderOrder?e.renderOrder-t.renderOrder:e.program!==t.program?e.program.id-t.program.id:e.material.id!==t.material.id?e.material.id-t.material.id:e.z!==t.z?e.z-t.z:e.id-t.id}function Ns(e,t){return e.groupOrder!==t.groupOrder?e.groupOrder-t.groupOrder:e.renderOrder!==t.renderOrder?e.renderOrder-t.renderOrder:e.z!==t.z?t.z-e.z:e.id-t.id}function Fs(l){const h=[];let c=0;const s=[],o=[],u=[],d={id:-1};function p(e,t,r,n,i,a){let s=h[c];var o=l.get(r);return void 0===s?(s={id:e.id,object:e,geometry:t,material:r,program:o.program||d,groupOrder:n,renderOrder:e.renderOrder,z:i,group:a},h[c]=s):(s.id=e.id,s.object=e,s.geometry=t,s.material=r,s.program=o.program||d,s.groupOrder=n,s.renderOrder=e.renderOrder,s.z=i,s.group=a),c++,s}return{opaque:s,transmissive:o,transparent:u,init:function(){c=0,s.length=0,o.length=0,u.length=0},push:function(e,t,r,n,i,a){a=p(e,t,r,n,i,a),(0<r.transmission?o:!0===r.transparent?u:s).push(a)},unshift:function(e,t,r,n,i,a){a=p(e,t,r,n,i,a),(0<r.transmission?o:!0===r.transparent?u:s).unshift(a)},finish:function(){for(let e=c,t=h.length;e<t;e++){const r=h[e];if(null===r.id)break;r.id=null,r.object=null,r.geometry=null,r.material=null,r.program=null,r.group=null}},sort:function(e,t){1<s.length&&s.sort(e||Ds),1<o.length&&o.sort(t||Ns),1<u.length&&u.sort(t||Ns)}}}function Bs(n){let i=new WeakMap;return{get:function(e,t){let r;return!1===i.has(e)?(r=new Fs(n),i.set(e,[r])):t>=i.get(e).length?(r=new Fs(n),i.get(e).push(r)):r=i.get(e)[t],r},dispose:function(){i=new WeakMap}}}function Us(){const r={};return{get:function(e){if(void 0!==r[e.id])return r[e.id];let t;switch(e.type){case"DirectionalLight":t={direction:new pr,color:new Hn};break;case"SpotLight":t={position:new pr,direction:new pr,color:new Hn,distance:0,coneCos:0,penumbraCos:0,decay:0};break;case"PointLight":t={position:new pr,color:new Hn,distance:0,decay:0};break;case"HemisphereLight":t={direction:new pr,skyColor:new Hn,groundColor:new Hn};break;case"RectAreaLight":t={color:new Hn,position:new pr,halfWidth:new pr,halfHeight:new pr}}return r[e.id]=t,t}}}let Os=0;function zs(e,t){return(t.castShadow?1:0)-(e.castShadow?1:0)}function Hs(t,R){const L=new Us,C=function(){const r={};return{get:function(e){if(void 0!==r[e.id])return r[e.id];let t;switch(e.type){case"DirectionalLight":case"SpotLight":t={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new tr};break;case"PointLight":t={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new tr,shadowCameraNear:1,shadowCameraFar:1e3}}return r[e.id]=t,t}}}(),P={version:0,hash:{directionalLength:-1,pointLength:-1,spotLength:-1,rectAreaLength:-1,hemiLength:-1,numDirectionalShadows:-1,numPointShadows:-1,numSpotShadows:-1},ambient:[0,0,0],probe:[],directional:[],directionalShadow:[],directionalShadowMap:[],directionalShadowMatrix:[],spot:[],spotShadow:[],spotShadowMap:[],spotShadowMatrix:[],rectArea:[],rectAreaLTC1:null,rectAreaLTC2:null,point:[],pointShadow:[],pointShadowMap:[],pointShadowMatrix:[],hemi:[]};for(let e=0;e<9;e++)P.probe.push(new pr);const f=new pr,g=new Wr,v=new Wr;return{setup:function(r){let n=0,i=0,a=0;for(let e=0;e<9;e++)P.probe[e].set(0,0,0);let s=0,o=0,l=0,h=0,c=0,u=0,d=0,p=0;r.sort(zs);for(let e=0,t=r.length;e<t;e++){var m=r[e],f=m.color,g=m.intensity,v=m.distance,y=m.shadow&&m.shadow.map?m.shadow.map.texture:null;if(m.isAmbientLight)n+=f.r*g,i+=f.g*g,a+=f.b*g;else if(m.isLightProbe)for(let e=0;e<9;e++)P.probe[e].addScaledVector(m.sh.coefficients[e],g);else if(m.isDirectionalLight){const _=L.get(m);if(_.color.copy(m.color).multiplyScalar(m.intensity),m.castShadow){var x=m.shadow;const M=C.get(m);M.shadowBias=x.bias,M.shadowNormalBias=x.normalBias,M.shadowRadius=x.radius,M.shadowMapSize=x.mapSize,P.directionalShadow[s]=M,P.directionalShadowMap[s]=y,P.directionalShadowMatrix[s]=m.shadow.matrix,u++}P.directional[s]=_,s++}else if(m.isSpotLight){const w=L.get(m);if(w.position.setFromMatrixPosition(m.matrixWorld),w.color.copy(f).multiplyScalar(g),w.distance=v,w.coneCos=Math.cos(m.angle),w.penumbraCos=Math.cos(m.angle*(1-m.penumbra)),w.decay=m.decay,m.castShadow){v=m.shadow;const b=C.get(m);b.shadowBias=v.bias,b.shadowNormalBias=v.normalBias,b.shadowRadius=v.radius,b.shadowMapSize=v.mapSize,P.spotShadow[l]=b,P.spotShadowMap[l]=y,P.spotShadowMatrix[l]=m.shadow.matrix,p++}P.spot[l]=w,l++}else if(m.isRectAreaLight){const E=L.get(m);E.color.copy(f).multiplyScalar(g),E.halfWidth.set(.5*m.width,0,0),E.halfHeight.set(0,.5*m.height,0),P.rectArea[h]=E,h++}else if(m.isPointLight){const T=L.get(m);if(T.color.copy(m.color).multiplyScalar(m.intensity),T.distance=m.distance,T.decay=m.decay,m.castShadow){f=m.shadow;const S=C.get(m);S.shadowBias=f.bias,S.shadowNormalBias=f.normalBias,S.shadowRadius=f.radius,S.shadowMapSize=f.mapSize,S.shadowCameraNear=f.camera.near,S.shadowCameraFar=f.camera.far,P.pointShadow[o]=S,P.pointShadowMap[o]=y,P.pointShadowMatrix[o]=m.shadow.matrix,d++}P.point[o]=T,o++}else if(m.isHemisphereLight){const A=L.get(m);A.skyColor.copy(m.color).multiplyScalar(g),A.groundColor.copy(m.groundColor).multiplyScalar(g),P.hemi[c]=A,c++}}0<h&&(R.isWebGL2||!0===t.has("OES_texture_float_linear")?(P.rectAreaLTC1=Yi.LTC_FLOAT_1,P.rectAreaLTC2=Yi.LTC_FLOAT_2):!0===t.has("OES_texture_half_float_linear")?(P.rectAreaLTC1=Yi.LTC_HALF_1,P.rectAreaLTC2=Yi.LTC_HALF_2):console.error("THREE.WebGLRenderer: Unable to use RectAreaLight. Missing WebGL extensions.")),P.ambient[0]=n,P.ambient[1]=i,P.ambient[2]=a;const e=P.hash;e.directionalLength===s&&e.pointLength===o&&e.spotLength===l&&e.rectAreaLength===h&&e.hemiLength===c&&e.numDirectionalShadows===u&&e.numPointShadows===d&&e.numSpotShadows===p||(P.directional.length=s,P.spot.length=l,P.rectArea.length=h,P.point.length=o,P.hemi.length=c,P.directionalShadow.length=u,P.directionalShadowMap.length=u,P.pointShadow.length=d,P.pointShadowMap.length=d,P.spotShadow.length=p,P.spotShadowMap.length=p,P.directionalShadowMatrix.length=u,P.pointShadowMatrix.length=d,P.spotShadowMatrix.length=p,e.directionalLength=s,e.pointLength=o,e.spotLength=l,e.rectAreaLength=h,e.hemiLength=c,e.numDirectionalShadows=u,e.numPointShadows=d,e.numSpotShadows=p,P.version=Os++)},setupView:function(r,e){let n=0,i=0,a=0,s=0,o=0;var l=e.matrixWorldInverse;for(let e=0,t=r.length;e<t;e++){var h=r[e];if(h.isDirectionalLight){const c=P.directional[n];c.direction.setFromMatrixPosition(h.matrixWorld),f.setFromMatrixPosition(h.target.matrixWorld),c.direction.sub(f),c.direction.transformDirection(l),n++}else if(h.isSpotLight){const u=P.spot[a];u.position.setFromMatrixPosition(h.matrixWorld),u.position.applyMatrix4(l),u.direction.setFromMatrixPosition(h.matrixWorld),f.setFromMatrixPosition(h.target.matrixWorld),u.direction.sub(f),u.direction.transformDirection(l),a++}else if(h.isRectAreaLight){const d=P.rectArea[s];d.position.setFromMatrixPosition(h.matrixWorld),d.position.applyMatrix4(l),v.identity(),g.copy(h.matrixWorld),g.premultiply(l),v.extractRotation(g),d.halfWidth.set(.5*h.width,0,0),d.halfHeight.set(0,.5*h.height,0),d.halfWidth.applyMatrix4(v),d.halfHeight.applyMatrix4(v),s++}else if(h.isPointLight){const p=P.point[i];p.position.setFromMatrixPosition(h.matrixWorld),p.position.applyMatrix4(l),i++}else if(h.isHemisphereLight){const m=P.hemi[o];m.direction.setFromMatrixPosition(h.matrixWorld),m.direction.transformDirection(l),m.direction.normalize(),o++}}},state:P}}function Gs(e,t){const r=new Hs(e,t),n=[],i=[];return{init:function(){n.length=0,i.length=0},state:{lightsArray:n,shadowsArray:i,lights:r},setupLights:function(){r.setup(n)},setupLightsView:function(e){r.setupView(n,e)},pushLight:function(e){n.push(e)},pushShadow:function(e){i.push(e)}}}function Vs(n,i){let a=new WeakMap;return{get:function(e,t=0){let r;return!1===a.has(e)?(r=new Gs(n,i),a.set(e,[r])):t>=a.get(e).length?(r=new Gs(n,i),a.get(e).push(r)):r=a.get(e)[t],r},dispose:function(){a=new WeakMap}}}class ks extends Dn{constructor(e){super(),this.type="MeshDepthMaterial",this.depthPacking=3200,this.morphTargets=!1,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.setValues(e)}copy(e){return super.copy(e),this.depthPacking=e.depthPacking,this.morphTargets=e.morphTargets,this.map=e.map,this.alphaMap=e.alphaMap,this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this}}ks.prototype.isMeshDepthMaterial=!0;class Ws extends Dn{constructor(e){super(),this.type="MeshDistanceMaterial",this.referencePosition=new pr,this.nearDistance=1,this.farDistance=1e3,this.morphTargets=!1,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.fog=!1,this.setValues(e)}copy(e){return super.copy(e),this.referencePosition.copy(e.referencePosition),this.nearDistance=e.nearDistance,this.farDistance=e.farDistance,this.morphTargets=e.morphTargets,this.map=e.map,this.alphaMap=e.alphaMap,this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this}}Ws.prototype.isMeshDistanceMaterial=!0;var js="uniform sampler2D shadow_pass;\nuniform vec2 resolution;\nuniform float radius;\n#include <packing>\nvoid main() {\n\tfloat mean = 0.0;\n\tfloat squared_mean = 0.0;\n\tfloat depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy ) / resolution ) );\n\tfor ( float i = -1.0; i < 1.0 ; i += SAMPLE_RATE) {\n\t\t#ifdef HORIZONTAL_PASS\n\t\t\tvec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( i, 0.0 ) * radius ) / resolution ) );\n\t\t\tmean += distribution.x;\n\t\t\tsquared_mean += distribution.y * distribution.y + distribution.x * distribution.x;\n\t\t#else\n\t\t\tfloat depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0, i ) * radius ) / resolution ) );\n\t\t\tmean += depth;\n\t\t\tsquared_mean += depth * depth;\n\t\t#endif\n\t}\n\tmean = mean * HALF_SAMPLE_RATE;\n\tsquared_mean = squared_mean * HALF_SAMPLE_RATE;\n\tfloat std_dev = sqrt( squared_mean - mean * mean );\n\tgl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );\n}",Xs="void main() {\n\tgl_Position = vec4( position, 1.0 );\n}";function qs(f,g,e){let v=new ki;const m=new tr,y=new tr,x=new lr,n=[],i=[],c={},_=e.maxTextureSize,u={0:Y,1:R,2:Z},M=new Fi({defines:{SAMPLE_RATE:.25,HALF_SAMPLE_RATE:1/8},uniforms:{shadow_pass:{value:null},resolution:{value:new tr},radius:{value:4}},vertexShader:Xs,fragmentShader:js}),w=M.clone();w.defines.HORIZONTAL_PASS=1;const t=new ui;t.setAttribute("position",new Wn(new Float32Array([-1,-1,.5,3,-1,.5,-1,3,.5]),3));const b=new Li(t,M),E=this;function d(e){var t=e<<0;let r=n[t];return void 0===r&&(r=new ks({depthPacking:Bt,morphTargets:e}),n[t]=r),r}function p(e){var t=e<<0;let r=i[t];return void 0===r&&(r=new Ws({morphTargets:e}),i[t]=r),r}function T(r,n,i,e,t,a,s){let o=null,l=d,h=r.customDepthMaterial;if(!0===e.isPointLight&&(l=p,h=r.customDistanceMaterial),void 0===h){let e=!1;!0===i.morphTargets&&(e=n.morphAttributes&&n.morphAttributes.position&&0<n.morphAttributes.position.length),o=l(e)}else o=h;if(f.localClippingEnabled&&!0===i.clipShadows&&0!==i.clippingPlanes.length){r=o.uuid,n=i.uuid;let e=c[r];void 0===e&&(e={},c[r]=e);let t=e[n];void 0===t&&(t=o.clone(),e[n]=t),o=t}return o.visible=i.visible,o.wireframe=i.wireframe,s===A?o.side=null!==i.shadowSide?i.shadowSide:i.side:o.side=null!==i.shadowSide?i.shadowSide:u[i.side],o.clipShadows=i.clipShadows,o.clippingPlanes=i.clippingPlanes,o.clipIntersection=i.clipIntersection,o.wireframeLinewidth=i.wireframeLinewidth,o.linewidth=i.linewidth,!0===e.isPointLight&&!0===o.isMeshDistanceMaterial&&(o.referencePosition.setFromMatrixPosition(e.matrixWorld),o.nearDistance=t,o.farDistance=a),o}this.enabled=!1,this.autoUpdate=!0,this.needsUpdate=!1,this.type=S,this.render=function(r,n,i){if(!1!==E.enabled&&(!1!==E.autoUpdate||!1!==E.needsUpdate)&&0!==r.length){var e=f.getRenderTarget(),t=f.getActiveCubeFace(),a=f.getActiveMipmapLevel();const d=f.state;d.setBlending(J),d.buffers.color.setClear(1,1,1,1),d.buffers.depth.setTest(!0),d.setScissorTest(!1);for(let e=0,t=r.length;e<t;e++){var s=r[e];const p=s.shadow;if(void 0!==p){if(!1!==p.autoUpdate||!1!==p.needsUpdate){m.copy(p.mapSize);var o,l,h=p.getFrameExtents();m.multiply(h),y.copy(p.mapSize),(m.x>_||m.y>_)&&(m.x>_&&(y.x=Math.floor(_/h.x),m.x=y.x*h.x,p.mapSize.x=y.x),m.y>_&&(y.y=Math.floor(_/h.y),m.y=y.y*h.y,p.mapSize.y=y.y)),null!==p.map||p.isPointLightShadow||this.type!==A||(o={minFilter:k,magFilter:k,format:Ue},p.map=new hr(m.x,m.y,o),p.map.texture.name=s.name+".shadowMap",p.mapPass=new hr(m.x,m.y,o),p.camera.updateProjectionMatrix()),null===p.map&&(l={minFilter:Ce,magFilter:Ce,format:Ue},p.map=new hr(m.x,m.y,l),p.map.texture.name=s.name+".shadowMap",p.camera.updateProjectionMatrix()),f.setRenderTarget(p.map),f.clear();var c=p.getViewportCount();for(let e=0;e<c;e++){var u=p.getViewport(e);x.set(y.x*u.x,y.y*u.y,y.x*u.z,y.y*u.w),d.viewport(x),p.updateMatrices(s,e),v=p.getFrustum(),function r(n,i,a,s,o){if(!1===n.visible)return;const e=n.layers.test(i.layers);if(e&&(n.isMesh||n.isLine||n.isPoints)&&(n.castShadow||n.receiveShadow&&o===A)&&(!n.frustumCulled||v.intersectsObject(n))){n.modelViewMatrix.multiplyMatrices(a.matrixWorldInverse,n.matrixWorld);const h=g.update(n),c=n.material;if(Array.isArray(c)){const u=h.groups;for(let e=0,t=u.length;e<t;e++){const d=u[e],p=c[d.materialIndex];if(p&&p.visible){const m=T(n,h,p,s,a.near,a.far,o);f.renderBufferDirect(a,null,h,m,n,d)}}}else if(c.visible){const t=T(n,h,c,s,a.near,a.far,o);f.renderBufferDirect(a,null,h,t,n,null)}}const l=n.children;for(let e=0,t=l.length;e<t;e++)r(l[e],i,a,s,o)}(n,i,p.camera,s,this.type)}p.isPointLightShadow||this.type!==A||(h=p,o=i,l=void 0,l=g.update(b),M.uniforms.shadow_pass.value=h.map.texture,M.uniforms.resolution.value=h.mapSize,M.uniforms.radius.value=h.radius,f.setRenderTarget(h.mapPass),f.clear(),f.renderBufferDirect(o,null,l,M,b,null),w.uniforms.shadow_pass.value=h.mapPass.texture,w.uniforms.resolution.value=h.mapSize,w.uniforms.radius.value=h.radius,f.setRenderTarget(h.map),f.clear(),f.renderBufferDirect(o,null,l,w,b,null)),p.needsUpdate=!1}}else console.warn("THREE.WebGLShadowMap:",s,"has no shadow.")}E.needsUpdate=!1,f.setRenderTarget(e,t,a)}}}function Ys(c,e,t){const r=t.isWebGL2;const n=new function(){let t=!1;const a=new lr;let r=null;const s=new lr(0,0,0,0);return{setMask:function(e){r===e||t||(c.colorMask(e,e,e,e),r=e)},setLocked:function(e){t=e},setClear:function(e,t,r,n,i){!0===i&&(e*=n,t*=n,r*=n),a.set(e,t,r,n),!1===s.equals(a)&&(c.clearColor(e,t,r,n),s.copy(a))},reset:function(){t=!1,r=null,s.set(-1,0,0,0)}}},i=new function(){let t=!1,r=null,n=null,i=null;return{setTest:function(e){(e?B:U)(c.DEPTH_TEST)},setMask:function(e){r===e||t||(c.depthMask(e),r=e)},setFunc:function(e){if(n!==e){if(e)switch(e){case ye:c.depthFunc(c.NEVER);break;case xe:c.depthFunc(c.ALWAYS);break;case _e:c.depthFunc(c.LESS);break;case Me:c.depthFunc(c.LEQUAL);break;case we:c.depthFunc(c.EQUAL);break;case be:c.depthFunc(c.GEQUAL);break;case Ee:c.depthFunc(c.GREATER);break;case Te:c.depthFunc(c.NOTEQUAL);break;default:c.depthFunc(c.LEQUAL)}else c.depthFunc(c.LEQUAL);n=e}},setLocked:function(e){t=e},setClear:function(e){i!==e&&(c.clearDepth(e),i=e)},reset:function(){t=!1,r=null,n=null,i=null}}},a=new function(){let t=!1,r=null,n=null,i=null,a=null,s=null,o=null,l=null,h=null;return{setTest:function(e){t||(e?B:U)(c.STENCIL_TEST)},setMask:function(e){r===e||t||(c.stencilMask(e),r=e)},setFunc:function(e,t,r){n===e&&i===t&&a===r||(c.stencilFunc(e,t,r),n=e,i=t,a=r)},setOp:function(e,t,r){s===e&&o===t&&l===r||(c.stencilOp(e,t,r),s=e,o=t,l=r)},setLocked:function(e){t=e},setClear:function(e){h!==e&&(c.clearStencil(e),h=e)},reset:function(){t=!1,r=null,n=null,i=null,a=null,s=null,o=null,l=null,h=null}}};let s={},o=null,l={},h=null,u=!1,d=null,p=null,m=null,f=null,g=null,v=null,y=null,x=!1,_=null,M=null,w=null,b=null,E=null;const T=c.getParameter(c.MAX_COMBINED_TEXTURE_IMAGE_UNITS);let S=!1,A=0;const R=c.getParameter(c.VERSION);-1!==R.indexOf("WebGL")?(A=parseFloat(/^WebGL (\d)/.exec(R)[1]),S=1<=A):-1!==R.indexOf("OpenGL ES")&&(A=parseFloat(/^OpenGL ES (\d)/.exec(R)[1]),S=2<=A);let L=null,C={};var P=c.getParameter(c.SCISSOR_BOX),t=c.getParameter(c.VIEWPORT);const I=(new lr).fromArray(P),D=(new lr).fromArray(t);function N(e,t,r){var n=new Uint8Array(4),i=c.createTexture();c.bindTexture(e,i),c.texParameteri(e,c.TEXTURE_MIN_FILTER,c.NEAREST),c.texParameteri(e,c.TEXTURE_MAG_FILTER,c.NEAREST);for(let e=0;e<r;e++)c.texImage2D(t+e,0,c.RGBA,1,1,0,c.RGBA,c.UNSIGNED_BYTE,n);return i}const F={};function B(e){!0!==s[e]&&(c.enable(e),s[e]=!0)}function U(e){!1!==s[e]&&(c.disable(e),s[e]=!1)}F[c.TEXTURE_2D]=N(c.TEXTURE_2D,c.TEXTURE_2D,1),F[c.TEXTURE_CUBE_MAP]=N(c.TEXTURE_CUBE_MAP,c.TEXTURE_CUBE_MAP_POSITIVE_X,6),n.setClear(0,0,0,1),i.setClear(1),a.setClear(0),B(c.DEPTH_TEST),i.setFunc(Me),G(!1),V(X),B(c.CULL_FACE),H(J);const O={[re]:c.FUNC_ADD,[ne]:c.FUNC_SUBTRACT,[ie]:c.FUNC_REVERSE_SUBTRACT};r?(O[ae]=c.MIN,O[se]=c.MAX):null!==(e=e.get("EXT_blend_minmax"))&&(O[ae]=e.MIN_EXT,O[se]=e.MAX_EXT);const z={[oe]:c.ZERO,[le]:c.ONE,[he]:c.SRC_COLOR,[ue]:c.SRC_ALPHA,[ve]:c.SRC_ALPHA_SATURATE,[fe]:c.DST_COLOR,[pe]:c.DST_ALPHA,[ce]:c.ONE_MINUS_SRC_COLOR,[de]:c.ONE_MINUS_SRC_ALPHA,[ge]:c.ONE_MINUS_DST_COLOR,[me]:c.ONE_MINUS_DST_ALPHA};function H(e,t,r,n,i,a,s,o){if(e!==J){if(!1===u&&(B(c.BLEND),u=!0),e===te)i=i||t,a=a||r,s=s||n,t===p&&i===g||(c.blendEquationSeparate(O[t],O[i]),p=t,g=i),r===m&&n===f&&a===v&&s===y||(c.blendFuncSeparate(z[r],z[n],z[a],z[s]),m=r,f=n,v=a,y=s),d=e,x=null;else if(e!==d||o!==x){if(p===re&&g===re||(c.blendEquation(c.FUNC_ADD),p=re,g=re),o)switch(e){case K:c.blendFuncSeparate(c.ONE,c.ONE_MINUS_SRC_ALPHA,c.ONE,c.ONE_MINUS_SRC_ALPHA);break;case Q:c.blendFunc(c.ONE,c.ONE);break;case $:c.blendFuncSeparate(c.ZERO,c.ZERO,c.ONE_MINUS_SRC_COLOR,c.ONE_MINUS_SRC_ALPHA);break;case ee:c.blendFuncSeparate(c.ZERO,c.SRC_COLOR,c.ZERO,c.SRC_ALPHA);break;default:console.error("THREE.WebGLState: Invalid blending: ",e)}else switch(e){case K:c.blendFuncSeparate(c.SRC_ALPHA,c.ONE_MINUS_SRC_ALPHA,c.ONE,c.ONE_MINUS_SRC_ALPHA);break;case Q:c.blendFunc(c.SRC_ALPHA,c.ONE);break;case $:c.blendFunc(c.ZERO,c.ONE_MINUS_SRC_COLOR);break;case ee:c.blendFunc(c.ZERO,c.SRC_COLOR);break;default:console.error("THREE.WebGLState: Invalid blending: ",e)}m=null,f=null,v=null,y=null,d=e,x=o}}else!0===u&&(U(c.BLEND),u=!1)}function G(e){_!==e&&(e?c.frontFace(c.CW):c.frontFace(c.CCW),_=e)}function V(e){e!==j?(B(c.CULL_FACE),e!==M&&(e===X?c.cullFace(c.BACK):e===q?c.cullFace(c.FRONT):c.cullFace(c.FRONT_AND_BACK))):U(c.CULL_FACE),M=e}function k(e,t,r){e?(B(c.POLYGON_OFFSET_FILL),b===t&&E===r||(c.polygonOffset(t,r),b=t,E=r)):U(c.POLYGON_OFFSET_FILL)}function W(e){void 0===e&&(e=c.TEXTURE0+T-1),L!==e&&(c.activeTexture(e),L=e)}return{buffers:{color:n,depth:i,stencil:a},enable:B,disable:U,bindFramebuffer:function(e,t){return null===t&&null!==o&&(t=o),l[e]!==t&&(c.bindFramebuffer(e,t),l[e]=t,r&&(e===c.DRAW_FRAMEBUFFER&&(l[c.FRAMEBUFFER]=t),e===c.FRAMEBUFFER&&(l[c.DRAW_FRAMEBUFFER]=t)),!0)},bindXRFramebuffer:function(e){e!==o&&(c.bindFramebuffer(c.FRAMEBUFFER,e),o=e)},useProgram:function(e){return h!==e&&(c.useProgram(e),h=e,!0)},setBlending:H,setMaterial:function(e,t){(e.side===Z?U:B)(c.CULL_FACE);let r=e.side===Y;t&&(r=!r),G(r),e.blending===K&&!1===e.transparent?H(J):H(e.blending,e.blendEquation,e.blendSrc,e.blendDst,e.blendEquationAlpha,e.blendSrcAlpha,e.blendDstAlpha,e.premultipliedAlpha),i.setFunc(e.depthFunc),i.setTest(e.depthTest),i.setMask(e.depthWrite),n.setMask(e.colorWrite),t=e.stencilWrite,a.setTest(t),t&&(a.setMask(e.stencilWriteMask),a.setFunc(e.stencilFunc,e.stencilRef,e.stencilFuncMask),a.setOp(e.stencilFail,e.stencilZFail,e.stencilZPass)),k(e.polygonOffset,e.polygonOffsetFactor,e.polygonOffsetUnits),(!0===e.alphaToCoverage?B:U)(c.SAMPLE_ALPHA_TO_COVERAGE)},setFlipSided:G,setCullFace:V,setLineWidth:function(e){e!==w&&(S&&c.lineWidth(e),w=e)},setPolygonOffset:k,setScissorTest:function(e){(e?B:U)(c.SCISSOR_TEST)},activeTexture:W,bindTexture:function(e,t){null===L&&W();let r=C[L];void 0===r&&(r={type:void 0,texture:void 0},C[L]=r),r.type===e&&r.texture===t||(c.bindTexture(e,t||F[e]),r.type=e,r.texture=t)},unbindTexture:function(){const e=C[L];void 0!==e&&void 0!==e.type&&(c.bindTexture(e.type,null),e.type=void 0,e.texture=void 0)},compressedTexImage2D:function(){try{c.compressedTexImage2D.apply(c,arguments)}catch(e){console.error("THREE.WebGLState:",e)}},texImage2D:function(){try{c.texImage2D.apply(c,arguments)}catch(e){console.error("THREE.WebGLState:",e)}},texImage3D:function(){try{c.texImage3D.apply(c,arguments)}catch(e){console.error("THREE.WebGLState:",e)}},scissor:function(e){!1===I.equals(e)&&(c.scissor(e.x,e.y,e.z,e.w),I.copy(e))},viewport:function(e){!1===D.equals(e)&&(c.viewport(e.x,e.y,e.z,e.w),D.copy(e))},reset:function(){c.disable(c.BLEND),c.disable(c.CULL_FACE),c.disable(c.DEPTH_TEST),c.disable(c.POLYGON_OFFSET_FILL),c.disable(c.SCISSOR_TEST),c.disable(c.STENCIL_TEST),c.disable(c.SAMPLE_ALPHA_TO_COVERAGE),c.blendEquation(c.FUNC_ADD),c.blendFunc(c.ONE,c.ZERO),c.blendFuncSeparate(c.ONE,c.ZERO,c.ONE,c.ZERO),c.colorMask(!0,!0,!0,!0),c.clearColor(0,0,0,0),c.depthMask(!0),c.depthFunc(c.LESS),c.clearDepth(1),c.stencilMask(4294967295),c.stencilFunc(c.ALWAYS,0,4294967295),c.stencilOp(c.KEEP,c.KEEP,c.KEEP),c.clearStencil(0),c.cullFace(c.BACK),c.frontFace(c.CCW),c.polygonOffset(0,0),c.activeTexture(c.TEXTURE0),c.bindFramebuffer(c.FRAMEBUFFER,null),!0===r&&(c.bindFramebuffer(c.DRAW_FRAMEBUFFER,null),c.bindFramebuffer(c.READ_FRAMEBUFFER,null)),c.useProgram(null),c.lineWidth(1),c.scissor(0,0,c.canvas.width,c.canvas.height),c.viewport(0,0,c.canvas.width,c.canvas.height),s={},L=null,C={},o=null,l={},h=null,u=!1,d=null,p=null,m=null,f=null,g=null,v=null,y=null,x=!1,_=null,M=null,w=null,b=null,E=null,I.set(0,0,c.canvas.width,c.canvas.height),D.set(0,0,c.canvas.width,c.canvas.height),n.reset(),i.reset(),a.reset()}}}function Zs(f,i,g,v,y,x,_){const M=y.isWebGL2,t=y.maxTextures,m=y.maxCubemapSize,c=y.maxTextureSize,r=y.maxSamples,a=new WeakMap;let l,n=!1;try{n="undefined"!=typeof OffscreenCanvas&&null!==new OffscreenCanvas(1,1).getContext("2d")}catch(e){}function h(e,t){return n?new OffscreenCanvas(e,t):document.createElementNS("http://www.w3.org/1999/xhtml","canvas")}function w(e,t,r,n){let i=1;if((e.width>n||e.height>n)&&(i=n/Math.max(e.width,e.height)),i<1||!0===t){if("undefined"!=typeof HTMLImageElement&&e instanceof HTMLImageElement||"undefined"!=typeof HTMLCanvasElement&&e instanceof HTMLCanvasElement||"undefined"!=typeof ImageBitmap&&e instanceof ImageBitmap){const a=t?$t:Math.floor;n=a(i*e.width),t=a(i*e.height);void 0===l&&(l=h(n,t));const s=r?h(n,t):l;s.width=n,s.height=t;const o=s.getContext("2d");return o.drawImage(e,0,0,n,t),console.warn("THREE.WebGLRenderer: Texture has been resized from ("+e.width+"x"+e.height+") to ("+n+"x"+t+")."),s}return"data"in e&&console.warn("THREE.WebGLRenderer: Image in DataTexture is too big ("+e.width+"x"+e.height+")."),e}return e}function b(e){return Kt(e.width)&&Kt(e.height)}function E(e,t){return e.generateMipmaps&&t&&e.minFilter!==Ce&&e.minFilter!==k}function T(e,t,r,n){f.generateMipmap(e);const i=v.get(t);i.__maxMipLevel=Math.log2(Math.max(r,n))}function S(e,t,r){if(!1===M)return t;if(null!==e){if(void 0!==f[e])return f[e];console.warn("THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format '"+e+"'")}let n=t;return t===f.RED&&(r===f.FLOAT&&(n=f.R32F),r===f.HALF_FLOAT&&(n=f.R16F),r===f.UNSIGNED_BYTE&&(n=f.R8)),t===f.RGB&&(r===f.FLOAT&&(n=f.RGB32F),r===f.HALF_FLOAT&&(n=f.RGB16F),r===f.UNSIGNED_BYTE&&(n=f.RGB8)),t===f.RGBA&&(r===f.FLOAT&&(n=f.RGBA32F),r===f.HALF_FLOAT&&(n=f.RGBA16F),r===f.UNSIGNED_BYTE&&(n=f.RGBA8)),n!==f.R16F&&n!==f.R32F&&n!==f.RGBA16F&&n!==f.RGBA32F||i.get("EXT_color_buffer_float"),n}function s(e){return e===Ce||e===G||e===V?f.NEAREST:f.LINEAR}function o(e){const t=e.target;var r;t.removeEventListener("dispose",o),r=t,void 0!==(e=v.get(r)).__webglInit&&(f.deleteTexture(e.__webglTexture),v.remove(r)),t.isVideoTexture&&a.delete(t),_.memory.textures--}function A(e){const t=e.target;t.removeEventListener("dispose",A),function(e){var r=e.texture,t=v.get(e),n=v.get(r);if(e){if(void 0!==n.__webglTexture&&(f.deleteTexture(n.__webglTexture),_.memory.textures--),e.depthTexture&&e.depthTexture.dispose(),e.isWebGLCubeRenderTarget)for(let e=0;e<6;e++)f.deleteFramebuffer(t.__webglFramebuffer[e]),t.__webglDepthbuffer&&f.deleteRenderbuffer(t.__webglDepthbuffer[e]);else f.deleteFramebuffer(t.__webglFramebuffer),t.__webglDepthbuffer&&f.deleteRenderbuffer(t.__webglDepthbuffer),t.__webglMultisampledFramebuffer&&f.deleteFramebuffer(t.__webglMultisampledFramebuffer),t.__webglColorRenderbuffer&&f.deleteRenderbuffer(t.__webglColorRenderbuffer),t.__webglDepthRenderbuffer&&f.deleteRenderbuffer(t.__webglDepthRenderbuffer);if(e.isWebGLMultipleRenderTargets)for(let e=0,t=r.length;e<t;e++){var i=v.get(r[e]);i.__webglTexture&&(f.deleteTexture(i.__webglTexture),_.memory.textures--),v.remove(r[e])}v.remove(r),v.remove(e)}}(t)}let u=0;function d(e,t){var r,n=v.get(e);if(e.isVideoTexture&&(i=e,r=_.render.frame,a.get(i)!==r&&(a.set(i,r),i.update())),0<e.version&&n.__version!==e.version){var i=e.image;if(void 0===i)console.warn("THREE.WebGLRenderer: Texture marked for update but image is undefined");else{if(!1!==i.complete)return void I(n,e,t);console.warn("THREE.WebGLRenderer: Texture marked for update but image is incomplete")}}g.activeTexture(f.TEXTURE0+t),g.bindTexture(f.TEXTURE_2D,n.__webglTexture)}function p(e,t){var r=v.get(e);0<e.version&&r.__version!==e.version?function(e,n,t){if(6===n.image.length){P(e,n),g.activeTexture(f.TEXTURE0+t),g.bindTexture(f.TEXTURE_CUBE_MAP,e.__webglTexture),f.pixelStorei(f.UNPACK_FLIP_Y_WEBGL,n.flipY),f.pixelStorei(f.UNPACK_PREMULTIPLY_ALPHA_WEBGL,n.premultiplyAlpha),f.pixelStorei(f.UNPACK_ALIGNMENT,n.unpackAlignment),f.pixelStorei(f.UNPACK_COLORSPACE_CONVERSION_WEBGL,f.NONE);var i=n&&(n.isCompressedTexture||n.image[0].isCompressedTexture),a=n.image[0]&&n.image[0].isDataTexture;const p=[];for(let e=0;e<6;e++)p[e]=i||a?a?n.image[e].image:n.image[e]:w(n.image[e],!1,!0,m);var s=p[0],t=b(s)||M,o=x.convert(n.format),l=x.convert(n.type),h=S(n.internalFormat,o,l);C(f.TEXTURE_CUBE_MAP,n,t);let r;if(i){for(let t=0;t<6;t++){r=p[t].mipmaps;for(let e=0;e<r.length;e++){var c=r[e];n.format!==Ue&&n.format!==Be?null!==o?g.compressedTexImage2D(f.TEXTURE_CUBE_MAP_POSITIVE_X+t,e,h,c.width,c.height,0,c.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()"):g.texImage2D(f.TEXTURE_CUBE_MAP_POSITIVE_X+t,e,h,c.width,c.height,0,o,l,c.data)}}e.__maxMipLevel=r.length-1}else{r=n.mipmaps;for(let t=0;t<6;t++)if(a){g.texImage2D(f.TEXTURE_CUBE_MAP_POSITIVE_X+t,0,h,p[t].width,p[t].height,0,o,l,p[t].data);for(let e=0;e<r.length;e++){var u=r[e].image[t].image;g.texImage2D(f.TEXTURE_CUBE_MAP_POSITIVE_X+t,e+1,h,u.width,u.height,0,o,l,u.data)}}else{g.texImage2D(f.TEXTURE_CUBE_MAP_POSITIVE_X+t,0,h,o,l,p[t]);for(let e=0;e<r.length;e++){var d=r[e];g.texImage2D(f.TEXTURE_CUBE_MAP_POSITIVE_X+t,e+1,h,o,l,d.image[t])}}e.__maxMipLevel=r.length}E(n,t)&&T(f.TEXTURE_CUBE_MAP,n,s.width,s.height),e.__version=n.version,n.onUpdate&&n.onUpdate(n)}}(r,e,t):(g.activeTexture(f.TEXTURE0+t),g.bindTexture(f.TEXTURE_CUBE_MAP,r.__webglTexture))}const R={[z]:f.REPEAT,[Le]:f.CLAMP_TO_EDGE,[H]:f.MIRRORED_REPEAT},L={[Ce]:f.NEAREST,[G]:f.NEAREST_MIPMAP_NEAREST,[V]:f.NEAREST_MIPMAP_LINEAR,[k]:f.LINEAR,[W]:f.LINEAR_MIPMAP_NEAREST,[Pe]:f.LINEAR_MIPMAP_LINEAR};function C(e,t,r){r?(f.texParameteri(e,f.TEXTURE_WRAP_S,R[t.wrapS]),f.texParameteri(e,f.TEXTURE_WRAP_T,R[t.wrapT]),e!==f.TEXTURE_3D&&e!==f.TEXTURE_2D_ARRAY||f.texParameteri(e,f.TEXTURE_WRAP_R,R[t.wrapR]),f.texParameteri(e,f.TEXTURE_MAG_FILTER,L[t.magFilter]),f.texParameteri(e,f.TEXTURE_MIN_FILTER,L[t.minFilter])):(f.texParameteri(e,f.TEXTURE_WRAP_S,f.CLAMP_TO_EDGE),f.texParameteri(e,f.TEXTURE_WRAP_T,f.CLAMP_TO_EDGE),e!==f.TEXTURE_3D&&e!==f.TEXTURE_2D_ARRAY||f.texParameteri(e,f.TEXTURE_WRAP_R,f.CLAMP_TO_EDGE),t.wrapS===Le&&t.wrapT===Le||console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping."),f.texParameteri(e,f.TEXTURE_MAG_FILTER,s(t.magFilter)),f.texParameteri(e,f.TEXTURE_MIN_FILTER,s(t.minFilter)),t.minFilter!==Ce&&t.minFilter!==k&&console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter.")),!0===i.has("EXT_texture_filter_anisotropic")&&(r=i.get("EXT_texture_filter_anisotropic"),t.type===De&&!1===i.has("OES_texture_float_linear")||!1===M&&t.type===Ne&&!1===i.has("OES_texture_half_float_linear")||(1<t.anisotropy||v.get(t).__currentAnisotropy)&&(f.texParameterf(e,r.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(t.anisotropy,y.getMaxAnisotropy())),v.get(t).__currentAnisotropy=t.anisotropy))}function P(e,t){void 0===e.__webglInit&&(e.__webglInit=!0,t.addEventListener("dispose",o),e.__webglTexture=f.createTexture(),_.memory.textures++)}function I(e,r,t){let n=f.TEXTURE_2D;r.isDataTexture2DArray&&(n=f.TEXTURE_2D_ARRAY),r.isDataTexture3D&&(n=f.TEXTURE_3D),P(e,r),g.activeTexture(f.TEXTURE0+t),g.bindTexture(n,e.__webglTexture),f.pixelStorei(f.UNPACK_FLIP_Y_WEBGL,r.flipY),f.pixelStorei(f.UNPACK_PREMULTIPLY_ALPHA_WEBGL,r.premultiplyAlpha),f.pixelStorei(f.UNPACK_ALIGNMENT,r.unpackAlignment),f.pixelStorei(f.UNPACK_COLORSPACE_CONVERSION_WEBGL,f.NONE);var t=(i=r,!M&&(i.wrapS!==Le||i.wrapT!==Le||i.minFilter!==Ce&&i.minFilter!==k)&&!1===b(r.image)),i=w(r.image,t,!1,c),t=b(i)||M,a=x.convert(r.format);let s=x.convert(r.type),o=S(r.internalFormat,a,s);C(n,r,t);let l;var h=r.mipmaps;if(r.isDepthTexture)o=f.DEPTH_COMPONENT,M?o=r.type===De?f.DEPTH_COMPONENT32F:r.type===Ae?f.DEPTH_COMPONENT24:r.type===Fe?f.DEPTH24_STENCIL8:f.DEPTH_COMPONENT16:r.type===De&&console.error("WebGLRenderer: Floating point depth texture requires WebGL2."),r.format===Oe&&o===f.DEPTH_COMPONENT&&r.type!==Se&&r.type!==Ae&&(console.warn("THREE.WebGLRenderer: Use UnsignedShortType or UnsignedIntType for DepthFormat DepthTexture."),r.type=Se,s=x.convert(r.type)),r.format===ze&&o===f.DEPTH_COMPONENT&&(o=f.DEPTH_STENCIL,r.type!==Fe&&(console.warn("THREE.WebGLRenderer: Use UnsignedInt248Type for DepthStencilFormat DepthTexture."),r.type=Fe,s=x.convert(r.type))),g.texImage2D(f.TEXTURE_2D,0,o,i.width,i.height,0,a,s,null);else if(r.isDataTexture)if(0<h.length&&t){for(let e=0,t=h.length;e<t;e++)l=h[e],g.texImage2D(f.TEXTURE_2D,e,o,l.width,l.height,0,a,s,l.data);r.generateMipmaps=!1,e.__maxMipLevel=h.length-1}else g.texImage2D(f.TEXTURE_2D,0,o,i.width,i.height,0,a,s,i.data),e.__maxMipLevel=0;else if(r.isCompressedTexture){for(let e=0,t=h.length;e<t;e++)l=h[e],r.format!==Ue&&r.format!==Be?null!==a?g.compressedTexImage2D(f.TEXTURE_2D,e,o,l.width,l.height,0,l.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):g.texImage2D(f.TEXTURE_2D,e,o,l.width,l.height,0,a,s,l.data);e.__maxMipLevel=h.length-1}else if(r.isDataTexture2DArray)g.texImage3D(f.TEXTURE_2D_ARRAY,0,o,i.width,i.height,i.depth,0,a,s,i.data),e.__maxMipLevel=0;else if(r.isDataTexture3D)g.texImage3D(f.TEXTURE_3D,0,o,i.width,i.height,i.depth,0,a,s,i.data),e.__maxMipLevel=0;else if(0<h.length&&t){for(let e=0,t=h.length;e<t;e++)l=h[e],g.texImage2D(f.TEXTURE_2D,e,o,a,s,l);r.generateMipmaps=!1,e.__maxMipLevel=h.length-1}else g.texImage2D(f.TEXTURE_2D,0,o,a,s,i),e.__maxMipLevel=0;E(r,t)&&T(n,r,i.width,i.height),e.__version=r.version,r.onUpdate&&r.onUpdate(r)}function D(e,t,r,n,i){var a=x.convert(r.format),s=x.convert(r.type),o=S(r.internalFormat,a,s);i===f.TEXTURE_3D||i===f.TEXTURE_2D_ARRAY?g.texImage3D(i,0,o,t.width,t.height,t.depth,0,a,s,null):g.texImage2D(i,0,o,t.width,t.height,0,a,s,null),g.bindFramebuffer(f.FRAMEBUFFER,e),f.framebufferTexture2D(f.FRAMEBUFFER,n,i,v.get(r).__webglTexture,0),g.bindFramebuffer(f.FRAMEBUFFER,null)}function N(t,r,n){if(f.bindRenderbuffer(f.RENDERBUFFER,t),r.depthBuffer&&!r.stencilBuffer){let e=f.DEPTH_COMPONENT16;n?((i=r.depthTexture)&&i.isDepthTexture&&(i.type===De?e=f.DEPTH_COMPONENT32F:i.type===Ae&&(e=f.DEPTH_COMPONENT24)),i=B(r),f.renderbufferStorageMultisample(f.RENDERBUFFER,i,e,r.width,r.height)):f.renderbufferStorage(f.RENDERBUFFER,e,r.width,r.height),f.framebufferRenderbuffer(f.FRAMEBUFFER,f.DEPTH_ATTACHMENT,f.RENDERBUFFER,t)}else{var i,e;r.depthBuffer&&r.stencilBuffer?(n?(e=B(r),f.renderbufferStorageMultisample(f.RENDERBUFFER,e,f.DEPTH24_STENCIL8,r.width,r.height)):f.renderbufferStorage(f.RENDERBUFFER,f.DEPTH_STENCIL,r.width,r.height),f.framebufferRenderbuffer(f.FRAMEBUFFER,f.DEPTH_STENCIL_ATTACHMENT,f.RENDERBUFFER,t)):(i=!0===r.isWebGLMultipleRenderTargets?r.texture[0]:r.texture,e=x.convert(i.format),t=x.convert(i.type),t=S(i.internalFormat,e,t),n?(n=B(r),f.renderbufferStorageMultisample(f.RENDERBUFFER,n,t,r.width,r.height)):f.renderbufferStorage(f.RENDERBUFFER,t,r.width,r.height))}f.bindRenderbuffer(f.RENDERBUFFER,null)}function F(t){const r=v.get(t);var e=!0===t.isWebGLCubeRenderTarget;if(t.depthTexture){if(e)throw new Error("target.depthTexture not supported in Cube render targets");!function(e,t){if(t&&t.isWebGLCubeRenderTarget)throw new Error("Depth Texture with cube render targets is not supported");if(g.bindFramebuffer(f.FRAMEBUFFER,e),!t.depthTexture||!t.depthTexture.isDepthTexture)throw new Error("renderTarget.depthTexture must be an instance of THREE.DepthTexture");if(v.get(t.depthTexture).__webglTexture&&t.depthTexture.image.width===t.width&&t.depthTexture.image.height===t.height||(t.depthTexture.image.width=t.width,t.depthTexture.image.height=t.height,t.depthTexture.needsUpdate=!0),d(t.depthTexture,0),e=v.get(t.depthTexture).__webglTexture,t.depthTexture.format===Oe)f.framebufferTexture2D(f.FRAMEBUFFER,f.DEPTH_ATTACHMENT,f.TEXTURE_2D,e,0);else{if(t.depthTexture.format!==ze)throw new Error("Unknown depthTexture format");f.framebufferTexture2D(f.FRAMEBUFFER,f.DEPTH_STENCIL_ATTACHMENT,f.TEXTURE_2D,e,0)}}(r.__webglFramebuffer,t)}else if(e){r.__webglDepthbuffer=[];for(let e=0;e<6;e++)g.bindFramebuffer(f.FRAMEBUFFER,r.__webglFramebuffer[e]),r.__webglDepthbuffer[e]=f.createRenderbuffer(),N(r.__webglDepthbuffer[e],t,!1)}else g.bindFramebuffer(f.FRAMEBUFFER,r.__webglFramebuffer),r.__webglDepthbuffer=f.createRenderbuffer(),N(r.__webglDepthbuffer,t,!1);g.bindFramebuffer(f.FRAMEBUFFER,null)}function B(e){return M&&e.isWebGLMultisampleRenderTarget?Math.min(r,e.samples):0}let U=!1,O=!1;this.allocateTextureUnit=function(){var e=u;return e>=t&&console.warn("THREE.WebGLTextures: Trying to use "+e+" texture units while this GPU supports only "+t),u+=1,e},this.resetTextureUnits=function(){u=0},this.setTexture2D=d,this.setTexture2DArray=function(e,t){var r=v.get(e);0<e.version&&r.__version!==e.version?I(r,e,t):(g.activeTexture(f.TEXTURE0+t),g.bindTexture(f.TEXTURE_2D_ARRAY,r.__webglTexture))},this.setTexture3D=function(e,t){var r=v.get(e);0<e.version&&r.__version!==e.version?I(r,e,t):(g.activeTexture(f.TEXTURE0+t),g.bindTexture(f.TEXTURE_3D,r.__webglTexture))},this.setTextureCube=p,this.setupRenderTarget=function(r){const t=r.texture,n=v.get(r),i=v.get(t);r.addEventListener("dispose",A),!0!==r.isWebGLMultipleRenderTargets&&(i.__webglTexture=f.createTexture(),i.__version=t.version,_.memory.textures++);var e,a=!0===r.isWebGLCubeRenderTarget,s=!0===r.isWebGLMultipleRenderTargets,o=!0===r.isWebGLMultisampleRenderTarget,l=t.isDataTexture3D||t.isDataTexture2DArray,h=b(r)||M;if(!M||t.format!==Be||t.type!==De&&t.type!==Ne||(t.format=Ue,console.warn("THREE.WebGLRenderer: Rendering to textures with RGB format is not supported. Using RGBA format instead.")),a){n.__webglFramebuffer=[];for(let e=0;e<6;e++)n.__webglFramebuffer[e]=f.createFramebuffer()}else if(n.__webglFramebuffer=f.createFramebuffer(),s)if(y.drawBuffers){var c=r.texture;for(let e=0,t=c.length;e<t;e++){const m=v.get(c[e]);void 0===m.__webglTexture&&(m.__webglTexture=f.createTexture(),_.memory.textures++)}}else console.warn("THREE.WebGLRenderer: WebGLMultipleRenderTargets can only be used with WebGL2 or WEBGL_draw_buffers extension.");else o&&(M?(n.__webglMultisampledFramebuffer=f.createFramebuffer(),n.__webglColorRenderbuffer=f.createRenderbuffer(),f.bindRenderbuffer(f.RENDERBUFFER,n.__webglColorRenderbuffer),e=x.convert(t.format),o=x.convert(t.type),e=S(t.internalFormat,e,o),o=B(r),f.renderbufferStorageMultisample(f.RENDERBUFFER,o,e,r.width,r.height),g.bindFramebuffer(f.FRAMEBUFFER,n.__webglMultisampledFramebuffer),f.framebufferRenderbuffer(f.FRAMEBUFFER,f.COLOR_ATTACHMENT0,f.RENDERBUFFER,n.__webglColorRenderbuffer),f.bindRenderbuffer(f.RENDERBUFFER,null),r.depthBuffer&&(n.__webglDepthRenderbuffer=f.createRenderbuffer(),N(n.__webglDepthRenderbuffer,r,!0)),g.bindFramebuffer(f.FRAMEBUFFER,null)):console.warn("THREE.WebGLRenderer: WebGLMultisampleRenderTarget can only be used with WebGL2."));if(a){g.bindTexture(f.TEXTURE_CUBE_MAP,i.__webglTexture),C(f.TEXTURE_CUBE_MAP,t,h);for(let e=0;e<6;e++)D(n.__webglFramebuffer[e],r,t,f.COLOR_ATTACHMENT0,f.TEXTURE_CUBE_MAP_POSITIVE_X+e);E(t,h)&&T(f.TEXTURE_CUBE_MAP,t,r.width,r.height),g.bindTexture(f.TEXTURE_CUBE_MAP,null)}else if(s){var u=r.texture;for(let e=0,t=u.length;e<t;e++){var d=u[e],p=v.get(d);g.bindTexture(f.TEXTURE_2D,p.__webglTexture),C(f.TEXTURE_2D,d,h),D(n.__webglFramebuffer,r,d,f.COLOR_ATTACHMENT0+e,f.TEXTURE_2D),E(d,h)&&T(f.TEXTURE_2D,d,r.width,r.height)}g.bindTexture(f.TEXTURE_2D,null)}else{let e=f.TEXTURE_2D;l&&(M?(l=t.isDataTexture3D,e=l?f.TEXTURE_3D:f.TEXTURE_2D_ARRAY):console.warn("THREE.DataTexture3D and THREE.DataTexture2DArray only supported with WebGL2.")),g.bindTexture(e,i.__webglTexture),C(e,t,h),D(n.__webglFramebuffer,r,t,f.COLOR_ATTACHMENT0,e),E(t,h)&&T(f.TEXTURE_2D,t,r.width,r.height),g.bindTexture(f.TEXTURE_2D,null)}r.depthBuffer&&F(r)},this.updateRenderTargetMipmap=function(r){var n=b(r)||M,i=!0===r.isWebGLMultipleRenderTargets?r.texture:[r.texture];for(let e=0,t=i.length;e<t;e++){var a,s,o=i[e];E(o,n)&&(a=r.isWebGLCubeRenderTarget?f.TEXTURE_CUBE_MAP:f.TEXTURE_2D,s=v.get(o).__webglTexture,g.bindTexture(a,s),T(a,o,r.width,r.height),g.bindTexture(a,null))}},this.updateMultisampleRenderTarget=function(t){if(t.isWebGLMultisampleRenderTarget)if(M){var r=t.width,n=t.height;let e=f.COLOR_BUFFER_BIT;t.depthBuffer&&(e|=f.DEPTH_BUFFER_BIT),t.stencilBuffer&&(e|=f.STENCIL_BUFFER_BIT);t=v.get(t);g.bindFramebuffer(f.READ_FRAMEBUFFER,t.__webglMultisampledFramebuffer),g.bindFramebuffer(f.DRAW_FRAMEBUFFER,t.__webglFramebuffer),f.blitFramebuffer(0,0,r,n,0,0,r,n,e,f.NEAREST),g.bindFramebuffer(f.READ_FRAMEBUFFER,null),g.bindFramebuffer(f.DRAW_FRAMEBUFFER,t.__webglMultisampledFramebuffer)}else console.warn("THREE.WebGLRenderer: WebGLMultisampleRenderTarget can only be used with WebGL2.")},this.safeSetTexture2D=function(e,t){e&&e.isWebGLRenderTarget&&(!1===U&&(console.warn("THREE.WebGLTextures.safeSetTexture2D: don't use render targets as textures. Use their .texture property instead."),U=!0),e=e.texture),d(e,t)},this.safeSetTextureCube=function(e,t){e&&e.isWebGLCubeRenderTarget&&(!1===O&&(console.warn("THREE.WebGLTextures.safeSetTextureCube: don't use cube render targets as textures. Use their .texture property instead."),O=!0),e=e.texture),p(e,t)}}function Js(r,n,e){const i=e.isWebGL2;return{convert:function(e){let t;if(e===Ie)return r.UNSIGNED_BYTE;if(e===c)return r.UNSIGNED_SHORT_4_4_4_4;if(e===u)return r.UNSIGNED_SHORT_5_5_5_1;if(e===d)return r.UNSIGNED_SHORT_5_6_5;if(e===a)return r.BYTE;if(e===s)return r.SHORT;if(e===Se)return r.UNSIGNED_SHORT;if(e===o)return r.INT;if(e===Ae)return r.UNSIGNED_INT;if(e===De)return r.FLOAT;if(e===Ne)return i?r.HALF_FLOAT:(t=n.get("OES_texture_half_float"),null!==t?t.HALF_FLOAT_OES:null);if(e===p)return r.ALPHA;if(e===Be)return r.RGB;if(e===Ue)return r.RGBA;if(e===m)return r.LUMINANCE;if(e===f)return r.LUMINANCE_ALPHA;if(e===Oe)return r.DEPTH_COMPONENT;if(e===ze)return r.DEPTH_STENCIL;if(e===g)return r.RED;if(e===v)return r.RED_INTEGER;if(e===y)return r.RG;if(e===x)return r.RG_INTEGER;if(e===_)return r.RGB_INTEGER;if(e===M)return r.RGBA_INTEGER;if(e===w||e===He||e===Ge||e===Ve){if(t=n.get("WEBGL_compressed_texture_s3tc"),null===t)return null;if(e===w)return t.COMPRESSED_RGB_S3TC_DXT1_EXT;if(e===He)return t.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(e===Ge)return t.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(e===Ve)return t.COMPRESSED_RGBA_S3TC_DXT5_EXT}if(e===ke||e===We||e===je||e===Xe){if(t=n.get("WEBGL_compressed_texture_pvrtc"),null===t)return null;if(e===ke)return t.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;if(e===We)return t.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;if(e===je)return t.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;if(e===Xe)return t.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG}if(e===qe)return t=n.get("WEBGL_compressed_texture_etc1"),null!==t?t.COMPRESSED_RGB_ETC1_WEBGL:null;if((e===Ye||e===Ze)&&(t=n.get("WEBGL_compressed_texture_etc"),null!==t)){if(e===Ye)return t.COMPRESSED_RGB8_ETC2;if(e===Ze)return t.COMPRESSED_RGBA8_ETC2_EAC}return e===Je||e===Ke||e===Qe||e===$e||e===et||e===tt||e===rt||e===nt||e===it||e===at||e===st||e===ot||e===lt||e===ht||e===ut||e===dt||e===pt||e===mt||e===ft||e===gt||e===vt||e===yt||e===xt||e===_t||e===Mt||e===wt||e===bt||e===Et?(t=n.get("WEBGL_compressed_texture_astc"),null!==t?e:null):e===ct?(t=n.get("EXT_texture_compression_bptc"),null!==t?e:null):e===Fe?i?r.UNSIGNED_INT_24_8:(t=n.get("WEBGL_depth_texture"),null!==t?t.UNSIGNED_INT_24_8_WEBGL:null):void 0}}}class Ks extends Ui{constructor(e=[]){super(),this.cameras=e}}Ks.prototype.isArrayCamera=!0;class Qs extends gn{constructor(){super(),this.type="Group"}}Qs.prototype.isGroup=!0;const $s={type:"move"};class eo{constructor(){this._targetRay=null,this._grip=null,this._hand=null}getHandSpace(){return null===this._hand&&(this._hand=new Qs,this._hand.matrixAutoUpdate=!1,this._hand.visible=!1,this._hand.joints={},this._hand.inputState={pinching:!1}),this._hand}getTargetRaySpace(){return null===this._targetRay&&(this._targetRay=new Qs,this._targetRay.matrixAutoUpdate=!1,this._targetRay.visible=!1,this._targetRay.hasLinearVelocity=!1,this._targetRay.linearVelocity=new pr,this._targetRay.hasAngularVelocity=!1,this._targetRay.angularVelocity=new pr),this._targetRay}getGripSpace(){return null===this._grip&&(this._grip=new Qs,this._grip.matrixAutoUpdate=!1,this._grip.visible=!1,this._grip.hasLinearVelocity=!1,this._grip.linearVelocity=new pr,this._grip.hasAngularVelocity=!1,this._grip.angularVelocity=new pr),this._grip}dispatchEvent(e){return null!==this._targetRay&&this._targetRay.dispatchEvent(e),null!==this._grip&&this._grip.dispatchEvent(e),null!==this._hand&&this._hand.dispatchEvent(e),this}disconnect(e){return this.dispatchEvent({type:"disconnected",data:e}),null!==this._targetRay&&(this._targetRay.visible=!1),null!==this._grip&&(this._grip.visible=!1),null!==this._hand&&(this._hand.visible=!1),this}update(e,t,r){let n=null,i=null,a=null;const s=this._targetRay,o=this._grip,l=this._hand;if(e&&"visible-blurred"!==t.session.visibilityState)if(null!==s&&(n=t.getPose(e.targetRaySpace,r),null!==n&&(s.matrix.fromArray(n.transform.matrix),s.matrix.decompose(s.position,s.rotation,s.scale),n.linearVelocity?(s.hasLinearVelocity=!0,s.linearVelocity.copy(n.linearVelocity)):s.hasLinearVelocity=!1,n.angularVelocity?(s.hasAngularVelocity=!0,s.angularVelocity.copy(n.angularVelocity)):s.hasAngularVelocity=!1,this.dispatchEvent($s))),l&&e.hand){a=!0;for(const d of e.hand.values()){var h=t.getJointPose(d,r);if(void 0===l.joints[d.jointName]){const m=new Qs;m.matrixAutoUpdate=!1,m.visible=!1,l.joints[d.jointName]=m,l.add(m)}const p=l.joints[d.jointName];null!==h&&(p.matrix.fromArray(h.transform.matrix),p.matrix.decompose(p.position,p.rotation,p.scale),p.jointRadius=h.radius),p.visible=null!==h}const u=l.joints["index-finger-tip"];var c=l.joints["thumb-tip"],c=u.position.distanceTo(c.position);l.inputState.pinching&&.025<c?(l.inputState.pinching=!1,this.dispatchEvent({type:"pinchend",handedness:e.handedness,target:this})):!l.inputState.pinching&&c<=.015&&(l.inputState.pinching=!0,this.dispatchEvent({type:"pinchstart",handedness:e.handedness,target:this}))}else null!==o&&e.gripSpace&&(i=t.getPose(e.gripSpace,r),null!==i&&(o.matrix.fromArray(i.transform.matrix),o.matrix.decompose(o.position,o.rotation,o.scale),i.linearVelocity?(o.hasLinearVelocity=!0,o.linearVelocity.copy(i.linearVelocity)):o.hasLinearVelocity=!1,i.angularVelocity?(o.hasAngularVelocity=!0,o.angularVelocity.copy(i.angularVelocity)):o.hasAngularVelocity=!1));return null!==s&&(s.visible=null!==n),null!==o&&(o.visible=null!==i),null!==l&&(l.visible=null!==a),this}}class to extends Vt{constructor(e,t){super();const r=this,c=e.state;let u=null,n=1,d=null,i="local-floor",p=null;const m=[],o=new Map,a=new Ui;a.layers.enable(1),a.viewport=new lr;const s=new Ui;s.layers.enable(2),s.viewport=new lr;const f=[a,s],g=new Ks;g.layers.enable(1),g.layers.enable(2);let l=null,h=null;function v(e){const t=o.get(e.inputSource);t&&t.dispatchEvent({type:e.type,data:e.inputSource})}function y(){o.forEach(function(e,t){e.disconnect(t)}),o.clear(),l=null,h=null,c.bindXRFramebuffer(null),e.setRenderTarget(e.getRenderTarget()),E.stop(),r.isPresenting=!1,r.dispatchEvent({type:"sessionend"})}function x(t){var r=u.inputSources;for(let e=0;e<m.length;e++)o.set(r[e],m[e]);for(let e=0;e<t.removed.length;e++){var n=t.removed[e];const a=o.get(n);a&&(a.dispatchEvent({type:"disconnected",data:n}),o.delete(n))}for(let e=0;e<t.added.length;e++){var i=t.added[e];const s=o.get(i);s&&s.dispatchEvent({type:"connected",data:i})}}this.cameraAutoUpdate=!0,this.enabled=!1,this.isPresenting=!1,this.getController=function(e){let t=m[e];return void 0===t&&(t=new eo,m[e]=t),t.getTargetRaySpace()},this.getControllerGrip=function(e){let t=m[e];return void 0===t&&(t=new eo,m[e]=t),t.getGripSpace()},this.getHand=function(e){let t=m[e];return void 0===t&&(t=new eo,m[e]=t),t.getHandSpace()},this.setFramebufferScaleFactor=function(e){n=e,!0===r.isPresenting&&console.warn("THREE.WebXRManager: Cannot change framebuffer scale while presenting.")},this.setReferenceSpaceType=function(e){i=e,!0===r.isPresenting&&console.warn("THREE.WebXRManager: Cannot change reference space type while presenting.")},this.getReferenceSpace=function(){return d},this.getSession=function(){return u},this.setSession=async function(e){u=e,null!==u&&(u.addEventListener("select",v),u.addEventListener("selectstart",v),u.addEventListener("selectend",v),u.addEventListener("squeeze",v),u.addEventListener("squeezestart",v),u.addEventListener("squeezeend",v),u.addEventListener("end",y),u.addEventListener("inputsourceschange",x),!0!==(e=t.getContextAttributes()).xrCompatible&&await t.makeXRCompatible(),e={antialias:e.antialias,alpha:e.alpha,depth:e.depth,stencil:e.stencil,framebufferScaleFactor:n},e=new XRWebGLLayer(u,t,e),u.updateRenderState({baseLayer:e}),d=await u.requestReferenceSpace(i),E.setContext(u),E.start(),r.isPresenting=!0,r.dispatchEvent({type:"sessionstart"}))};const _=new pr,M=new pr;function w(e,t){null===t?e.matrixWorld.copy(e.matrix):e.matrixWorld.multiplyMatrices(t.matrixWorld,e.matrix),e.matrixWorldInverse.copy(e.matrixWorld).invert()}this.updateCamera=function(e){if(null!==u){g.near=s.near=a.near=e.near,g.far=s.far=a.far=e.far,l===g.near&&h===g.far||(u.updateRenderState({depthNear:g.near,depthFar:g.far}),l=g.near,h=g.far);var t=e.parent,r=g.cameras;w(g,t);for(let e=0;e<r.length;e++)w(r[e],t);e.matrixWorld.copy(g.matrixWorld),e.matrix.copy(g.matrix),e.matrix.decompose(e.position,e.quaternion,e.scale);const n=e.children;for(let e=0,t=n.length;e<t;e++)n[e].updateMatrixWorld(!0);2===r.length?function(e,t,r){_.setFromMatrixPosition(t.matrixWorld),M.setFromMatrixPosition(r.matrixWorld);var n=_.distanceTo(M),i=t.projectionMatrix.elements,a=r.projectionMatrix.elements,s=i[14]/(i[10]-1),o=i[14]/(i[10]+1),l=(i[9]+1)/i[5],h=(i[9]-1)/i[5],c=(i[8]-1)/i[0],r=(a[8]+1)/a[0],i=s*c,a=s*r,c=(r=n/(r-c))*-c;t.matrixWorld.decompose(e.position,e.quaternion,e.scale),e.translateX(c),e.translateZ(r),e.matrixWorld.compose(e.position,e.quaternion,e.scale),e.matrixWorldInverse.copy(e.matrixWorld).invert(),s+=r,r=o+r,e.projectionMatrix.makePerspective(i-c,n-c+a,l*o/r*s,h*o/r*s,s,r)}(g,a,s):g.projectionMatrix.copy(a.projectionMatrix)}},this.getCamera=function(){return g};let b=null;const E=new Wi;E.setAnimationLoop(function(e,t){if(p=t.getViewerPose(d),null!==p){var r=p.views;const o=u.renderState.baseLayer;c.bindXRFramebuffer(o.framebuffer);let t=!1;r.length!==g.cameras.length&&(g.cameras.length=0,t=!0);for(let e=0;e<r.length;e++){var n=r[e],i=o.getViewport(n);const l=f[e];l.matrix.fromArray(n.transform.matrix),l.projectionMatrix.fromArray(n.projectionMatrix),l.viewport.set(i.x,i.y,i.width,i.height),0===e&&g.matrix.copy(l.matrix),!0===t&&g.cameras.push(l)}}var a=u.inputSources;for(let e=0;e<m.length;e++){const h=m[e];var s=a[e];h.update(s,t,d)}b&&b(e,t)}),this.setAnimationLoop=function(e){b=e},this.dispose=function(){}}}function ro(a){function h(e,t){e.opacity.value=t.opacity,t.color&&e.diffuse.value.copy(t.color),t.emissive&&e.emissive.value.copy(t.emissive).multiplyScalar(t.emissiveIntensity),t.map&&(e.map.value=t.map),t.alphaMap&&(e.alphaMap.value=t.alphaMap),t.specularMap&&(e.specularMap.value=t.specularMap);var r=a.get(t).envMap;r&&(e.envMap.value=r,e.flipEnvMap.value=r.isCubeTexture&&r._needsFlipEnvMap?-1:1,e.reflectivity.value=t.reflectivity,e.refractionRatio.value=t.refractionRatio,void 0!==(r=a.get(r).__maxMipLevel)&&(e.maxMipLevel.value=r)),t.lightMap&&(e.lightMap.value=t.lightMap,e.lightMapIntensity.value=t.lightMapIntensity),t.aoMap&&(e.aoMap.value=t.aoMap,e.aoMapIntensity.value=t.aoMapIntensity);let n;t.map?n=t.map:t.specularMap?n=t.specularMap:t.displacementMap?n=t.displacementMap:t.normalMap?n=t.normalMap:t.bumpMap?n=t.bumpMap:t.roughnessMap?n=t.roughnessMap:t.metalnessMap?n=t.metalnessMap:t.alphaMap?n=t.alphaMap:t.emissiveMap?n=t.emissiveMap:t.clearcoatMap?n=t.clearcoatMap:t.clearcoatNormalMap?n=t.clearcoatNormalMap:t.clearcoatRoughnessMap&&(n=t.clearcoatRoughnessMap),void 0!==n&&(n.isWebGLRenderTarget&&(n=n.texture),!0===n.matrixAutoUpdate&&n.updateMatrix(),e.uvTransform.value.copy(n.matrix));let i;t.aoMap?i=t.aoMap:t.lightMap&&(i=t.lightMap),void 0!==i&&(i.isWebGLRenderTarget&&(i=i.texture),!0===i.matrixAutoUpdate&&i.updateMatrix(),e.uv2Transform.value.copy(i.matrix))}function c(e,t){e.roughness.value=t.roughness,e.metalness.value=t.metalness,t.roughnessMap&&(e.roughnessMap.value=t.roughnessMap),t.metalnessMap&&(e.metalnessMap.value=t.metalnessMap),t.emissiveMap&&(e.emissiveMap.value=t.emissiveMap),t.bumpMap&&(e.bumpMap.value=t.bumpMap,e.bumpScale.value=t.bumpScale,t.side===Y&&(e.bumpScale.value*=-1)),t.normalMap&&(e.normalMap.value=t.normalMap,e.normalScale.value.copy(t.normalScale),t.side===Y&&e.normalScale.value.negate()),t.displacementMap&&(e.displacementMap.value=t.displacementMap,e.displacementScale.value=t.displacementScale,e.displacementBias.value=t.displacementBias),a.get(t).envMap&&(e.envMapIntensity.value=t.envMapIntensity)}return{refreshFogUniforms:function(e,t){e.fogColor.value.copy(t.color),t.isFog?(e.fogNear.value=t.near,e.fogFar.value=t.far):t.isFogExp2&&(e.fogDensity.value=t.density)},refreshMaterialUniforms:function(e,t,r,n,i){var a,s,o,l;t.isMeshBasicMaterial?h(e,t):t.isMeshLambertMaterial?(h(e,t),o=e,(l=t).emissiveMap&&(o.emissiveMap.value=l.emissiveMap)):t.isMeshToonMaterial?(h(e,t),function(e,t){t.gradientMap&&(e.gradientMap.value=t.gradientMap);t.emissiveMap&&(e.emissiveMap.value=t.emissiveMap);t.bumpMap&&(e.bumpMap.value=t.bumpMap,e.bumpScale.value=t.bumpScale,t.side===Y&&(e.bumpScale.value*=-1));t.normalMap&&(e.normalMap.value=t.normalMap,e.normalScale.value.copy(t.normalScale),t.side===Y&&e.normalScale.value.negate());t.displacementMap&&(e.displacementMap.value=t.displacementMap,e.displacementScale.value=t.displacementScale,e.displacementBias.value=t.displacementBias)}(e,t)):t.isMeshPhongMaterial?(h(e,t),function(e,t){e.specular.value.copy(t.specular),e.shininess.value=Math.max(t.shininess,1e-4),t.emissiveMap&&(e.emissiveMap.value=t.emissiveMap);t.bumpMap&&(e.bumpMap.value=t.bumpMap,e.bumpScale.value=t.bumpScale,t.side===Y&&(e.bumpScale.value*=-1));t.normalMap&&(e.normalMap.value=t.normalMap,e.normalScale.value.copy(t.normalScale),t.side===Y&&e.normalScale.value.negate());t.displacementMap&&(e.displacementMap.value=t.displacementMap,e.displacementScale.value=t.displacementScale,e.displacementBias.value=t.displacementBias)}(e,t)):t.isMeshStandardMaterial?(h(e,t),t.isMeshPhysicalMaterial?function(e,t,r){c(e,t),e.reflectivity.value=t.reflectivity,e.clearcoat.value=t.clearcoat,e.clearcoatRoughness.value=t.clearcoatRoughness,t.sheen&&e.sheen.value.copy(t.sheen);t.clearcoatMap&&(e.clearcoatMap.value=t.clearcoatMap);t.clearcoatRoughnessMap&&(e.clearcoatRoughnessMap.value=t.clearcoatRoughnessMap);t.clearcoatNormalMap&&(e.clearcoatNormalScale.value.copy(t.clearcoatNormalScale),e.clearcoatNormalMap.value=t.clearcoatNormalMap,t.side===Y&&e.clearcoatNormalScale.value.negate());e.transmission.value=t.transmission,t.transmissionMap&&(e.transmissionMap.value=t.transmissionMap);0<t.transmission&&(e.transmissionSamplerMap.value=r.texture,e.transmissionSamplerSize.value.set(r.width,r.height));e.thickness.value=t.thickness,t.thicknessMap&&(e.thicknessMap.value=t.thicknessMap);e.attenuationDistance.value=t.attenuationDistance,e.attenuationColor.value.copy(t.attenuationColor)}(e,t,i):c(e,t)):t.isMeshMatcapMaterial?(h(e,t),function(e,t){t.matcap&&(e.matcap.value=t.matcap);t.bumpMap&&(e.bumpMap.value=t.bumpMap,e.bumpScale.value=t.bumpScale,t.side===Y&&(e.bumpScale.value*=-1));t.normalMap&&(e.normalMap.value=t.normalMap,e.normalScale.value.copy(t.normalScale),t.side===Y&&e.normalScale.value.negate());t.displacementMap&&(e.displacementMap.value=t.displacementMap,e.displacementScale.value=t.displacementScale,e.displacementBias.value=t.displacementBias)}(e,t)):t.isMeshDepthMaterial?(h(e,t),a=e,(s=t).displacementMap&&(a.displacementMap.value=s.displacementMap,a.displacementScale.value=s.displacementScale,a.displacementBias.value=s.displacementBias)):t.isMeshDistanceMaterial?(h(e,t),function(e,t){t.displacementMap&&(e.displacementMap.value=t.displacementMap,e.displacementScale.value=t.displacementScale,e.displacementBias.value=t.displacementBias);e.referencePosition.value.copy(t.referencePosition),e.nearDistance.value=t.nearDistance,e.farDistance.value=t.farDistance}(e,t)):t.isMeshNormalMaterial?(h(e,t),function(e,t){t.bumpMap&&(e.bumpMap.value=t.bumpMap,e.bumpScale.value=t.bumpScale,t.side===Y&&(e.bumpScale.value*=-1));t.normalMap&&(e.normalMap.value=t.normalMap,e.normalScale.value.copy(t.normalScale),t.side===Y&&e.normalScale.value.negate());t.displacementMap&&(e.displacementMap.value=t.displacementMap,e.displacementScale.value=t.displacementScale,e.displacementBias.value=t.displacementBias)}(e,t)):t.isLineBasicMaterial?(a=t,(s=e).diffuse.value.copy(a.color),s.opacity.value=a.opacity,t.isLineDashedMaterial&&(s=t,(a=e).dashSize.value=s.dashSize,a.totalSize.value=s.dashSize+s.gapSize,a.scale.value=s.scale)):t.isPointsMaterial?function(e,t,r,n){e.diffuse.value.copy(t.color),e.opacity.value=t.opacity,e.size.value=t.size*r,e.scale.value=.5*n,t.map&&(e.map.value=t.map);t.alphaMap&&(e.alphaMap.value=t.alphaMap);let i;t.map?i=t.map:t.alphaMap&&(i=t.alphaMap);void 0!==i&&(!0===i.matrixAutoUpdate&&i.updateMatrix(),e.uvTransform.value.copy(i.matrix))}(e,t,r,n):t.isSpriteMaterial?function(e,t){e.diffuse.value.copy(t.color),e.opacity.value=t.opacity,e.rotation.value=t.rotation,t.map&&(e.map.value=t.map);t.alphaMap&&(e.alphaMap.value=t.alphaMap);let r;t.map?r=t.map:t.alphaMap&&(r=t.alphaMap);void 0!==r&&(!0===r.matrixAutoUpdate&&r.updateMatrix(),e.uvTransform.value.copy(r.matrix))}(e,t):t.isShadowMaterial?(e.color.value.copy(t.color),e.opacity.value=t.opacity):t.isShaderMaterial&&(t.uniformsNeedUpdate=!1)}}}function no(e){const i=void 0!==(e=e||{}).canvas?e.canvas:function(){const e=document.createElementNS("http://www.w3.org/1999/xhtml","canvas");return e.style.display="block",e}(),t=void 0!==e.context?e.context:null,r=void 0!==e.alpha&&e.alpha,n=void 0===e.depth||e.depth,a=void 0===e.stencil||e.stencil,s=void 0!==e.antialias&&e.antialias,o=void 0===e.premultipliedAlpha||e.premultipliedAlpha,l=void 0!==e.preserveDrawingBuffer&&e.preserveDrawingBuffer,h=void 0!==e.powerPreference?e.powerPreference:"default",c=void 0!==e.failIfMajorPerformanceCaveat&&e.failIfMajorPerformanceCaveat;let m=null,_=null;const u=[],d=[];this.domElement=i,this.debug={checkShaderErrors:!0},this.autoClear=!0,this.autoClearColor=!0,this.autoClearDepth=!0,this.autoClearStencil=!0,this.sortObjects=!0,this.clippingPlanes=[],this.localClippingEnabled=!1,this.gammaFactor=2,this.outputEncoding=Lt,this.physicallyCorrectLights=!1,this.toneMapping=Re,this.toneMappingExposure=1;const M=this;let p=!1,f=0,g=0,w=null,b=-1,E=null;const v=new lr,y=new lr;let x=null,T=i.width,S=i.height,A=1,R=null,L=null;const C=new lr(0,0,T,S),P=new lr(0,0,T,S);let I=!1;const D=[],N=new ki;let F=!1,B=!1,U=null;const O=new Wr,z=new pr,H={background:null,fog:null,environment:null,overrideMaterial:null,isScene:!0};function G(){return null===w?A:1}let V=t;function k(t,r){for(let e=0;e<t.length;e++){var n=t[e],n=i.getContext(n,r);if(null!==n)return n}return null}try{var W={alpha:r,depth:n,stencil:a,antialias:s,premultipliedAlpha:o,preserveDrawingBuffer:l,powerPreference:h,failIfMajorPerformanceCaveat:c};if(i.addEventListener("webglcontextlost",fe,!1),i.addEventListener("webglcontextrestored",ge,!1),null===V){const Ae=["webgl2","webgl","experimental-webgl"];if(!0===M.isWebGL1Renderer&&Ae.shift(),V=k(Ae,W),null===V)throw k(Ae)?new Error("Error creating WebGL context with your selected attributes."):new Error("Error creating WebGL context.")}void 0===V.getShaderPrecisionFormat&&(V.getShaderPrecisionFormat=function(){return{rangeMin:1,rangeMax:1,precision:1}})}catch(e){throw console.error("THREE.WebGLRenderer: "+e.message),e}let j,X,q,Y,Z,J,K,Q,$,ee,te,re,ne,ie,ae,se,oe,le,he,ce,ue,de;function pe(){j=new ra(V),X=new $i(V,j,e),j.init(X),ue=new Js(V,j,X),q=new Ys(V,j,X),D[0]=V.BACK,Y=new aa(V),Z=new Is,J=new Zs(V,j,q,Z,X,ue,Y),K=new ta(M),Q=new ji(V,X),de=new Ki(V,j,Q,X),$=new na(V,Q,Y,de),ee=new ha(V,$,Q,Y),le=new la(V),ae=new ea(Z),te=new Ps(M,K,j,X,de,ae),re=new ro(Z),ne=new Bs(Z),ie=new Vs(j,X),oe=new Ji(M,K,q,ee,o),se=new qs(M,ee,X),he=new Qi(V,j,Y,X),ce=new ia(V,j,Y,X),Y.programs=te.programs,M.capabilities=X,M.extensions=j,M.properties=Z,M.renderLists=ne,M.shadowMap=se,M.state=q,M.info=Y}pe();const me=new to(M,V);function fe(e){e.preventDefault(),console.log("THREE.WebGLRenderer: Context Lost."),p=!0}function ge(){console.log("THREE.WebGLRenderer: Context Restored."),p=!1;var e=Y.autoReset,t=se.enabled,r=se.autoUpdate,n=se.needsUpdate,i=se.type;pe(),Y.autoReset=e,se.enabled=t,se.autoUpdate=r,se.needsUpdate=n,se.type=i}function ve(e){const t=e.target;t.removeEventListener("dispose",ve),function(e){const t=Z.get(e).programs;void 0!==t&&t.forEach(function(e){te.releaseProgram(e)})}(e=t),Z.remove(e)}this.xr=me,this.getContext=function(){return V},this.getContextAttributes=function(){return V.getContextAttributes()},this.forceContextLoss=function(){const e=j.get("WEBGL_lose_context");e&&e.loseContext()},this.forceContextRestore=function(){const e=j.get("WEBGL_lose_context");e&&e.restoreContext()},this.getPixelRatio=function(){return A},this.setPixelRatio=function(e){void 0!==e&&(A=e,this.setSize(T,S,!1))},this.getSize=function(e){return void 0===e&&(console.warn("WebGLRenderer: .getsize() now requires a Vector2 as an argument"),e=new tr),e.set(T,S)},this.setSize=function(e,t,r){me.isPresenting?console.warn("THREE.WebGLRenderer: Can't change size while VR device is presenting."):(T=e,S=t,i.width=Math.floor(e*A),i.height=Math.floor(t*A),!1!==r&&(i.style.width=e+"px",i.style.height=t+"px"),this.setViewport(0,0,e,t))},this.getDrawingBufferSize=function(e){return void 0===e&&(console.warn("WebGLRenderer: .getdrawingBufferSize() now requires a Vector2 as an argument"),e=new tr),e.set(T*A,S*A).floor()},this.setDrawingBufferSize=function(e,t,r){T=e,S=t,A=r,i.width=Math.floor(e*r),i.height=Math.floor(t*r),this.setViewport(0,0,e,t)},this.getCurrentViewport=function(e){return void 0===e&&(console.warn("WebGLRenderer: .getCurrentViewport() now requires a Vector4 as an argument"),e=new lr),e.copy(v)},this.getViewport=function(e){return e.copy(C)},this.setViewport=function(e,t,r,n){e.isVector4?C.set(e.x,e.y,e.z,e.w):C.set(e,t,r,n),q.viewport(v.copy(C).multiplyScalar(A).floor())},this.getScissor=function(e){return e.copy(P)},this.setScissor=function(e,t,r,n){e.isVector4?P.set(e.x,e.y,e.z,e.w):P.set(e,t,r,n),q.scissor(y.copy(P).multiplyScalar(A).floor())},this.getScissorTest=function(){return I},this.setScissorTest=function(e){q.setScissorTest(I=e)},this.setOpaqueSort=function(e){R=e},this.setTransparentSort=function(e){L=e},this.getClearColor=function(e){return void 0===e&&(console.warn("WebGLRenderer: .getClearColor() now requires a Color as an argument"),e=new Hn),e.copy(oe.getClearColor())},this.setClearColor=function(){oe.setClearColor.apply(oe,arguments)},this.getClearAlpha=function(){return oe.getClearAlpha()},this.setClearAlpha=function(){oe.setClearAlpha.apply(oe,arguments)},this.clear=function(e,t,r){let n=0;void 0!==e&&!e||(n|=V.COLOR_BUFFER_BIT),void 0!==t&&!t||(n|=V.DEPTH_BUFFER_BIT),void 0!==r&&!r||(n|=V.STENCIL_BUFFER_BIT),V.clear(n)},this.clearColor=function(){this.clear(!0,!1,!1)},this.clearDepth=function(){this.clear(!1,!0,!1)},this.clearStencil=function(){this.clear(!1,!1,!0)},this.dispose=function(){i.removeEventListener("webglcontextlost",fe,!1),i.removeEventListener("webglcontextrestored",ge,!1),ne.dispose(),ie.dispose(),Z.dispose(),K.dispose(),ee.dispose(),de.dispose(),me.dispose(),me.removeEventListener("sessionstart",xe),me.removeEventListener("sessionend",_e),U&&(U.dispose(),U=null),Me.stop()},this.renderBufferImmediate=function(e,t){de.initAttributes();const r=Z.get(e);e.hasPositions&&!r.position&&(r.position=V.createBuffer()),e.hasNormals&&!r.normal&&(r.normal=V.createBuffer()),e.hasUvs&&!r.uv&&(r.uv=V.createBuffer()),e.hasColors&&!r.color&&(r.color=V.createBuffer());t=t.getAttributes();e.hasPositions&&(V.bindBuffer(V.ARRAY_BUFFER,r.position),V.bufferData(V.ARRAY_BUFFER,e.positionArray,V.DYNAMIC_DRAW),de.enableAttribute(t.position),V.vertexAttribPointer(t.position,3,V.FLOAT,!1,0,0)),e.hasNormals&&(V.bindBuffer(V.ARRAY_BUFFER,r.normal),V.bufferData(V.ARRAY_BUFFER,e.normalArray,V.DYNAMIC_DRAW),de.enableAttribute(t.normal),V.vertexAttribPointer(t.normal,3,V.FLOAT,!1,0,0)),e.hasUvs&&(V.bindBuffer(V.ARRAY_BUFFER,r.uv),V.bufferData(V.ARRAY_BUFFER,e.uvArray,V.DYNAMIC_DRAW),de.enableAttribute(t.uv),V.vertexAttribPointer(t.uv,2,V.FLOAT,!1,0,0)),e.hasColors&&(V.bindBuffer(V.ARRAY_BUFFER,r.color),V.bufferData(V.ARRAY_BUFFER,e.colorArray,V.DYNAMIC_DRAW),de.enableAttribute(t.color),V.vertexAttribPointer(t.color,3,V.FLOAT,!1,0,0)),de.disableUnusedAttributes(),V.drawArrays(V.TRIANGLES,0,e.count),e.count=0},this.renderBufferDirect=function(e,t,r,n,i,a){null===t&&(t=H);var s=i.isMesh&&i.matrixWorld.determinant()<0,o=Se(e,t,n,i);q.setMaterial(n,s);let l=r.index;e=r.attributes.position;if(null===l){if(void 0===e||0===e.count)return}else if(0===l.count)return;let h=1;!0===n.wireframe&&(l=$.getWireframeAttribute(r),h=2),(n.morphTargets||n.morphNormals)&&le.update(i,r,n,o),de.setup(i,n,o,r,l);let c=he;null!==l&&(u=Q.get(l),c=ce,c.setIndex(u));var t=(null!==l?l:e).count,s=r.drawRange.start*h,o=r.drawRange.count*h,u=null!==a?a.start*h:0,e=null!==a?a.count*h:1/0,a=Math.max(s,u),e=Math.min(t,s+o,u+e)-1,e=Math.max(0,e-a+1);if(0!==e){if(i.isMesh)!0===n.wireframe?(q.setLineWidth(n.wireframeLinewidth*G()),c.setMode(V.LINES)):c.setMode(V.TRIANGLES);else if(i.isLine){let e=n.linewidth;void 0===e&&(e=1),q.setLineWidth(e*G()),i.isLineSegments?c.setMode(V.LINES):i.isLineLoop?c.setMode(V.LINE_LOOP):c.setMode(V.LINE_STRIP)}else i.isPoints?c.setMode(V.POINTS):i.isSprite&&c.setMode(V.TRIANGLES);i.isInstancedMesh?c.renderInstances(a,e,i.count):r.isInstancedBufferGeometry?(r=Math.min(r.instanceCount,r._maxInstanceCount),c.renderInstances(a,e,r)):c.render(a,e)}},this.compile=function(n,t){_=ie.get(n),_.init(),n.traverseVisible(function(e){e.isLight&&e.layers.test(t.layers)&&(_.pushLight(e),e.castShadow&&_.pushShadow(e))}),_.setupLights(),n.traverse(function(t){var r=t.material;if(r)if(Array.isArray(r))for(let e=0;e<r.length;e++)Ee(r[e],n,t);else Ee(r,n,t)})};let ye=null;function xe(){Me.stop()}function _e(){Me.start()}const Me=new Wi;function we(r,n,i){var a=!0===n.isScene?n.overrideMaterial:null;for(let e=0,t=r.length;e<t;e++){var s=r[e];const d=s.object;var o=s.geometry,l=null===a?s.material:a,h=s.group;if(i.isArrayCamera){var c=i.cameras;for(let e=0,t=c.length;e<t;e++){var u=c[e];d.layers.test(u.layers)&&(q.viewport(v.copy(u.viewport)),_.setupLightsView(u),be(d,n,u,o,l,h))}}else be(d,n,i,o,l,h)}}function be(e,t,r,n,i,a){var s,o;e.onBeforeRender(M,t,r,n,i,a),e.modelViewMatrix.multiplyMatrices(r.matrixWorldInverse,e.matrixWorld),e.normalMatrix.getNormalMatrix(e.modelViewMatrix),e.isImmediateRenderObject?(s=Se(r,t,i,e),q.setMaterial(i),de.reset(),o=s,e.render(function(e){M.renderBufferImmediate(e,o)})):M.renderBufferDirect(r,t,n,i,e,a),e.onAfterRender(M,t,r,n,i,a)}function Ee(e,t,r){!0!==t.isScene&&(t=H);const n=Z.get(e);var i=_.state.lights,a=_.state.shadowsArray,s=i.state.version;const o=te.getParameters(e,i.state,a,t,r);r=te.getProgramCacheKey(o);let l=n.programs;n.environment=e.isMeshStandardMaterial?t.environment:null,n.fog=t.fog,n.envMap=K.get(e.envMap||n.environment),void 0===l&&(e.addEventListener("dispose",ve),l=new Map,n.programs=l);let h=l.get(r);if(void 0!==h){if(n.currentProgram===h&&n.lightsStateVersion===s)return Te(e,o),h}else o.uniforms=te.getUniforms(e),e.onBuild(o,M),e.onBeforeCompile(o,M),h=te.acquireProgram(o,r),l.set(r,h),n.uniforms=o.uniforms;const c=n.uniforms;(e.isShaderMaterial||e.isRawShaderMaterial)&&!0!==e.clipping||(c.clippingPlanes=ae.uniform),Te(e,o),n.needsLights=(e=e).isMeshLambertMaterial||e.isMeshToonMaterial||e.isMeshPhongMaterial||e.isMeshStandardMaterial||e.isShadowMaterial||e.isShaderMaterial&&!0===e.lights,n.lightsStateVersion=s,n.needsLights&&(c.ambientLightColor.value=i.state.ambient,c.lightProbe.value=i.state.probe,c.directionalLights.value=i.state.directional,c.directionalLightShadows.value=i.state.directionalShadow,c.spotLights.value=i.state.spot,c.spotLightShadows.value=i.state.spotShadow,c.rectAreaLights.value=i.state.rectArea,c.ltc_1.value=i.state.rectAreaLTC1,c.ltc_2.value=i.state.rectAreaLTC2,c.pointLights.value=i.state.point,c.pointLightShadows.value=i.state.pointShadow,c.hemisphereLights.value=i.state.hemi,c.directionalShadowMap.value=i.state.directionalShadowMap,c.directionalShadowMatrix.value=i.state.directionalShadowMatrix,c.spotShadowMap.value=i.state.spotShadowMap,c.spotShadowMatrix.value=i.state.spotShadowMatrix,c.pointShadowMap.value=i.state.pointShadowMap,c.pointShadowMatrix.value=i.state.pointShadowMatrix);i=h.getUniforms(),i=ds.seqWithValue(i.seq,c);return n.currentProgram=h,n.uniformsList=i,h}function Te(e,t){const r=Z.get(e);r.outputEncoding=t.outputEncoding,r.instancing=t.instancing,r.skinning=t.skinning,r.numClippingPlanes=t.numClippingPlanes,r.numIntersection=t.numClipIntersection,r.vertexAlphas=t.vertexAlphas}function Se(e,t,r,n){!0!==t.isScene&&(t=H),J.resetTextureUnits();var i=t.fog,a=r.isMeshStandardMaterial?t.environment:null,s=null===w?M.outputEncoding:w.texture.encoding,o=K.get(r.envMap||a),l=!0===r.vertexColors&&n.geometry&&n.geometry.attributes.color&&4===n.geometry.attributes.color.itemSize;const h=Z.get(r);var c=_.state.lights;!0===F&&(!0!==B&&e===E||(a=e===E&&r.id===b,ae.setState(r,e,a)));let u=!1;r.version===h.__version?(h.needsLights&&h.lightsStateVersion!==c.state.version||h.outputEncoding!==s||n.isInstancedMesh&&!1===h.instancing||!n.isInstancedMesh&&!0===h.instancing||n.isSkinnedMesh&&!1===h.skinning||!n.isSkinnedMesh&&!0===h.skinning||h.envMap!==o||r.fog&&h.fog!==i||void 0!==h.numClippingPlanes&&(h.numClippingPlanes!==ae.numPlanes||h.numIntersection!==ae.numIntersection)||h.vertexAlphas!==l)&&(u=!0):(u=!0,h.__version=r.version);let d=h.currentProgram;!0===u&&(d=Ee(r,t,n));let p=!1,m=!1,f=!1;const g=d.getUniforms(),v=h.uniforms;if(q.useProgram(d.program)&&(p=!0,m=!0,f=!0),r.id!==b&&(b=r.id,m=!0),p||E!==e){if(g.setValue(V,"projectionMatrix",e.projectionMatrix),X.logarithmicDepthBuffer&&g.setValue(V,"logDepthBufFC",2/(Math.log(e.far+1)/Math.LN2)),E!==e&&(E=e,m=!0,f=!0),r.isShaderMaterial||r.isMeshPhongMaterial||r.isMeshToonMaterial||r.isMeshStandardMaterial||r.envMap){const y=g.map.cameraPosition;void 0!==y&&y.setValue(V,z.setFromMatrixPosition(e.matrixWorld))}(r.isMeshPhongMaterial||r.isMeshToonMaterial||r.isMeshLambertMaterial||r.isMeshBasicMaterial||r.isMeshStandardMaterial||r.isShaderMaterial)&&g.setValue(V,"isOrthographic",!0===e.isOrthographicCamera),(r.isMeshPhongMaterial||r.isMeshToonMaterial||r.isMeshLambertMaterial||r.isMeshBasicMaterial||r.isMeshStandardMaterial||r.isShaderMaterial||r.isShadowMaterial||n.isSkinnedMesh)&&g.setValue(V,"viewMatrix",e.matrixWorldInverse)}if(n.isSkinnedMesh){g.setOptional(V,n,"bindMatrix"),g.setOptional(V,n,"bindMatrixInverse");const x=n.skeleton;x&&(X.floatVertexTextures?(null===x.boneTexture&&x.computeBoneTexture(),g.setValue(V,"boneTexture",x.boneTexture,J),g.setValue(V,"boneTextureSize",x.boneTextureSize)):g.setOptional(V,x,"boneMatrices"))}return!m&&h.receiveShadow===n.receiveShadow||(h.receiveShadow=n.receiveShadow,g.setValue(V,"receiveShadow",n.receiveShadow)),m&&(g.setValue(V,"toneMappingExposure",M.toneMappingExposure),h.needsLights&&(t=v,e=f,t.ambientLightColor.needsUpdate=e,t.lightProbe.needsUpdate=e,t.directionalLights.needsUpdate=e,t.directionalLightShadows.needsUpdate=e,t.pointLights.needsUpdate=e,t.pointLightShadows.needsUpdate=e,t.spotLights.needsUpdate=e,t.spotLightShadows.needsUpdate=e,t.rectAreaLights.needsUpdate=e,t.hemisphereLights.needsUpdate=e),i&&r.fog&&re.refreshFogUniforms(v,i),re.refreshMaterialUniforms(v,r,A,S,U),ds.upload(V,h.uniformsList,v,J)),r.isShaderMaterial&&!0===r.uniformsNeedUpdate&&(ds.upload(V,h.uniformsList,v,J),r.uniformsNeedUpdate=!1),r.isSpriteMaterial&&g.setValue(V,"center",n.center),g.setValue(V,"modelViewMatrix",n.modelViewMatrix),g.setValue(V,"normalMatrix",n.normalMatrix),g.setValue(V,"modelMatrix",n.matrixWorld),d}Me.setAnimationLoop(function(e){ye&&ye(e)}),"undefined"!=typeof window&&Me.setContext(window),this.setAnimationLoop=function(e){ye=e,me.setAnimationLoop(e),null===e?Me.stop():Me.start()},me.addEventListener("sessionstart",xe),me.addEventListener("sessionend",_e),this.render=function(e,t){var r,n,i;void 0===t||!0===t.isCamera?!0!==p&&(!0===e.autoUpdate&&e.updateMatrixWorld(),null===t.parent&&t.updateMatrixWorld(),!0===me.enabled&&!0===me.isPresenting&&(!0===me.cameraAutoUpdate&&me.updateCamera(t),t=me.getCamera()),!0===e.isScene&&e.onBeforeRender(M,e,t,w),_=ie.get(e,d.length),_.init(),d.push(_),O.multiplyMatrices(t.projectionMatrix,t.matrixWorldInverse),N.setFromProjectionMatrix(O),B=this.localClippingEnabled,F=ae.init(this.clippingPlanes,B,t),m=ne.get(e,u.length),m.init(),u.push(m),function r(n,i,a,s){if(!1===n.visible)return;const e=n.layers.test(i.layers);if(e)if(n.isGroup)a=n.renderOrder;else if(n.isLOD)!0===n.autoUpdate&&n.update(i);else if(n.isLight)_.pushLight(n),n.castShadow&&_.pushShadow(n);else if(n.isSprite){if(!n.frustumCulled||N.intersectsSprite(n)){s&&z.setFromMatrixPosition(n.matrixWorld).applyMatrix4(O);const t=ee.update(n),l=n.material;l.visible&&m.push(n,t,l,a,z.z,null)}}else if(n.isImmediateRenderObject)s&&z.setFromMatrixPosition(n.matrixWorld).applyMatrix4(O),m.push(n,null,n.material,a,z.z,null);else if((n.isMesh||n.isLine||n.isPoints)&&(n.isSkinnedMesh&&n.skeleton.frame!==Y.render.frame&&(n.skeleton.update(),n.skeleton.frame=Y.render.frame),!n.frustumCulled||N.intersectsObject(n))){s&&z.setFromMatrixPosition(n.matrixWorld).applyMatrix4(O);const h=ee.update(n),c=n.material;if(Array.isArray(c)){const u=h.groups;for(let e=0,t=u.length;e<t;e++){const d=u[e],p=c[d.materialIndex];p&&p.visible&&m.push(n,h,p,a,z.z,d)}}else c.visible&&m.push(n,h,c,a,z.z,null)}const o=n.children;for(let e=0,t=o.length;e<t;e++)r(o[e],i,a,s)}(e,t,0,M.sortObjects),m.finish(),!0===M.sortObjects&&m.sort(R,L),!0===F&&ae.beginShadows(),i=_.state.shadowsArray,se.render(i,e,t),_.setupLights(),_.setupLightsView(t),!0===F&&ae.endShadows(),!0===this.info.autoReset&&this.info.reset(),oe.render(m,e),r=m.opaque,n=m.transmissive,i=m.transparent,0<r.length&&we(r,e,t),0<n.length&&function(e,t,r,n){null===U&&(U=new hr(1024,1024,{generateMipmaps:!0,minFilter:Pe,magFilter:Ce,wrapS:Le,wrapT:Le}));var i=M.getRenderTarget();M.setRenderTarget(U),M.clear(),we(e,r,n),J.updateRenderTargetMipmap(U),M.setRenderTarget(i),we(t,r,n)}(r,n,e,t),0<i.length&&we(i,e,t),null!==w&&(J.updateRenderTargetMipmap(w),J.updateMultisampleRenderTarget(w)),!0===e.isScene&&e.onAfterRender(M,e,t),q.buffers.depth.setTest(!0),q.buffers.depth.setMask(!0),q.buffers.color.setMask(!0),q.setPolygonOffset(!1),de.resetDefaultState(),b=-1,E=null,d.pop(),_=0<d.length?d[d.length-1]:null,u.pop(),m=0<u.length?u[u.length-1]:null):console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.")},this.getActiveCubeFace=function(){return f},this.getActiveMipmapLevel=function(){return g},this.getRenderTarget=function(){return w},this.setRenderTarget=function(t,e=0,r=0){w=t,f=e,g=r,t&&void 0===Z.get(t).__webglFramebuffer&&J.setupRenderTarget(t);let n=null,i=!1,a=!1;var s;if(x=t?(((s=t.texture).isDataTexture3D||s.isDataTexture2DArray)&&(a=!0),s=Z.get(t).__webglFramebuffer,t.isWebGLCubeRenderTarget?(n=s[e],i=!0):n=t.isWebGLMultisampleRenderTarget?Z.get(t).__webglMultisampledFramebuffer:s,v.copy(t.viewport),y.copy(t.scissor),t.scissorTest):(v.copy(C).multiplyScalar(A).floor(),y.copy(P).multiplyScalar(A).floor(),I),q.bindFramebuffer(V.FRAMEBUFFER,n)&&X.drawBuffers){let e=!1;if(t)if(t.isWebGLMultipleRenderTargets){const J=t.texture;if(D.length!==J.length||D[0]!==V.COLOR_ATTACHMENT0){for(let e=0,t=J.length;e<t;e++)D[e]=V.COLOR_ATTACHMENT0+e;D.length=J.length,e=!0}}else 1===D.length&&D[0]===V.COLOR_ATTACHMENT0||(D[0]=V.COLOR_ATTACHMENT0,D.length=1,e=!0);else 1===D.length&&D[0]===V.BACK||(D[0]=V.BACK,D.length=1,e=!0);e&&(X.isWebGL2?V.drawBuffers(D):j.get("WEBGL_draw_buffers").drawBuffersWEBGL(D))}q.viewport(v),q.scissor(y),q.setScissorTest(x),i?(s=Z.get(t.texture),V.framebufferTexture2D(V.FRAMEBUFFER,V.COLOR_ATTACHMENT0,V.TEXTURE_CUBE_MAP_POSITIVE_X+e,s.__webglTexture,r)):a&&(t=Z.get(t.texture),e=e||0,V.framebufferTextureLayer(V.FRAMEBUFFER,V.COLOR_ATTACHMENT0,t.__webglTexture,r||0,e))},this.readRenderTargetPixels=function(t,r,n,i,a,s,o){if(t&&t.isWebGLRenderTarget){let e=Z.get(t).__webglFramebuffer;if(t.isWebGLCubeRenderTarget&&void 0!==o&&(e=e[o]),e){q.bindFramebuffer(V.FRAMEBUFFER,e);try{var l=t.texture,h=l.format,c=l.type;if(h!==Ue&&ue.convert(h)!==V.getParameter(V.IMPLEMENTATION_COLOR_READ_FORMAT))return void console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.");var u=c===Ne&&(j.has("EXT_color_buffer_half_float")||X.isWebGL2&&j.has("EXT_color_buffer_float"));if(!(c===Ie||ue.convert(c)===V.getParameter(V.IMPLEMENTATION_COLOR_READ_TYPE)||c===De&&(X.isWebGL2||j.has("OES_texture_float")||j.has("WEBGL_color_buffer_float"))||u))return void console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.");V.checkFramebufferStatus(V.FRAMEBUFFER)===V.FRAMEBUFFER_COMPLETE?0<=r&&r<=t.width-i&&0<=n&&n<=t.height-a&&V.readPixels(r,n,i,a,ue.convert(h),ue.convert(c),s):console.error("THREE.WebGLRenderer.readRenderTargetPixels: readPixels from renderTarget failed. Framebuffer not complete.")}finally{const e=null!==w?Z.get(w).__webglFramebuffer:null;q.bindFramebuffer(V.FRAMEBUFFER,e)}}}else console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.")},this.copyFramebufferToTexture=function(e,t,r=0){var n=Math.pow(2,-r),i=Math.floor(t.image.width*n),n=Math.floor(t.image.height*n);let a=ue.convert(t.format);X.isWebGL2&&(a===V.RGB&&(a=V.RGB8),a===V.RGBA&&(a=V.RGBA8)),J.setTexture2D(t,0),V.copyTexImage2D(V.TEXTURE_2D,r,a,e.x,e.y,i,n,0),q.unbindTexture()},this.copyTextureToTexture=function(e,t,r,n=0){var i=t.image.width,a=t.image.height,s=ue.convert(r.format),o=ue.convert(r.type);J.setTexture2D(r,0),V.pixelStorei(V.UNPACK_FLIP_Y_WEBGL,r.flipY),V.pixelStorei(V.UNPACK_PREMULTIPLY_ALPHA_WEBGL,r.premultiplyAlpha),V.pixelStorei(V.UNPACK_ALIGNMENT,r.unpackAlignment),t.isDataTexture?V.texSubImage2D(V.TEXTURE_2D,n,e.x,e.y,i,a,s,o,t.image.data):t.isCompressedTexture?V.compressedTexSubImage2D(V.TEXTURE_2D,n,e.x,e.y,t.mipmaps[0].width,t.mipmaps[0].height,s,t.mipmaps[0].data):V.texSubImage2D(V.TEXTURE_2D,n,e.x,e.y,s,o,t.image),0===n&&r.generateMipmaps&&V.generateMipmap(V.TEXTURE_2D),q.unbindTexture()},this.copyTextureToTexture3D=function(t,r,n,i,a=0){if(M.isWebGL1Renderer)console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: can only be used with WebGL2.");else{var{width:s,height:o,data:l}=n.image,h=ue.convert(i.format),c=ue.convert(i.type);let e;if(i.isDataTexture3D)J.setTexture3D(i,0),e=V.TEXTURE_3D;else{if(!i.isDataTexture2DArray)return void console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: only supports THREE.DataTexture3D and THREE.DataTexture2DArray.");J.setTexture2DArray(i,0),e=V.TEXTURE_2D_ARRAY}V.pixelStorei(V.UNPACK_FLIP_Y_WEBGL,i.flipY),V.pixelStorei(V.UNPACK_PREMULTIPLY_ALPHA_WEBGL,i.premultiplyAlpha),V.pixelStorei(V.UNPACK_ALIGNMENT,i.unpackAlignment);var u=V.getParameter(V.UNPACK_ROW_LENGTH),d=V.getParameter(V.UNPACK_IMAGE_HEIGHT),p=V.getParameter(V.UNPACK_SKIP_PIXELS),m=V.getParameter(V.UNPACK_SKIP_ROWS),n=V.getParameter(V.UNPACK_SKIP_IMAGES);V.pixelStorei(V.UNPACK_ROW_LENGTH,s),V.pixelStorei(V.UNPACK_IMAGE_HEIGHT,o),V.pixelStorei(V.UNPACK_SKIP_PIXELS,t.min.x),V.pixelStorei(V.UNPACK_SKIP_ROWS,t.min.y),V.pixelStorei(V.UNPACK_SKIP_IMAGES,t.min.z),V.texSubImage3D(e,a,r.x,r.y,r.z,t.max.x-t.min.x+1,t.max.y-t.min.y+1,t.max.z-t.min.z+1,h,c,l),V.pixelStorei(V.UNPACK_ROW_LENGTH,u),V.pixelStorei(V.UNPACK_IMAGE_HEIGHT,d),V.pixelStorei(V.UNPACK_SKIP_PIXELS,p),V.pixelStorei(V.UNPACK_SKIP_ROWS,m),V.pixelStorei(V.UNPACK_SKIP_IMAGES,n),0===a&&i.generateMipmaps&&V.generateMipmap(e),q.unbindTexture()}},this.initTexture=function(e){J.setTexture2D(e,0),q.unbindTexture()},this.resetState=function(){f=0,g=0,w=null,q.reset(),de.reset()},"undefined"!=typeof __THREE_DEVTOOLS__&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}class io extends no{}class ao{constructor(e,t=25e-5){this.name="",this.color=new Hn(e),this.density=t}clone(){return new ao(this.color,this.density)}toJSON(){return{type:"FogExp2",color:this.color.getHex(),density:this.density}}}ao.prototype.isFogExp2=io.prototype.isWebGL1Renderer=!0;class so{constructor(e,t=1,r=1e3){this.name="",this.color=new Hn(e),this.near=t,this.far=r}clone(){return new so(this.color,this.near,this.far)}toJSON(){return{type:"Fog",color:this.color.getHex(),near:this.near,far:this.far}}}so.prototype.isFog=!0;class oo extends gn{constructor(){super(),this.type="Scene",this.background=null,this.environment=null,this.fog=null,this.overrideMaterial=null,this.autoUpdate=!0,"undefined"!=typeof __THREE_DEVTOOLS__&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}copy(e,t){return super.copy(e,t),null!==e.background&&(this.background=e.background.clone()),null!==e.environment&&(this.environment=e.environment.clone()),null!==e.fog&&(this.fog=e.fog.clone()),null!==e.overrideMaterial&&(this.overrideMaterial=e.overrideMaterial.clone()),this.autoUpdate=e.autoUpdate,this.matrixAutoUpdate=e.matrixAutoUpdate,this}toJSON(e){const t=super.toJSON(e);return null!==this.background&&(t.object.background=this.background.toJSON(e)),null!==this.environment&&(t.object.environment=this.environment.toJSON(e)),null!==this.fog&&(t.object.fog=this.fog.toJSON()),t}}oo.prototype.isScene=!0;class lo{constructor(e,t){this.array=e,this.stride=t,this.count=void 0!==e?e.length/t:0,this.usage=zt,this.updateRange={offset:0,count:-1},this.version=0,this.uuid=qt()}onUploadCallback(){}set needsUpdate(e){!0===e&&this.version++}setUsage(e){return this.usage=e,this}copy(e){return this.array=new e.array.constructor(e.array),this.count=e.count,this.stride=e.stride,this.usage=e.usage,this}copyAt(r,n,i){r*=this.stride,i*=n.stride;for(let e=0,t=this.stride;e<t;e++)this.array[r+e]=n.array[i+e];return this}set(e,t=0){return this.array.set(e,t),this}clone(e){void 0===e.arrayBuffers&&(e.arrayBuffers={}),void 0===this.array.buffer._uuid&&(this.array.buffer._uuid=qt()),void 0===e.arrayBuffers[this.array.buffer._uuid]&&(e.arrayBuffers[this.array.buffer._uuid]=this.array.slice(0).buffer);e=new this.array.constructor(e.arrayBuffers[this.array.buffer._uuid]);const t=new this.constructor(e,this.stride);return t.setUsage(this.usage),t}onUpload(e){return this.onUploadCallback=e,this}toJSON(e){return void 0===e.arrayBuffers&&(e.arrayBuffers={}),void 0===this.array.buffer._uuid&&(this.array.buffer._uuid=qt()),void 0===e.arrayBuffers[this.array.buffer._uuid]&&(e.arrayBuffers[this.array.buffer._uuid]=Array.prototype.slice.call(new Uint32Array(this.array.buffer))),{uuid:this.uuid,buffer:this.array.buffer._uuid,type:this.array.constructor.name,stride:this.stride}}}lo.prototype.isInterleavedBuffer=!0;const ho=new pr;class co{constructor(e,t,r,n){this.name="",this.data=e,this.itemSize=t,this.offset=r,this.normalized=!0===n}get count(){return this.data.count}get array(){return this.data.array}set needsUpdate(e){this.data.needsUpdate=e}applyMatrix4(r){for(let e=0,t=this.data.count;e<t;e++)ho.x=this.getX(e),ho.y=this.getY(e),ho.z=this.getZ(e),ho.applyMatrix4(r),this.setXYZ(e,ho.x,ho.y,ho.z);return this}applyNormalMatrix(r){for(let e=0,t=this.count;e<t;e++)ho.x=this.getX(e),ho.y=this.getY(e),ho.z=this.getZ(e),ho.applyNormalMatrix(r),this.setXYZ(e,ho.x,ho.y,ho.z);return this}transformDirection(r){for(let e=0,t=this.count;e<t;e++)ho.x=this.getX(e),ho.y=this.getY(e),ho.z=this.getZ(e),ho.transformDirection(r),this.setXYZ(e,ho.x,ho.y,ho.z);return this}setX(e,t){return this.data.array[e*this.data.stride+this.offset]=t,this}setY(e,t){return this.data.array[e*this.data.stride+this.offset+1]=t,this}setZ(e,t){return this.data.array[e*this.data.stride+this.offset+2]=t,this}setW(e,t){return this.data.array[e*this.data.stride+this.offset+3]=t,this}getX(e){return this.data.array[e*this.data.stride+this.offset]}getY(e){return this.data.array[e*this.data.stride+this.offset+1]}getZ(e){return this.data.array[e*this.data.stride+this.offset+2]}getW(e){return this.data.array[e*this.data.stride+this.offset+3]}setXY(e,t,r){return e=e*this.data.stride+this.offset,this.data.array[e+0]=t,this.data.array[e+1]=r,this}setXYZ(e,t,r,n){return e=e*this.data.stride+this.offset,this.data.array[e+0]=t,this.data.array[e+1]=r,this.data.array[e+2]=n,this}setXYZW(e,t,r,n,i){return e=e*this.data.stride+this.offset,this.data.array[e+0]=t,this.data.array[e+1]=r,this.data.array[e+2]=n,this.data.array[e+3]=i,this}clone(e){if(void 0!==e)return void 0===e.interleavedBuffers&&(e.interleavedBuffers={}),void 0===e.interleavedBuffers[this.data.uuid]&&(e.interleavedBuffers[this.data.uuid]=this.data.clone(e)),new co(e.interleavedBuffers[this.data.uuid],this.itemSize,this.offset,this.normalized);{console.log("THREE.InterleavedBufferAttribute.clone(): Cloning an interlaved buffer attribute will deinterleave buffer data.");const r=[];for(let e=0;e<this.count;e++){var t=e*this.data.stride+this.offset;for(let e=0;e<this.itemSize;e++)r.push(this.data.array[t+e])}return new Wn(new this.array.constructor(r),this.itemSize,this.normalized)}}toJSON(e){if(void 0!==e)return void 0===e.interleavedBuffers&&(e.interleavedBuffers={}),void 0===e.interleavedBuffers[this.data.uuid]&&(e.interleavedBuffers[this.data.uuid]=this.data.toJSON(e)),{isInterleavedBufferAttribute:!0,itemSize:this.itemSize,data:this.data.uuid,offset:this.offset,normalized:this.normalized};{console.log("THREE.InterleavedBufferAttribute.toJSON(): Serializing an interlaved buffer attribute will deinterleave buffer data.");const r=[];for(let e=0;e<this.count;e++){var t=e*this.data.stride+this.offset;for(let e=0;e<this.itemSize;e++)r.push(this.data.array[t+e])}return{itemSize:this.itemSize,type:this.array.constructor.name,array:r,normalized:this.normalized}}}}co.prototype.isInterleavedBufferAttribute=!0;class uo extends Dn{constructor(e){super(),this.type="SpriteMaterial",this.color=new Hn(16777215),this.map=null,this.alphaMap=null,this.rotation=0,this.sizeAttenuation=!0,this.transparent=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.alphaMap=e.alphaMap,this.rotation=e.rotation,this.sizeAttenuation=e.sizeAttenuation,this}}uo.prototype.isSpriteMaterial=!0;let po;const mo=new pr,fo=new pr,go=new pr,vo=new tr,yo=new tr,xo=new Wr,_o=new pr,Mo=new pr,wo=new pr,bo=new tr,Eo=new tr,To=new tr;class So extends gn{constructor(e){var t;super(),this.type="Sprite",void 0===po&&(po=new ui,t=new Float32Array([-.5,-.5,0,0,0,.5,-.5,0,1,0,.5,.5,0,1,1,-.5,.5,0,0,1]),t=new lo(t,5),po.setIndex([0,1,2,0,2,3]),po.setAttribute("position",new co(t,3,0,!1)),po.setAttribute("uv",new co(t,2,3,!1))),this.geometry=po,this.material=void 0!==e?e:new uo,this.center=new tr(.5,.5)}raycast(e,t){null===e.camera&&console.error('THREE.Sprite: "Raycaster.camera" needs to be set in order to raycast against sprites.'),fo.setFromMatrixScale(this.matrixWorld),xo.copy(e.camera.matrixWorld),this.modelViewMatrix.multiplyMatrices(e.camera.matrixWorldInverse,this.matrixWorld),go.setFromMatrixPosition(this.modelViewMatrix),e.camera.isPerspectiveCamera&&!1===this.material.sizeAttenuation&&fo.multiplyScalar(-go.z);var r=this.material.rotation;let n,i;0!==r&&(i=Math.cos(r),n=Math.sin(r));r=this.center;Ao(_o.set(-.5,-.5,0),go,r,fo,n,i),Ao(Mo.set(.5,-.5,0),go,r,fo,n,i),Ao(wo.set(.5,.5,0),go,r,fo,n,i),bo.set(0,0),Eo.set(1,0),To.set(1,1),null===e.ray.intersectTriangle(_o,Mo,wo,!1,mo)&&(Ao(Mo.set(-.5,.5,0),go,r,fo,n,i),Eo.set(0,1),null===e.ray.intersectTriangle(_o,wo,Mo,!1,mo))||((r=e.ray.origin.distanceTo(mo))<e.near||r>e.far||t.push({distance:r,point:mo.clone(),uv:Pn.getUV(mo,_o,Mo,wo,bo,Eo,To,new tr),face:null,object:this}))}copy(e){return super.copy(e),void 0!==e.center&&this.center.copy(e.center),this.material=e.material,this}}function Ao(e,t,r,n,i,a){vo.subVectors(e,r).addScalar(.5).multiply(n),void 0!==i?(yo.x=a*vo.x-i*vo.y,yo.y=i*vo.x+a*vo.y):yo.copy(vo),e.copy(t),e.x+=yo.x,e.y+=yo.y,e.applyMatrix4(xo)}So.prototype.isSprite=!0;const Ro=new pr,Lo=new pr;class Co extends gn{constructor(){super(),this._currentLevel=0,this.type="LOD",Object.defineProperties(this,{levels:{enumerable:!0,value:[]},isLOD:{value:!0}}),this.autoUpdate=!0}copy(e){super.copy(e,!1);var r=e.levels;for(let e=0,t=r.length;e<t;e++){const n=r[e];this.addLevel(n.object.clone(),n.distance)}return this.autoUpdate=e.autoUpdate,this}addLevel(e,t=0){t=Math.abs(t);const r=this.levels;let n;for(n=0;n<r.length&&!(t<r[n].distance);n++);return r.splice(n,0,{distance:t,object:e}),this.add(e),this}getCurrentLevel(){return this._currentLevel}getObjectForDistance(r){var n=this.levels;if(0<n.length){let e,t;for(e=1,t=n.length;e<t&&!(r<n[e].distance);e++);return n[e-1].object}return null}raycast(e,t){var r;0<this.levels.length&&(Ro.setFromMatrixPosition(this.matrixWorld),r=e.ray.origin.distanceTo(Ro),this.getObjectForDistance(r).raycast(e,t))}update(r){const n=this.levels;if(1<n.length){Ro.setFromMatrixPosition(r.matrixWorld),Lo.setFromMatrixPosition(this.matrixWorld);var i=Ro.distanceTo(Lo)/r.zoom;n[0].object.visible=!0;let e,t;for(e=1,t=n.length;e<t&&i>=n[e].distance;e++)n[e-1].object.visible=!1,n[e].object.visible=!0;for(this._currentLevel=e-1;e<t;e++)n[e].object.visible=!1}}toJSON(e){const r=super.toJSON(e);!1===this.autoUpdate&&(r.object.autoUpdate=!1),r.object.levels=[];var n=this.levels;for(let e=0,t=n.length;e<t;e++){var i=n[e];r.object.levels.push({object:i.object.uuid,distance:i.distance})}return r}}const Po=new pr,Io=new lr,Do=new lr,No=new pr,Fo=new Wr;class Bo extends Li{constructor(e,t){super(e,t),this.type="SkinnedMesh",this.bindMode="attached",this.bindMatrix=new Wr,this.bindMatrixInverse=new Wr}copy(e){return super.copy(e),this.bindMode=e.bindMode,this.bindMatrix.copy(e.bindMatrix),this.bindMatrixInverse.copy(e.bindMatrixInverse),this.skeleton=e.skeleton,this}bind(e,t){this.skeleton=e,void 0===t&&(this.updateMatrixWorld(!0),this.skeleton.calculateInverses(),t=this.matrixWorld),this.bindMatrix.copy(t),this.bindMatrixInverse.copy(t).invert()}pose(){this.skeleton.pose()}normalizeSkinWeights(){const r=new lr,n=this.geometry.attributes.skinWeight;for(let e=0,t=n.count;e<t;e++){r.x=n.getX(e),r.y=n.getY(e),r.z=n.getZ(e),r.w=n.getW(e);var i=1/r.manhattanLength();i!=1/0?r.multiplyScalar(i):r.set(1,0,0,0),n.setXYZW(e,r.x,r.y,r.z,r.w)}}updateMatrixWorld(e){super.updateMatrixWorld(e),"attached"===this.bindMode?this.bindMatrixInverse.copy(this.matrixWorld).invert():"detached"===this.bindMode?this.bindMatrixInverse.copy(this.bindMatrix).invert():console.warn("THREE.SkinnedMesh: Unrecognized bindMode: "+this.bindMode)}boneTransform(e,t){var r=this.skeleton,n=this.geometry;Io.fromBufferAttribute(n.attributes.skinIndex,e),Do.fromBufferAttribute(n.attributes.skinWeight,e),Po.fromBufferAttribute(n.attributes.position,e).applyMatrix4(this.bindMatrix),t.set(0,0,0);for(let e=0;e<4;e++){var i,a=Do.getComponent(e);0!==a&&(i=Io.getComponent(e),Fo.multiplyMatrices(r.bones[i].matrixWorld,r.boneInverses[i]),t.addScaledVector(No.copy(Po).applyMatrix4(Fo),a))}return t.applyMatrix4(this.bindMatrixInverse)}}Bo.prototype.isSkinnedMesh=!0;class Uo extends gn{constructor(){super(),this.type="Bone"}}Uo.prototype.isBone=!0;class Oo extends sr{constructor(e,t,r,n,i,a,s,o,l,h,c,u){super(null,a,s,o,l,h,n,i,c,u),this.image={data:e||null,width:t||1,height:r||1},this.magFilter=void 0!==l?l:Ce,this.minFilter=void 0!==h?h:Ce,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1,this.needsUpdate=!0}}Oo.prototype.isDataTexture=!0;const zo=new Wr,Ho=new Wr;class Go{constructor(e=[],t=[]){this.uuid=qt(),this.bones=e.slice(0),this.boneInverses=t,this.boneMatrices=null,this.boneTexture=null,this.boneTextureSize=0,this.frame=-1,this.init()}init(){var e=this.bones,t=this.boneInverses;if(this.boneMatrices=new Float32Array(16*e.length),0===t.length)this.calculateInverses();else if(e.length!==t.length){console.warn("THREE.Skeleton: Number of inverse bone matrices does not match amount of bones."),this.boneInverses=[];for(let e=0,t=this.bones.length;e<t;e++)this.boneInverses.push(new Wr)}}calculateInverses(){for(let e=this.boneInverses.length=0,t=this.bones.length;e<t;e++){const r=new Wr;this.bones[e]&&r.copy(this.bones[e].matrixWorld).invert(),this.boneInverses.push(r)}}pose(){for(let e=0,t=this.bones.length;e<t;e++){const r=this.bones[e];r&&r.matrixWorld.copy(this.boneInverses[e]).invert()}for(let e=0,t=this.bones.length;e<t;e++){const n=this.bones[e];n&&(n.parent&&n.parent.isBone?(n.matrix.copy(n.parent.matrixWorld).invert(),n.matrix.multiply(n.matrixWorld)):n.matrix.copy(n.matrixWorld),n.matrix.decompose(n.position,n.quaternion,n.scale))}}update(){var r=this.bones,n=this.boneInverses,i=this.boneMatrices;const e=this.boneTexture;for(let e=0,t=r.length;e<t;e++){var a=r[e]?r[e].matrixWorld:Ho;zo.multiplyMatrices(a,n[e]),zo.toArray(i,16*e)}null!==e&&(e.needsUpdate=!0)}clone(){return new Go(this.bones,this.boneInverses)}computeBoneTexture(){var e=Qt(e=Math.sqrt(4*this.bones.length));e=Math.max(e,4);const t=new Float32Array(e*e*4);t.set(this.boneMatrices);var r=new Oo(t,e,e,Ue,De);return this.boneMatrices=t,this.boneTexture=r,this.boneTextureSize=e,this}getBoneByName(r){for(let e=0,t=this.bones.length;e<t;e++){var n=this.bones[e];if(n.name===r)return n}}dispose(){null!==this.boneTexture&&(this.boneTexture.dispose(),this.boneTexture=null)}fromJSON(r,n){this.uuid=r.uuid;for(let t=0,e=r.bones.length;t<e;t++){var i=r.bones[t];let e=n[i];void 0===e&&(console.warn("THREE.Skeleton: No bone found with UUID:",i),e=new Uo),this.bones.push(e),this.boneInverses.push((new Wr).fromArray(r.boneInverses[t]))}return this.init(),this}toJSON(){const r={metadata:{version:4.5,type:"Skeleton",generator:"Skeleton.toJSON"},bones:[],boneInverses:[]};r.uuid=this.uuid;var n=this.bones,i=this.boneInverses;for(let e=0,t=n.length;e<t;e++){var a=n[e];r.bones.push(a.uuid);const s=i[e];r.boneInverses.push(s.toArray())}return r}}const Vo=new Wr,ko=new Wr,Wo=[],jo=new Li;class Xo extends Li{constructor(e,t,r){super(e,t),this.instanceMatrix=new Wn(new Float32Array(16*r),16),this.instanceColor=null,this.count=r,this.frustumCulled=!1}copy(e){return super.copy(e),this.instanceMatrix.copy(e.instanceMatrix),null!==e.instanceColor&&(this.instanceColor=e.instanceColor.clone()),this.count=e.count,this}getColorAt(e,t){t.fromArray(this.instanceColor.array,3*e)}getMatrixAt(e,t){t.fromArray(this.instanceMatrix.array,16*e)}raycast(e,n){var t=this.matrixWorld,i=this.count;if(jo.geometry=this.geometry,jo.material=this.material,void 0!==jo.material)for(let r=0;r<i;r++){this.getMatrixAt(r,Vo),ko.multiplyMatrices(t,Vo),jo.matrixWorld=ko,jo.raycast(e,Wo);for(let e=0,t=Wo.length;e<t;e++){const a=Wo[e];a.instanceId=r,a.object=this,n.push(a)}Wo.length=0}}setColorAt(e,t){null===this.instanceColor&&(this.instanceColor=new Wn(new Float32Array(3*this.count),3)),t.toArray(this.instanceColor.array,3*e)}setMatrixAt(e,t){t.toArray(this.instanceMatrix.array,16*e)}updateMorphTargets(){}dispose(){this.dispatchEvent({type:"dispose"})}}Xo.prototype.isInstancedMesh=!0;class qo extends Dn{constructor(e){super(),this.type="LineBasicMaterial",this.color=new Hn(16777215),this.linewidth=1,this.linecap="round",this.linejoin="round",this.morphTargets=!1,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.linewidth=e.linewidth,this.linecap=e.linecap,this.linejoin=e.linejoin,this.morphTargets=e.morphTargets,this}}qo.prototype.isLineBasicMaterial=!0;const Yo=new pr,Zo=new pr,Jo=new Wr,Ko=new kr,Qo=new Fr;class $o extends gn{constructor(e=new ui,t=new qo){super(),this.type="Line",this.geometry=e,this.material=t,this.updateMorphTargets()}copy(e){return super.copy(e),this.material=e.material,this.geometry=e.geometry,this}computeLineDistances(){const e=this.geometry;if(e.isBufferGeometry)if(null===e.index){var r=e.attributes.position;const n=[0];for(let e=1,t=r.count;e<t;e++)Yo.fromBufferAttribute(r,e-1),Zo.fromBufferAttribute(r,e),n[e]=n[e-1],n[e]+=Yo.distanceTo(Zo);e.setAttribute("lineDistance",new $n(n,1))}else console.warn("THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");else e.isGeometry&&console.error("THREE.Line.computeLineDistances() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.");return this}raycast(r,n){const e=this.geometry;var t=this.matrixWorld,i=r.params.Line.threshold,a=e.drawRange;if(null===e.boundingSphere&&e.computeBoundingSphere(),Qo.copy(e.boundingSphere),Qo.applyMatrix4(t),Qo.radius+=i,!1!==r.ray.intersectsSphere(Qo)){Jo.copy(t).invert(),Ko.copy(r.ray).applyMatrix4(Jo);var i=i/((this.scale.x+this.scale.y+this.scale.z)/3),s=i*i;const d=new pr,p=new pr,m=new pr,f=new pr;var o=this.isLineSegments?2:1;if(e.isBufferGeometry){const g=e.index;var l,h=e.attributes.position;if(null!==g)for(let e=Math.max(0,a.start),t=Math.min(g.count,a.start+a.count)-1;e<t;e+=o){var c=g.getX(e),u=g.getX(e+1);d.fromBufferAttribute(h,c),p.fromBufferAttribute(h,u),s<Ko.distanceSqToSegment(d,p,f,m)||(f.applyMatrix4(this.matrixWorld),(u=r.ray.origin.distanceTo(f))<r.near||u>r.far||n.push({distance:u,point:m.clone().applyMatrix4(this.matrixWorld),index:e,face:null,faceIndex:null,object:this}))}else for(let e=Math.max(0,a.start),t=Math.min(h.count,a.start+a.count)-1;e<t;e+=o)d.fromBufferAttribute(h,e),p.fromBufferAttribute(h,e+1),s<Ko.distanceSqToSegment(d,p,f,m)||(f.applyMatrix4(this.matrixWorld),(l=r.ray.origin.distanceTo(f))<r.near||l>r.far||n.push({distance:l,point:m.clone().applyMatrix4(this.matrixWorld),index:e,face:null,faceIndex:null,object:this}))}else e.isGeometry&&console.error("THREE.Line.raycast() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.")}}updateMorphTargets(){var e=this.geometry;if(e.isBufferGeometry){var t=e.morphAttributes,r=Object.keys(t);if(0<r.length){var n=t[r[0]];if(void 0!==n){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let e=0,t=n.length;e<t;e++){var i=n[e].name||String(e);this.morphTargetInfluences.push(0),this.morphTargetDictionary[i]=e}}}}else{e=e.morphTargets;void 0!==e&&0<e.length&&console.error("THREE.Line.updateMorphTargets() does not support THREE.Geometry. Use THREE.BufferGeometry instead.")}}}$o.prototype.isLine=!0;const el=new pr,tl=new pr;class rl extends $o{constructor(e,t){super(e,t),this.type="LineSegments"}computeLineDistances(){const e=this.geometry;if(e.isBufferGeometry)if(null===e.index){var r=e.attributes.position;const n=[];for(let e=0,t=r.count;e<t;e+=2)el.fromBufferAttribute(r,e),tl.fromBufferAttribute(r,e+1),n[e]=0===e?0:n[e-1],n[e+1]=n[e]+el.distanceTo(tl);e.setAttribute("lineDistance",new $n(n,1))}else console.warn("THREE.LineSegments.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");else e.isGeometry&&console.error("THREE.LineSegments.computeLineDistances() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.");return this}}rl.prototype.isLineSegments=!0;class nl extends $o{constructor(e,t){super(e,t),this.type="LineLoop"}}nl.prototype.isLineLoop=!0;class il extends Dn{constructor(e){super(),this.type="PointsMaterial",this.color=new Hn(16777215),this.map=null,this.alphaMap=null,this.size=1,this.sizeAttenuation=!0,this.morphTargets=!1,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.alphaMap=e.alphaMap,this.size=e.size,this.sizeAttenuation=e.sizeAttenuation,this.morphTargets=e.morphTargets,this}}il.prototype.isPointsMaterial=!0;const al=new Wr,sl=new kr,ol=new Fr,ll=new pr;class hl extends gn{constructor(e=new ui,t=new il){super(),this.type="Points",this.geometry=e,this.material=t,this.updateMorphTargets()}copy(e){return super.copy(e),this.material=e.material,this.geometry=e.geometry,this}raycast(r,n){const e=this.geometry;var i=this.matrixWorld,t=r.params.Points.threshold,a=e.drawRange;if(null===e.boundingSphere&&e.computeBoundingSphere(),ol.copy(e.boundingSphere),ol.applyMatrix4(i),ol.radius+=t,!1!==r.ray.intersectsSphere(ol)){al.copy(i).invert(),sl.copy(r.ray).applyMatrix4(al);var t=t/((this.scale.x+this.scale.y+this.scale.z)/3),s=t*t;if(e.isBufferGeometry){const h=e.index;var o=e.attributes.position;if(null!==h)for(let e=Math.max(0,a.start),t=Math.min(h.count,a.start+a.count);e<t;e++){var l=h.getX(e);ll.fromBufferAttribute(o,l),cl(ll,l,s,i,r,n,this)}else for(let e=Math.max(0,a.start),t=Math.min(o.count,a.start+a.count);e<t;e++)ll.fromBufferAttribute(o,e),cl(ll,e,s,i,r,n,this)}else console.error("THREE.Points.raycast() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.")}}updateMorphTargets(){var e=this.geometry;if(e.isBufferGeometry){var t=e.morphAttributes,r=Object.keys(t);if(0<r.length){var n=t[r[0]];if(void 0!==n){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let e=0,t=n.length;e<t;e++){var i=n[e].name||String(e);this.morphTargetInfluences.push(0),this.morphTargetDictionary[i]=e}}}}else{e=e.morphTargets;void 0!==e&&0<e.length&&console.error("THREE.Points.updateMorphTargets() does not support THREE.Geometry. Use THREE.BufferGeometry instead.")}}}function cl(e,t,r,n,i,a,s){var o=sl.distanceSqToPoint(e);if(o<r){const l=new pr;sl.closestPointToPoint(e,l),l.applyMatrix4(n);n=i.ray.origin.distanceTo(l);n<i.near||n>i.far||a.push({distance:n,distanceToRay:Math.sqrt(o),point:l,index:t,face:null,object:s})}}hl.prototype.isPoints=!0;class ul extends sr{constructor(t,e,r,n,i,a,s,o,l){super(t,e,r,n,i,a,s,o,l),this.format=void 0!==s?s:Be,this.minFilter=void 0!==a?a:k,this.magFilter=void 0!==i?i:k,this.generateMipmaps=!1;const h=this;"requestVideoFrameCallback"in t&&t.requestVideoFrameCallback(function e(){h.needsUpdate=!0,t.requestVideoFrameCallback(e)})}clone(){return new this.constructor(this.image).copy(this)}update(){var e=this.image;!1=="requestVideoFrameCallback"in e&&e.readyState>=e.HAVE_CURRENT_DATA&&(this.needsUpdate=!0)}}class dl extends sr{constructor(e,t,r,n,i,a,s,o,l,h,c,u){super(null,a,s,o,l,h,n,i,c,u),this.image={width:t,height:r},this.mipmaps=e,this.flipY=!1,this.generateMipmaps=!1}}dl.prototype.isCompressedTexture=ul.prototype.isVideoTexture=!0;class pl extends sr{constructor(e,t,r,n,i,a,s,o,l){super(e,t,r,n,i,a,s,o,l),this.needsUpdate=!0}}class ml extends sr{constructor(e,t,r,n,i,a,s,o,l,h){if((h=void 0!==h?h:Oe)!==Oe&&h!==ze)throw new Error("DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat");super(null,n,i,a,s,o,h,r=void 0===(r=void 0===r&&h===Oe?Se:r)&&h===ze?Fe:r,l),this.image={width:e,height:t},this.magFilter=void 0!==s?s:Ce,this.minFilter=void 0!==o?o:Ce,this.flipY=!1,this.generateMipmaps=!1}}ml.prototype.isDepthTexture=pl.prototype.isCanvasTexture=!0;class fl extends ui{constructor(r=1,n=8,i=0,a=2*Math.PI){super(),this.type="CircleGeometry",this.parameters={radius:r,segments:n,thetaStart:i,thetaLength:a},n=Math.max(3,n);const t=[],s=[],o=[],l=[],h=new pr,c=new tr;s.push(0,0,0),o.push(0,0,1),l.push(.5,.5);for(let e=0,t=3;e<=n;e++,t+=3){var u=i+e/n*a;h.x=r*Math.cos(u),h.y=r*Math.sin(u),s.push(h.x,h.y,h.z),o.push(0,0,1),c.x=(s[t]/r+1)/2,c.y=(s[t+1]/r+1)/2,l.push(c.x,c.y)}for(let e=1;e<=n;e++)t.push(e,e+1,0);this.setIndex(t),this.setAttribute("position",new $n(s,3)),this.setAttribute("normal",new $n(o,3)),this.setAttribute("uv",new $n(l,2))}}class gl extends ui{constructor(f=1,g=1,v=1,y=8,x=1,e=!1,_=0,M=2*Math.PI){super(),this.type="CylinderGeometry",this.parameters={radiusTop:f,radiusBottom:g,height:v,radialSegments:y,heightSegments:x,openEnded:e,thetaStart:_,thetaLength:M};const w=this;y=Math.floor(y),x=Math.floor(x);const b=[],E=[],T=[],S=[];let A=0;const R=[],L=v/2;let C=0;function t(t){var r=A;const n=new tr,i=new pr;let a=0;var s=!0===t?f:g,o=!0===t?1:-1;for(let e=1;e<=y;e++)E.push(0,L*o,0),T.push(0,o,0),S.push(.5,.5),A++;var l=A;for(let e=0;e<=y;e++){var h=e/y*M+_,c=Math.cos(h),h=Math.sin(h);i.x=s*h,i.y=L*o,i.z=s*c,E.push(i.x,i.y,i.z),T.push(0,o,0),n.x=.5*c+.5,n.y=.5*h*o+.5,S.push(n.x,n.y),A++}for(let e=0;e<y;e++){var u=r+e,d=l+e;!0===t?b.push(d,d+1,u):b.push(d+1,d,u),a+=3}w.addGroup(C,a,!0===t?1:2),C+=a}!function(){const t=new pr,r=new pr;let n=0;var i=(g-f)/v;for(let e=0;e<=x;e++){const m=[];var a=e/x,s=a*(g-f)+f;for(let e=0;e<=y;e++){var o=e/y,l=o*M+_,h=Math.sin(l),l=Math.cos(l);r.x=s*h,r.y=-a*v+L,r.z=s*l,E.push(r.x,r.y,r.z),t.set(h,i,l).normalize(),T.push(t.x,t.y,t.z),S.push(o,1-a),m.push(A++)}R.push(m)}for(let t=0;t<y;t++)for(let e=0;e<x;e++){var c=R[e][t],u=R[e+1][t],d=R[e+1][t+1],p=R[e][t+1];b.push(c,u,p),b.push(u,d,p),n+=6}w.addGroup(C,n,0),C+=n}(),!1===e&&(0<f&&t(!0),0<g&&t(!1)),this.setIndex(b),this.setAttribute("position",new $n(E,3)),this.setAttribute("normal",new $n(T,3)),this.setAttribute("uv",new $n(S,2))}}class vl extends gl{constructor(e=1,t=1,r=8,n=1,i=!1,a=0,s=2*Math.PI){super(0,e,t,r,n,i,a,s),this.type="ConeGeometry",this.parameters={radius:e,height:t,radialSegments:r,heightSegments:n,openEnded:i,thetaStart:a,thetaLength:s}}}class yl extends ui{constructor(r,a,e=1,t=0){super(),this.type="PolyhedronGeometry",this.parameters={vertices:r,indices:a,radius:e,detail:t};const c=[],u=[];function d(e){c.push(e.x,e.y,e.z)}function s(e,t){e*=3;t.x=r[0+e],t.y=r[1+e],t.z=r[2+e]}function p(e,t,r,n){n<0&&1===e.x&&(u[t]=e.x-1),0===r.x&&0===r.z&&(u[t]=n/2/Math.PI+.5)}function m(e){return Math.atan2(e.z,-e.x)}!function(t){var r=new pr,n=new pr,i=new pr;for(let e=0;e<a.length;e+=3)s(a[e+0],r),s(a[e+1],n),s(a[e+2],i),function(e,r,n,t){const i=t+1,a=[];for(let t=0;t<=i;t++){a[t]=[];const h=e.clone().lerp(n,t/i);var s=r.clone().lerp(n,t/i),o=i-t;for(let e=0;e<=o;e++)0===e&&t===i?a[t][e]=h:a[t][e]=h.clone().lerp(s,e/o)}for(let t=0;t<i;t++)for(let e=0;e<2*(i-t)-1;e++){var l=Math.floor(e/2);e%2==0?(d(a[t][l+1]),d(a[t+1][l]),d(a[t][l])):(d(a[t][l+1]),d(a[t+1][l+1]),d(a[t+1][l]))}}(r,n,i,t)}(t),function(t){const r=new pr;for(let e=0;e<c.length;e+=3)r.x=c[e+0],r.y=c[e+1],r.z=c[e+2],r.normalize().multiplyScalar(t),c[e+0]=r.x,c[e+1]=r.y,c[e+2]=r.z}(e),function(){const t=new pr;for(let e=0;e<c.length;e+=3){t.x=c[e+0],t.y=c[e+1],t.z=c[e+2];var r=m(t)/2/Math.PI+.5,n=function(e){return Math.atan2(-e.y,Math.sqrt(e.x*e.x+e.z*e.z))}(t)/Math.PI+.5;u.push(r,1-n)}(function(){const r=new pr,n=new pr,i=new pr,a=new pr,s=new tr,o=new tr,l=new tr;for(let e=0,t=0;e<c.length;e+=9,t+=6){r.set(c[e+0],c[e+1],c[e+2]),n.set(c[e+3],c[e+4],c[e+5]),i.set(c[e+6],c[e+7],c[e+8]),s.set(u[t+0],u[t+1]),o.set(u[t+2],u[t+3]),l.set(u[t+4],u[t+5]),a.copy(r).add(n).add(i).divideScalar(3);var h=m(a);p(s,t+0,r,h),p(o,t+2,n,h),p(l,t+4,i,h)}})(),function(){for(let e=0;e<u.length;e+=6){var t=u[e+0],r=u[e+2],n=u[e+4],i=Math.max(t,r,n),a=Math.min(t,r,n);.9<i&&a<.1&&(t<.2&&(u[e+0]+=1),r<.2&&(u[e+2]+=1),n<.2&&(u[e+4]+=1))}}()}(),this.setAttribute("position",new $n(c,3)),this.setAttribute("normal",new $n(c.slice(),3)),this.setAttribute("uv",new $n(u,2)),0===t?this.computeVertexNormals():this.normalizeNormals()}}class xl extends yl{constructor(e=1,t=0){var r=(1+Math.sqrt(5))/2,n=1/r;super([-1,-1,-1,-1,-1,1,-1,1,-1,-1,1,1,1,-1,-1,1,-1,1,1,1,-1,1,1,1,0,-n,-r,0,-n,r,0,n,-r,0,n,r,-n,-r,0,-n,r,0,n,-r,0,n,r,0,-r,0,-n,r,0,-n,-r,0,n,r,0,n],[3,11,7,3,7,15,3,15,13,7,19,17,7,17,6,7,6,15,17,4,8,17,8,10,17,10,6,8,0,16,8,16,2,8,2,10,0,12,1,0,1,18,0,18,16,6,10,2,6,2,13,6,13,15,2,16,18,2,18,3,2,3,13,18,1,9,18,9,11,18,11,3,4,14,12,4,12,0,4,0,8,11,9,5,11,5,19,11,19,7,19,5,14,19,14,4,19,4,17,1,12,14,1,14,5,1,5,9],e,t),this.type="DodecahedronGeometry",this.parameters={radius:e,detail:t}}}const _l=new pr,Ml=new pr,wl=new pr,bl=new Pn;class El extends ui{constructor(e,t){if(super(),this.type="EdgesGeometry",this.parameters={thresholdAngle:t},t=void 0!==t?t:1,!0!==e.isGeometry){var r=Math.pow(10,4),n=Math.cos(jt*t);const f=e.getIndex();var i=e.getAttribute("position"),a=(f||i).count;const g=[0,0,0];var s,o,l=["a","b","c"];const v=new Array(3),y={},x=[];for(let e=0;e<a;e+=3){f?(g[0]=f.getX(e),g[1]=f.getX(e+1),g[2]=f.getX(e+2)):(g[0]=e,g[1]=e+1,g[2]=e+2);const{a:_,b:M,c:w}=bl;if(_.fromBufferAttribute(i,g[0]),M.fromBufferAttribute(i,g[1]),w.fromBufferAttribute(i,g[2]),bl.getNormal(wl),v[0]=`${Math.round(_.x*r)},${Math.round(_.y*r)},${Math.round(_.z*r)}`,v[1]=`${Math.round(M.x*r)},${Math.round(M.y*r)},${Math.round(M.z*r)}`,v[2]=`${Math.round(w.x*r)},${Math.round(w.y*r)},${Math.round(w.z*r)}`,v[0]!==v[1]&&v[1]!==v[2]&&v[2]!==v[0])for(let e=0;e<3;e++){var h=(e+1)%3,c=v[e],u=v[h],d=bl[l[e]],p=bl[l[h]],m=`${c}_${u}`,c=`${u}_${c}`;c in y&&y[c]?(wl.dot(y[c].normal)<=n&&(x.push(d.x,d.y,d.z),x.push(p.x,p.y,p.z)),y[c]=null):m in y||(y[m]={index0:g[e],index1:g[h],normal:wl.clone()})}}for(const b in y)y[b]&&({index0:s,index1:o}=y[b],_l.fromBufferAttribute(i,s),Ml.fromBufferAttribute(i,o),x.push(_l.x,_l.y,_l.z),x.push(Ml.x,Ml.y,Ml.z));this.setAttribute("position",new $n(x,3))}else console.error("THREE.EdgesGeometry no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.")}}const Tl={triangulate:function(t,e,r){r=r||2;var n=e&&e.length,i=n?e[0]*r:t.length;let a=Sl(t,0,i,r,!0);var s=[];if(!a||a.next===a.prev)return s;let o,l,h,c,u,d,p;if(n&&(a=function(e,t,r,n){const i=[];let a,s,o,l,h;for(a=0,s=t.length;a<s;a++)o=t[a]*n,l=a<s-1?t[a+1]*n:e.length,h=Sl(e,o,l,n,!1),h===h.next&&(h.steiner=!0),i.push(function(e){let t=e,r=e;for(;(t.x<r.x||t.x===r.x&&t.y<r.y)&&(r=t),t=t.next,t!==e;);return r}(h));for(i.sort(Ll),a=0;a<i.length;a++)!function(e,t){(t=function(e,t){let r=t;var n=e.x,i=e.y;let a=-1/0,s;do{if(i<=r.y&&i>=r.next.y&&r.next.y!==r.y){var o=r.x+(i-r.y)*(r.next.x-r.x)/(r.next.y-r.y);if(o<=n&&o>a){if((a=o)===n){if(i===r.y)return r;if(i===r.next.y)return r.next}s=r.x<r.next.x?r:r.next}}}while(r=r.next,r!==t);if(!s)return null;if(n===a)return s;var l=s,h=s.x,c=s.y;let u=1/0,d;r=s;for(;n>=r.x&&r.x>=h&&n!==r.x&&Pl(i<c?n:a,i,h,c,i<c?a:n,i,r.x,r.y)&&(d=Math.abs(i-r.y)/(n-r.x),Ul(r,e)&&(d<u||d===u&&(r.x>s.x||r.x===s.x&&function(e,t){return Il(e.prev,e,t.prev)<0&&Il(t.next,e,e.next)<0}(s,r)))&&(s=r,u=d)),r=r.next,r!==l;);return s}(e,t))&&(e=Ol(t,e),Al(t,t.next),Al(e,e.next))}(i[a],r),r=Al(r,r.next);return r}(t,e,a,r)),t.length>80*r){o=h=t[0],l=c=t[1];for(let e=r;e<i;e+=r)u=t[e],d=t[e+1],u<o&&(o=u),d<l&&(l=d),u>h&&(h=u),d>c&&(c=d);p=Math.max(h-o,c-l),p=0!==p?1/p:0}return Rl(a,s,r,o,l,p),s}};function Sl(e,t,r,n,i){let a,s;if(i===0<function(r,n,i,a){let s=0;for(let e=n,t=i-a;e<i;e+=a)s+=(r[t]-r[e])*(r[e+1]+r[t+1]),t=e;return s}(e,t,r,n))for(a=t;a<r;a+=n)s=zl(a,e[a],e[a+1],s);else for(a=r-n;a>=t;a-=n)s=zl(a,e[a],e[a+1],s);return s&&Dl(s,s.next)&&(Hl(s),s=s.next),s}function Al(e,t){if(!e)return e;t=t||e;let r=e,n;do{if(n=!1,r.steiner||!Dl(r,r.next)&&0!==Il(r.prev,r,r.next))r=r.next;else{if(Hl(r),r=t=r.prev,r===r.next)break;n=!0}}while(n||r!==t);return t}function Rl(n,i,a,s,o,l,h){if(n){!h&&l&&function(e,t,r,n){let i=e;for(;null===i.z&&(i.z=Cl(i.x,i.y,t,r,n)),i.prevZ=i.prev,i.nextZ=i.next,i=i.next,i!==e;);i.prevZ.nextZ=null,i.prevZ=null,function(e){let t,r,n,i,a,s,o,l,h=1;do{for(r=e,e=null,a=null,s=0;r;){for(s++,n=r,o=0,t=0;t<h&&(o++,n=n.nextZ,n);t++);for(l=h;0<o||0<l&&n;)0!==o&&(0===l||!n||r.z<=n.z)?(i=r,r=r.nextZ,o--):(i=n,n=n.nextZ,l--),a?a.nextZ=i:e=i,i.prevZ=a,a=i;r=n}}while(a.nextZ=null,h*=2,1<s)}(i)}(n,s,o,l);let e=n,t,r;for(;n.prev!==n.next;)if(t=n.prev,r=n.next,l?function(e,t,r,n){var i=e.prev,a=e,s=e.next;if(0<=Il(i,a,s))return!1;var o=(i.x<a.x?i.x<s.x?i:s:a.x<s.x?a:s).x,l=(i.y<a.y?i.y<s.y?i:s:a.y<s.y?a:s).y,h=(i.x>a.x?i.x>s.x?i:s:a.x>s.x?a:s).x,c=(i.y>a.y?i.y>s.y?i:s:a.y>s.y?a:s).y,u=Cl(o,l,t,r,n),d=Cl(h,c,t,r,n);let p=e.prevZ,m=e.nextZ;for(;p&&p.z>=u&&m&&m.z<=d;){if(p!==e.prev&&p!==e.next&&Pl(i.x,i.y,a.x,a.y,s.x,s.y,p.x,p.y)&&0<=Il(p.prev,p,p.next))return!1;if(p=p.prevZ,m!==e.prev&&m!==e.next&&Pl(i.x,i.y,a.x,a.y,s.x,s.y,m.x,m.y)&&0<=Il(m.prev,m,m.next))return!1;m=m.nextZ}for(;p&&p.z>=u;){if(p!==e.prev&&p!==e.next&&Pl(i.x,i.y,a.x,a.y,s.x,s.y,p.x,p.y)&&0<=Il(p.prev,p,p.next))return!1;p=p.prevZ}for(;m&&m.z<=d;){if(m!==e.prev&&m!==e.next&&Pl(i.x,i.y,a.x,a.y,s.x,s.y,m.x,m.y)&&0<=Il(m.prev,m,m.next))return!1;m=m.nextZ}return!0}(n,s,o,l):function(e){var t=e.prev,r=e,n=e.next;if(0<=Il(t,r,n))return!1;let i=e.next.next;for(;i!==e.prev;){if(Pl(t.x,t.y,r.x,r.y,n.x,n.y,i.x,i.y)&&0<=Il(i.prev,i,i.next))return!1;i=i.next}return!0}(n))i.push(t.i/a),i.push(n.i/a),i.push(r.i/a),Hl(n),n=r.next,e=r.next;else if((n=r)===e){h?1===h?Rl(n=function(e,t,r){let n=e;do{var i=n.prev,a=n.next.next;!Dl(i,a)&&Nl(i,n,n.next,a)&&Ul(i,a)&&Ul(a,i)&&(t.push(i.i/r),t.push(n.i/r),t.push(a.i/r),Hl(n),Hl(n.next),n=e=a),n=n.next}while(n!==e);return Al(n)}(Al(n),i,a),i,a,s,o,l,2):2===h&&function(e,t,r,n,i,a){let s=e;do{let e=s.next.next;for(;e!==s.prev;){if(s.i!==e.i&&function(e,t){return e.next.i!==t.i&&e.prev.i!==t.i&&!function(e,t){let r=e;do{if(r.i!==e.i&&r.next.i!==e.i&&r.i!==t.i&&r.next.i!==t.i&&Nl(r,r.next,e,t))return!0}while(r=r.next,r!==e);return!1}(e,t)&&(Ul(e,t)&&Ul(t,e)&&function(e,t){let r=e,n=!1;var i=(e.x+t.x)/2,a=(e.y+t.y)/2;for(;r.y>a!=r.next.y>a&&r.next.y!==r.y&&i<(r.next.x-r.x)*(a-r.y)/(r.next.y-r.y)+r.x&&(n=!n),r=r.next,r!==e;);return n}(e,t)&&(Il(e.prev,e,t.prev)||Il(e,t.prev,t))||Dl(e,t)&&0<Il(e.prev,e,e.next)&&0<Il(t.prev,t,t.next))}(s,e)){var o=Ol(s,e);return s=Al(s,s.next),o=Al(o,o.next),Rl(s,t,r,n,i,a),Rl(o,t,r,n,i,a)}e=e.next}}while(s=s.next,s!==e)}(n,i,a,s,o,l):Rl(Al(n),i,a,s,o,l,1);break}}}function Ll(e,t){return e.x-t.x}function Cl(e,t,r,n,i){return(e=1431655765&((e=858993459&((e=252645135&((e=16711935&((e=32767*(e-r)*i)|e<<8))|e<<4))|e<<2))|e<<1))|(t=1431655765&((t=858993459&((t=252645135&((t=16711935&((t=32767*(t-n)*i)|t<<8))|t<<4))|t<<2))|t<<1))<<1}function Pl(e,t,r,n,i,a,s,o){return 0<=(i-s)*(t-o)-(e-s)*(a-o)&&0<=(e-s)*(n-o)-(r-s)*(t-o)&&0<=(r-s)*(a-o)-(i-s)*(n-o)}function Il(e,t,r){return(t.y-e.y)*(r.x-t.x)-(t.x-e.x)*(r.y-t.y)}function Dl(e,t){return e.x===t.x&&e.y===t.y}function Nl(e,t,r,n){var i=Bl(Il(e,t,r)),a=Bl(Il(e,t,n)),s=Bl(Il(r,n,e)),o=Bl(Il(r,n,t));return i!==a&&s!==o||(0===i&&Fl(e,r,t)||(0===a&&Fl(e,n,t)||(0===s&&Fl(r,e,n)||!(0!==o||!Fl(r,t,n)))))}function Fl(e,t,r){return t.x<=Math.max(e.x,r.x)&&t.x>=Math.min(e.x,r.x)&&t.y<=Math.max(e.y,r.y)&&t.y>=Math.min(e.y,r.y)}function Bl(e){return 0<e?1:e<0?-1:0}function Ul(e,t){return Il(e.prev,e,e.next)<0?0<=Il(e,t,e.next)&&0<=Il(e,e.prev,t):Il(e,t,e.prev)<0||Il(e,e.next,t)<0}function Ol(e,t){const r=new Gl(e.i,e.x,e.y),n=new Gl(t.i,t.x,t.y),i=e.next,a=t.prev;return(e.next=t).prev=e,r.next=i,i.prev=r,n.next=r,r.prev=n,a.next=n,n.prev=a,n}function zl(e,t,r,n){const i=new Gl(e,t,r);return n?(i.next=n.next,(i.prev=n).next.prev=i,n.next=i):(i.prev=i,i.next=i),i}function Hl(e){e.next.prev=e.prev,e.prev.next=e.next,e.prevZ&&(e.prevZ.nextZ=e.nextZ),e.nextZ&&(e.nextZ.prevZ=e.prevZ)}function Gl(e,t,r){this.i=e,this.x=t,this.y=r,this.prev=null,this.next=null,this.z=null,this.prevZ=null,this.nextZ=null,this.steiner=!1}class Vl{static area(r){var n=r.length;let i=0;for(let e=n-1,t=0;t<n;e=t++)i+=r[e].x*r[t].y-r[t].x*r[e].y;return.5*i}static isClockWise(e){return Vl.area(e)<0}static triangulateShape(e,t){var r=[];const n=[],i=[];kl(e),Wl(r,e);let a=e.length;t.forEach(kl);for(let e=0;e<t.length;e++)n.push(a),a+=t[e].length,Wl(r,t[e]);const s=Tl.triangulate(r,n);for(let e=0;e<s.length;e+=3)i.push(s.slice(e,e+3));return i}}function kl(e){var t=e.length;2<t&&e[t-1].equals(e[0])&&e.pop()}function Wl(t,r){for(let e=0;e<r.length;e++)t.push(r[e].x),t.push(r[e].y)}class jl extends ui{constructor(r,Q){super(),this.type="ExtrudeGeometry",this.parameters={shapes:r,options:Q},r=Array.isArray(r)?r:[r];const $=this,ee=[],te=[];for(let e=0,t=r.length;e<t;e++)!function(e){const n=[],t=void 0!==Q.curveSegments?Q.curveSegments:12,o=void 0!==Q.steps?Q.steps:1;let r=void 0!==Q.depth?Q.depth:100,s=void 0===Q.bevelEnabled||Q.bevelEnabled,i=void 0!==Q.bevelThickness?Q.bevelThickness:6,a=void 0!==Q.bevelSize?Q.bevelSize:i-2,l=void 0!==Q.bevelOffset?Q.bevelOffset:0,h=void 0!==Q.bevelSegments?Q.bevelSegments:3;const c=Q.extrudePath,u=void 0!==Q.UVGenerator?Q.UVGenerator:Xl;void 0!==Q.amount&&(console.warn("THREE.ExtrudeBufferGeometry: amount has been renamed to depth."),r=Q.amount);let d,p=!1,m,f,g,v;c&&(d=c.getSpacedPoints(o),p=!0,s=!1,m=c.computeFrenetFrames(o,!1),f=new pr,g=new pr,v=new pr);s||(h=0,i=0,a=0,l=0);e=e.extractPoints(t);let y=e.shape;const x=e.holes,_=!Vl.isClockWise(y);if(_){y=y.reverse();for(let e=0,t=x.length;e<t;e++){const K=x[e];Vl.isClockWise(K)&&(x[e]=K.reverse())}}const M=Vl.triangulateShape(y,x),w=y;for(let e=0,t=x.length;e<t;e++){var b=x[e];y=y.concat(b)}function E(e,t,r){return t||console.error("THREE.ExtrudeGeometry: vec does not exist"),t.clone().multiplyScalar(r).add(e)}const T=y.length,S=M.length;function A(e,t,r){let n,i,a;var s=e.x-t.x,o=e.y-t.y,l=r.x-e.x,h=r.y-e.y,c=s*s+o*o;if(Math.abs(s*h-o*l)>Number.EPSILON){var u=Math.sqrt(c),d=Math.sqrt(l*l+h*h),p=t.x-o/u,u=t.y+s/u,d=((r.x-h/d-p)*h-(r.y+l/d-u)*l)/(s*h-o*l);n=p+s*d-e.x,i=u+o*d-e.y;e=n*n+i*i;if(e<=2)return new tr(n,i);a=Math.sqrt(e/2)}else{let e=!1;s>Number.EPSILON?l>Number.EPSILON&&(e=!0):s<-Number.EPSILON?l<-Number.EPSILON&&(e=!0):Math.sign(o)===Math.sign(h)&&(e=!0),a=e?(n=-o,i=s,Math.sqrt(c)):(n=s,i=o,Math.sqrt(c/2))}return new tr(n/a,i/a)}const R=[];for(let e=0,t=w.length,r=t-1,n=e+1;e<t;e++,r++,n++)r===t&&(r=0),n===t&&(n=0),R[e]=A(w[e],w[r],w[n]);const L=[];let C,P=R.concat();for(let e=0,t=x.length;e<t;e++){var I=x[e];C=[];for(let e=0,t=I.length,r=t-1,n=e+1;e<t;e++,r++,n++)r===t&&(r=0),n===t&&(n=0),C[e]=A(I[e],I[r],I[n]);L.push(C),P=P.concat(C)}for(let e=0;e<h;e++){var D=e/h,N=i*Math.cos(D*Math.PI/2);const O=a*Math.sin(D*Math.PI/2)+l;for(let e=0,t=w.length;e<t;e++){var F=E(w[e],R[e],O);q(F.x,F.y,-N)}for(let e=0,t=x.length;e<t;e++){var B=x[e];C=L[e];for(let e=0,t=B.length;e<t;e++){var U=E(B[e],C[e],O);q(U.x,U.y,-N)}}}const O=a+l;for(let e=0;e<T;e++){var z=s?E(y[e],P[e],O):y[e];p?(g.copy(m.normals[0]).multiplyScalar(z.x),f.copy(m.binormals[0]).multiplyScalar(z.y),v.copy(d[0]).add(g).add(f),q(v.x,v.y,v.z)):q(z.x,z.y,0)}for(let t=1;t<=o;t++)for(let e=0;e<T;e++){var H=s?E(y[e],P[e],O):y[e];p?(g.copy(m.normals[t]).multiplyScalar(H.x),f.copy(m.binormals[t]).multiplyScalar(H.y),v.copy(d[t]).add(g).add(f),q(v.x,v.y,v.z)):q(H.x,H.y,r/o*t)}for(let e=h-1;0<=e;e--){var G=e/h,V=i*Math.cos(G*Math.PI/2);const O=a*Math.sin(G*Math.PI/2)+l;for(let e=0,t=w.length;e<t;e++){var k=E(w[e],R[e],O);q(k.x,k.y,r+V)}for(let e=0,t=x.length;e<t;e++){var W=x[e];C=L[e];for(let e=0,t=W.length;e<t;e++){var j=E(W[e],C[e],O);p?q(j.x,j.y+d[o-1].y,d[o-1].x+V):q(j.x,j.y,r+V)}}}function X(e,n){let t=e.length;for(;0<=--t;){var i=t;let r=t-1;r<0&&(r=e.length-1);for(let e=0,t=o+2*h;e<t;e++){var a=T*e,s=T*(e+1);!function(e,t,r,n){Z(e),Z(t),Z(n),Z(t),Z(r),Z(n);n=ee.length/3,n=u.generateSideWallUV($,ee,n-6,n-3,n-2,n-1);J(n[0]),J(n[1]),J(n[3]),J(n[1]),J(n[2]),J(n[3])}(n+i+a,n+r+a,n+r+s,n+i+s)}}}function q(e,t,r){n.push(e),n.push(t),n.push(r)}function Y(e,t,r){Z(e),Z(t),Z(r);r=ee.length/3,r=u.generateTopUV($,ee,r-3,r-2,r-1);J(r[0]),J(r[1]),J(r[2])}function Z(e){ee.push(n[3*e+0]),ee.push(n[3*e+1]),ee.push(n[3*e+2])}function J(e){te.push(e.x),te.push(e.y)}(function(){var e,t=ee.length/3;if(s){let t=0*T;for(let e=0;e<S;e++){var r=M[e];Y(r[2]+t,r[1]+t,r[0]+t)}e=o+2*h,t=T*e;for(let e=0;e<S;e++){var n=M[e];Y(n[0]+t,n[1]+t,n[2]+t)}}else{for(let e=0;e<S;e++){var i=M[e];Y(i[2],i[1],i[0])}for(let e=0;e<S;e++){var a=M[e];Y(a[0]+T*o,a[1]+T*o,a[2]+T*o)}}$.addGroup(t,ee.length/3-t,0)})(),function(){var e=ee.length/3;let r=0;X(w,r),r+=w.length;for(let e=0,t=x.length;e<t;e++){var n=x[e];X(n,r),r+=n.length}$.addGroup(e,ee.length/3-e,1)}()}(r[e]);this.setAttribute("position",new $n(ee,3)),this.setAttribute("uv",new $n(te,2)),this.computeVertexNormals()}toJSON(){var e=super.toJSON();return function(r,e,n){if(n.shapes=[],Array.isArray(r))for(let e=0,t=r.length;e<t;e++){var i=r[e];n.shapes.push(i.uuid)}else n.shapes.push(r.uuid);void 0!==e.extrudePath&&(n.options.extrudePath=e.extrudePath.toJSON());return n}(this.parameters.shapes,this.parameters.options,e)}}const Xl={generateTopUV:function(e,t,r,n,i){var a=t[3*r],s=t[3*r+1],o=t[3*n],r=t[3*n+1],n=t[3*i],i=t[3*i+1];return[new tr(a,s),new tr(o,r),new tr(n,i)]},generateSideWallUV:function(e,t,r,n,i,a){var s=t[3*r],o=t[3*r+1],l=t[3*r+2],h=t[3*n],c=t[3*n+1],u=t[3*n+2],d=t[3*i],p=t[3*i+1],r=t[3*i+2],n=t[3*a],i=t[3*a+1],a=t[3*a+2];return Math.abs(o-c)<Math.abs(s-h)?[new tr(s,1-l),new tr(h,1-u),new tr(d,1-r),new tr(n,1-a)]:[new tr(o,1-l),new tr(c,1-u),new tr(p,1-r),new tr(i,1-a)]}};class ql extends yl{constructor(e=1,t=0){var r=(1+Math.sqrt(5))/2;super([-1,r,0,1,r,0,-1,-r,0,1,-r,0,0,-1,r,0,1,r,0,-1,-r,0,1,-r,r,0,-1,r,0,1,-r,0,-1,-r,0,1],[0,11,5,0,5,1,0,1,7,0,7,10,0,10,11,1,5,9,5,11,4,11,10,2,10,7,6,7,1,8,3,9,4,3,4,2,3,2,6,3,6,8,3,8,9,4,9,5,2,4,11,6,2,10,8,6,7,9,8,1],e,t),this.type="IcosahedronGeometry",this.parameters={radius:e,detail:t}}}class Yl extends ui{constructor(r,n=12,e=0,i=2*Math.PI){super(),this.type="LatheGeometry",this.parameters={points:r,segments:n,phiStart:e,phiLength:i},n=Math.floor(n),i=Yt(i,0,2*Math.PI);const a=[],s=[],o=[];var l=1/n;const h=new pr,c=new tr;for(let t=0;t<=n;t++){var u=e+t*l*i,d=Math.sin(u),p=Math.cos(u);for(let e=0;e<=r.length-1;e++)h.x=r[e].x*d,h.y=r[e].y,h.z=r[e].x*p,s.push(h.x,h.y,h.z),c.x=t/n,c.y=e/(r.length-1),o.push(c.x,c.y)}for(let t=0;t<n;t++)for(let e=0;e<r.length-1;e++){var m=e+t*r.length,f=m+r.length,g=m+r.length+1,v=m+1;a.push(m,f,v),a.push(f,g,v)}if(this.setIndex(a),this.setAttribute("position",new $n(s,3)),this.setAttribute("uv",new $n(o,2)),this.computeVertexNormals(),i===2*Math.PI){const x=this.attributes.normal.array,_=new pr,M=new pr,w=new pr;var y=n*r.length*3;for(let e=0,t=0;e<r.length;e++,t+=3)_.x=x[t+0],_.y=x[t+1],_.z=x[t+2],M.x=x[y+t+0],M.y=x[y+t+1],M.z=x[y+t+2],w.addVectors(_,M).normalize(),x[t+0]=x[y+t+0]=w.x,x[t+1]=x[y+t+1]=w.y,x[t+2]=x[y+t+2]=w.z}}}class Zl extends yl{constructor(e=1,t=0){super([1,0,0,-1,0,0,0,1,0,0,-1,0,0,0,1,0,0,-1],[0,2,4,0,4,3,0,3,5,0,5,2,1,2,5,1,5,3,1,3,4,1,4,2],e,t),this.type="OctahedronGeometry",this.parameters={radius:e,detail:t}}}class Jl extends ui{constructor(t,r,n){super(),this.type="ParametricGeometry",this.parameters={func:t,slices:r,stacks:n};const i=[],a=[],s=[],o=[];const l=new pr;var h=new pr,c=new pr;const u=new pr,d=new pr;t.length<3&&console.error("THREE.ParametricGeometry: Function must now modify a Vector3 as third parameter.");var p=r+1;for(let e=0;e<=n;e++){var m=e/n;for(let e=0;e<=r;e++){var f=e/r;t(f,m,h),a.push(h.x,h.y,h.z),0<=f-1e-5?(t(f-1e-5,m,c),u.subVectors(h,c)):(t(1e-5+f,m,c),u.subVectors(c,h)),0<=m-1e-5?(t(f,m-1e-5,c),d.subVectors(h,c)):(t(f,1e-5+m,c),d.subVectors(c,h)),l.crossVectors(u,d).normalize(),s.push(l.x,l.y,l.z),o.push(f,m)}}for(let t=0;t<n;t++)for(let e=0;e<r;e++){var g=t*p+e,v=t*p+e+1,y=(t+1)*p+e+1,x=(t+1)*p+e;i.push(g,v,x),i.push(v,y,x)}this.setIndex(i),this.setAttribute("position",new $n(a,3)),this.setAttribute("normal",new $n(s,3)),this.setAttribute("uv",new $n(o,2))}}class Kl extends ui{constructor(e=.5,t=1,r=8,n=1,i=0,a=2*Math.PI){super(),this.type="RingGeometry",this.parameters={innerRadius:e,outerRadius:t,thetaSegments:r,phiSegments:n,thetaStart:i,thetaLength:a},r=Math.max(3,r);const s=[],o=[],l=[],h=[];let c=e;var u=(t-e)/(n=Math.max(1,n));const d=new pr,p=new tr;for(let e=0;e<=n;e++){for(let e=0;e<=r;e++){var m=i+e/r*a;d.x=c*Math.cos(m),d.y=c*Math.sin(m),o.push(d.x,d.y,d.z),l.push(0,0,1),p.x=(d.x/t+1)/2,p.y=(d.y/t+1)/2,h.push(p.x,p.y)}c+=u}for(let e=0;e<n;e++){var f=e*(r+1);for(let e=0;e<r;e++){var g=e+f,v=g+r+1,y=g+r+2,x=g+1;s.push(g,v,x),s.push(v,y,x)}}this.setIndex(s),this.setAttribute("position",new $n(o,3)),this.setAttribute("normal",new $n(l,3)),this.setAttribute("uv",new $n(h,2))}}class Ql extends ui{constructor(t,d=12){super(),this.type="ShapeGeometry",this.parameters={shapes:t,curveSegments:d};const p=[],m=[],f=[],g=[];let r=0,v=0;if(!1===Array.isArray(t))n(t);else for(let e=0;e<t.length;e++)n(t[e]),this.addGroup(r,v,e),r+=v,v=0;function n(e){var r=m.length/3,e=e.extractPoints(d);let n=e.shape;const i=e.holes;!1===Vl.isClockWise(n)&&(n=n.reverse());for(let e=0,t=i.length;e<t;e++){const u=i[e];!0===Vl.isClockWise(u)&&(i[e]=u.reverse())}var a=Vl.triangulateShape(n,i);for(let e=0,t=i.length;e<t;e++){var s=i[e];n=n.concat(s)}for(let e=0,t=n.length;e<t;e++){var o=n[e];m.push(o.x,o.y,0),f.push(0,0,1),g.push(o.x,o.y)}for(let e=0,t=a.length;e<t;e++){var l=a[e],h=l[0]+r,c=l[1]+r,l=l[2]+r;p.push(h,c,l),v+=3}}this.setIndex(p),this.setAttribute("position",new $n(m,3)),this.setAttribute("normal",new $n(f,3)),this.setAttribute("uv",new $n(g,2))}toJSON(){var e=super.toJSON();return function(r,n){if(n.shapes=[],Array.isArray(r))for(let e=0,t=r.length;e<t;e++){var i=r[e];n.shapes.push(i.uuid)}else n.shapes.push(r.uuid);return n}(this.parameters.shapes,e)}}class $l extends ui{constructor(r=1,n=8,i=6,a=0,s=2*Math.PI,o=0,l=Math.PI){super(),this.type="SphereGeometry",this.parameters={radius:r,widthSegments:n,heightSegments:i,phiStart:a,phiLength:s,thetaStart:o,thetaLength:l},n=Math.max(3,Math.floor(n)),i=Math.max(2,Math.floor(i));var h=Math.min(o+l,Math.PI);let c=0;const u=[],d=new pr,p=new pr,m=[],f=[],g=[],v=[];for(let e=0;e<=i;e++){const E=[];var y=e/i;let t=0;0==e&&0==o?t=.5/n:e==i&&h==Math.PI&&(t=-.5/n);for(let e=0;e<=n;e++){var x=e/n;d.x=-r*Math.cos(a+x*s)*Math.sin(o+y*l),d.y=r*Math.cos(o+y*l),d.z=r*Math.sin(a+x*s)*Math.sin(o+y*l),f.push(d.x,d.y,d.z),p.copy(d).normalize(),g.push(p.x,p.y,p.z),v.push(x+t,1-y),E.push(c++)}u.push(E)}for(let t=0;t<i;t++)for(let e=0;e<n;e++){var _=u[t][e+1],M=u[t][e],w=u[t+1][e],b=u[t+1][e+1];(0!==t||0<o)&&m.push(_,M,b),(t!==i-1||h<Math.PI)&&m.push(M,w,b)}this.setIndex(m),this.setAttribute("position",new $n(f,3)),this.setAttribute("normal",new $n(g,3)),this.setAttribute("uv",new $n(v,2))}}class eh extends yl{constructor(e=1,t=0){super([1,1,1,-1,-1,1,-1,1,-1,1,-1,-1],[2,1,0,0,3,2,1,3,0,2,3,1],e,t),this.type="TetrahedronGeometry",this.parameters={radius:e,detail:t}}}class th extends jl{constructor(e,t={}){const r=t.font;if(!r||!r.isFont)return console.error("THREE.TextGeometry: font parameter is not an instance of THREE.Font."),new ui;e=r.generateShapes(e,t.size);t.depth=void 0!==t.height?t.height:50,void 0===t.bevelThickness&&(t.bevelThickness=10),void 0===t.bevelSize&&(t.bevelSize=8),void 0===t.bevelEnabled&&(t.bevelEnabled=!1),super(e,t),this.type="TextGeometry"}}class rh extends ui{constructor(r=1,n=.4,i=8,a=6,s=2*Math.PI){super(),this.type="TorusGeometry",this.parameters={radius:r,tube:n,radialSegments:i,tubularSegments:a,arc:s},i=Math.floor(i),a=Math.floor(a);const o=[],l=[],h=[],c=[],u=new pr,d=new pr,p=new pr;for(let t=0;t<=i;t++)for(let e=0;e<=a;e++){var m=e/a*s,f=t/i*Math.PI*2;d.x=(r+n*Math.cos(f))*Math.cos(m),d.y=(r+n*Math.cos(f))*Math.sin(m),d.z=n*Math.sin(f),l.push(d.x,d.y,d.z),u.x=r*Math.cos(m),u.y=r*Math.sin(m),p.subVectors(d,u).normalize(),h.push(p.x,p.y,p.z),c.push(e/a),c.push(t/i)}for(let t=1;t<=i;t++)for(let e=1;e<=a;e++){var g=(a+1)*t+e-1,v=(a+1)*(t-1)+e-1,y=(a+1)*(t-1)+e,x=(a+1)*t+e;o.push(g,v,x),o.push(v,y,x)}this.setIndex(o),this.setAttribute("position",new $n(l,3)),this.setAttribute("normal",new $n(h,3)),this.setAttribute("uv",new $n(c,2))}}class nh extends ui{constructor(e=1,r=.4,n=64,i=8,a=2,s=3){super(),this.type="TorusKnotGeometry",this.parameters={radius:e,tube:r,tubularSegments:n,radialSegments:i,p:a,q:s},n=Math.floor(n),i=Math.floor(i);const o=[],l=[],h=[],c=[],u=new pr,d=new pr;var p=new pr,m=new pr;const f=new pr,g=new pr,v=new pr;for(let t=0;t<=n;++t){var y=t/n*a*Math.PI*2;T(y,a,s,e,p),T(.01+y,a,s,e,m),g.subVectors(m,p),v.addVectors(m,p),f.crossVectors(g,v),v.crossVectors(f,g),f.normalize(),v.normalize();for(let e=0;e<=i;++e){var x=e/i*Math.PI*2,_=-r*Math.cos(x),x=r*Math.sin(x);u.x=p.x+(_*v.x+x*f.x),u.y=p.y+(_*v.y+x*f.y),u.z=p.z+(_*v.z+x*f.z),l.push(u.x,u.y,u.z),d.subVectors(u,p).normalize(),h.push(d.x,d.y,d.z),c.push(t/n),c.push(e/i)}}for(let t=1;t<=n;t++)for(let e=1;e<=i;e++){var M=(i+1)*(t-1)+(e-1),w=(i+1)*t+(e-1),b=(i+1)*t+e,E=(i+1)*(t-1)+e;o.push(M,w,E),o.push(w,b,E)}function T(e,t,r,n,i){var a=Math.cos(e),s=Math.sin(e),t=r/t*e,e=Math.cos(t);i.x=n*(2+e)*.5*a,i.y=n*(2+e)*s*.5,i.z=n*Math.sin(t)*.5}this.setIndex(o),this.setAttribute("position",new $n(l,3)),this.setAttribute("normal",new $n(h,3)),this.setAttribute("uv",new $n(c,2))}}class ih extends ui{constructor(a,s=64,o=1,l=8,e=!1){super(),this.type="TubeGeometry",this.parameters={path:a,tubularSegments:s,radius:o,radialSegments:l,closed:e};const h=a.computeFrenetFrames(s,e);this.tangents=h.tangents,this.normals=h.normals,this.binormals=h.binormals;const c=new pr,u=new pr,r=new tr;let d=new pr;const p=[],m=[],n=[],f=[];function t(e){d=a.getPointAt(e/s,d);var t=h.normals[e],r=h.binormals[e];for(let e=0;e<=l;e++){var n=e/l*Math.PI*2,i=Math.sin(n),n=-Math.cos(n);u.x=n*t.x+i*r.x,u.y=n*t.y+i*r.y,u.z=n*t.z+i*r.z,u.normalize(),m.push(u.x,u.y,u.z),c.x=d.x+o*u.x,c.y=d.y+o*u.y,c.z=d.z+o*u.z,p.push(c.x,c.y,c.z)}}!function(){for(let e=0;e<s;e++)t(e);t(!1===e?s:0),function(){for(let t=0;t<=s;t++)for(let e=0;e<=l;e++)r.x=t/s,r.y=e/l,n.push(r.x,r.y)}(),function(){for(let t=1;t<=s;t++)for(let e=1;e<=l;e++){var r=(l+1)*(t-1)+(e-1),n=(l+1)*t+(e-1),i=(l+1)*t+e,a=(l+1)*(t-1)+e;f.push(r,n,a),f.push(n,i,a)}}()}(),this.setIndex(f),this.setAttribute("position",new $n(p,3)),this.setAttribute("normal",new $n(m,3)),this.setAttribute("uv",new $n(n,2))}toJSON(){const e=super.toJSON();return e.path=this.parameters.path.toJSON(),e}}class ah extends ui{constructor(e){if(super(),this.type="WireframeGeometry",!0!==e.isGeometry){const h=[],c=[0,0],u={},d=new pr;if(null!==e.index){var t=e.attributes.position;const p=e.index;let r=e.groups;0===r.length&&(r=[{start:0,count:p.count,materialIndex:0}]);for(let e=0,t=r.length;e<t;++e){var n=r[e],i=n.start;for(let t=i,e=i+n.count;t<e;t+=3)for(let e=0;e<3;e++){var a=p.getX(t+e),s=p.getX(t+(e+1)%3);c[0]=Math.min(a,s),c[1]=Math.max(a,s);s=c[0]+","+c[1];void 0===u[s]&&(u[s]={index1:c[0],index2:c[1]})}}for(const m in u){var o=u[m];d.fromBufferAttribute(t,o.index1),h.push(d.x,d.y,d.z),d.fromBufferAttribute(t,o.index2),h.push(d.x,d.y,d.z)}}else{var r=e.attributes.position;for(let t=0,e=r.count/3;t<e;t++)for(let e=0;e<3;e++){var l=3*t+e;d.fromBufferAttribute(r,l),h.push(d.x,d.y,d.z);l=3*t+(e+1)%3;d.fromBufferAttribute(r,l),h.push(d.x,d.y,d.z)}}this.setAttribute("position",new $n(h,3))}else console.error("THREE.WireframeGeometry no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.")}}var sh=Object.freeze({__proto__:null,BoxGeometry:Pi,BoxBufferGeometry:Pi,CircleGeometry:fl,CircleBufferGeometry:fl,ConeGeometry:vl,ConeBufferGeometry:vl,CylinderGeometry:gl,CylinderBufferGeometry:gl,DodecahedronGeometry:xl,DodecahedronBufferGeometry:xl,EdgesGeometry:El,ExtrudeGeometry:jl,ExtrudeBufferGeometry:jl,IcosahedronGeometry:ql,IcosahedronBufferGeometry:ql,LatheGeometry:Yl,LatheBufferGeometry:Yl,OctahedronGeometry:Zl,OctahedronBufferGeometry:Zl,ParametricGeometry:Jl,ParametricBufferGeometry:Jl,PlaneGeometry:Xi,PlaneBufferGeometry:Xi,PolyhedronGeometry:yl,PolyhedronBufferGeometry:yl,RingGeometry:Kl,RingBufferGeometry:Kl,ShapeGeometry:Ql,ShapeBufferGeometry:Ql,SphereGeometry:$l,SphereBufferGeometry:$l,TetrahedronGeometry:eh,TetrahedronBufferGeometry:eh,TextGeometry:th,TextBufferGeometry:th,TorusGeometry:rh,TorusBufferGeometry:rh,TorusKnotGeometry:nh,TorusKnotBufferGeometry:nh,TubeGeometry:ih,TubeBufferGeometry:ih,WireframeGeometry:ah});class oh extends Dn{constructor(e){super(),this.type="ShadowMaterial",this.color=new Hn(0),this.transparent=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this}}oh.prototype.isShadowMaterial=!0;class lh extends Fi{constructor(e){super(e),this.type="RawShaderMaterial"}}lh.prototype.isRawShaderMaterial=!0;class hh extends Dn{constructor(e){super(),this.defines={STANDARD:""},this.type="MeshStandardMaterial",this.color=new Hn(16777215),this.roughness=1,this.metalness=0,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Hn(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Ut,this.normalScale=new tr(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.roughnessMap=null,this.metalnessMap=null,this.alphaMap=null,this.envMap=null,this.envMapIntensity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.morphTargets=!1,this.morphNormals=!1,this.flatShading=!1,this.vertexTangents=!1,this.setValues(e)}copy(e){return super.copy(e),this.defines={STANDARD:""},this.color.copy(e.color),this.roughness=e.roughness,this.metalness=e.metalness,this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.roughnessMap=e.roughnessMap,this.metalnessMap=e.metalnessMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.envMapIntensity=e.envMapIntensity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.morphTargets=e.morphTargets,this.morphNormals=e.morphNormals,this.flatShading=e.flatShading,this.vertexTangents=e.vertexTangents,this}}hh.prototype.isMeshStandardMaterial=!0;class ch extends hh{constructor(e){super(),this.defines={STANDARD:"",PHYSICAL:""},this.type="MeshPhysicalMaterial",this.clearcoat=0,this.clearcoatMap=null,this.clearcoatRoughness=0,this.clearcoatRoughnessMap=null,this.clearcoatNormalScale=new tr(1,1),this.clearcoatNormalMap=null,this.reflectivity=.5,Object.defineProperty(this,"ior",{get:function(){return(1+.4*this.reflectivity)/(1-.4*this.reflectivity)},set:function(e){this.reflectivity=Yt(2.5*(e-1)/(e+1),0,1)}}),this.sheen=null,this.transmission=0,this.transmissionMap=null,this.thickness=.01,this.thicknessMap=null,this.attenuationDistance=0,this.attenuationColor=new Hn(1,1,1),this.setValues(e)}copy(e){return super.copy(e),this.defines={STANDARD:"",PHYSICAL:""},this.clearcoat=e.clearcoat,this.clearcoatMap=e.clearcoatMap,this.clearcoatRoughness=e.clearcoatRoughness,this.clearcoatRoughnessMap=e.clearcoatRoughnessMap,this.clearcoatNormalMap=e.clearcoatNormalMap,this.clearcoatNormalScale.copy(e.clearcoatNormalScale),this.reflectivity=e.reflectivity,e.sheen?this.sheen=(this.sheen||new Hn).copy(e.sheen):this.sheen=null,this.transmission=e.transmission,this.transmissionMap=e.transmissionMap,this.thickness=e.thickness,this.thicknessMap=e.thicknessMap,this.attenuationDistance=e.attenuationDistance,this.attenuationColor.copy(e.attenuationColor),this}}class uh extends Dn{constructor(e){super(),this.type="MeshPhongMaterial",this.color=new Hn(16777215),this.specular=new Hn(1118481),this.shininess=30,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Hn(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Ut,this.normalScale=new tr(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=E,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.morphTargets=!1,this.morphNormals=!1,this.flatShading=!1,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.specular.copy(e.specular),this.shininess=e.shininess,this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.morphTargets=e.morphTargets,this.morphNormals=e.morphNormals,this.flatShading=e.flatShading,this}}class dh extends Dn{constructor(e){super(),this.defines={TOON:""},this.type="MeshToonMaterial",this.color=new Hn(16777215),this.map=null,this.gradientMap=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Hn(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Ut,this.normalScale=new tr(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.alphaMap=null,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.morphTargets=!1,this.morphNormals=!1,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.gradientMap=e.gradientMap,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.alphaMap=e.alphaMap,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.morphTargets=e.morphTargets,this.morphNormals=e.morphNormals,this}}class ph extends Dn{constructor(e){super(),this.type="MeshNormalMaterial",this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Ut,this.normalScale=new tr(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.morphTargets=!1,this.morphNormals=!1,this.flatShading=!1,this.setValues(e)}copy(e){return super.copy(e),this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.morphTargets=e.morphTargets,this.morphNormals=e.morphNormals,this.flatShading=e.flatShading,this}}class mh extends Dn{constructor(e){super(),this.type="MeshLambertMaterial",this.color=new Hn(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Hn(0),this.emissiveIntensity=1,this.emissiveMap=null,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=E,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.morphTargets=!1,this.morphNormals=!1,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.morphTargets=e.morphTargets,this.morphNormals=e.morphNormals,this}}class fh extends Dn{constructor(e){super(),this.defines={MATCAP:""},this.type="MeshMatcapMaterial",this.color=new Hn(16777215),this.matcap=null,this.map=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Ut,this.normalScale=new tr(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.alphaMap=null,this.morphTargets=!1,this.morphNormals=!1,this.flatShading=!1,this.setValues(e)}copy(e){return super.copy(e),this.defines={MATCAP:""},this.color.copy(e.color),this.matcap=e.matcap,this.map=e.map,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.alphaMap=e.alphaMap,this.morphTargets=e.morphTargets,this.morphNormals=e.morphNormals,this.flatShading=e.flatShading,this}}class gh extends qo{constructor(e){super(),this.type="LineDashedMaterial",this.scale=1,this.dashSize=3,this.gapSize=1,this.setValues(e)}copy(e){return super.copy(e),this.scale=e.scale,this.dashSize=e.dashSize,this.gapSize=e.gapSize,this}}gh.prototype.isLineDashedMaterial=fh.prototype.isMeshMatcapMaterial=mh.prototype.isMeshLambertMaterial=ph.prototype.isMeshNormalMaterial=dh.prototype.isMeshToonMaterial=uh.prototype.isMeshPhongMaterial=ch.prototype.isMeshPhysicalMaterial=!0;var vh=Object.freeze({__proto__:null,ShadowMaterial:oh,SpriteMaterial:uo,RawShaderMaterial:lh,ShaderMaterial:Fi,PointsMaterial:il,MeshPhysicalMaterial:ch,MeshStandardMaterial:hh,MeshPhongMaterial:uh,MeshToonMaterial:dh,MeshNormalMaterial:ph,MeshLambertMaterial:mh,MeshDepthMaterial:ks,MeshDistanceMaterial:Ws,MeshBasicMaterial:Gn,MeshMatcapMaterial:fh,LineDashedMaterial:gh,LineBasicMaterial:qo,Material:Dn});const yh={arraySlice:function(e,t,r){return yh.isTypedArray(e)?new e.constructor(e.subarray(t,void 0!==r?r:e.length)):e.slice(t,r)},convertArray:function(e,t,r){return!e||!r&&e.constructor===t?e:"number"==typeof t.BYTES_PER_ELEMENT?new t(e):Array.prototype.slice.call(e)},isTypedArray:function(e){return ArrayBuffer.isView(e)&&!(e instanceof DataView)},getKeyframeOrder:function(r){var t=r.length;const n=new Array(t);for(let e=0;e!==t;++e)n[e]=e;return n.sort(function(e,t){return r[e]-r[t]}),n},sortedArray:function(r,n,i){var a=r.length;const s=new r.constructor(a);for(let e=0,t=0;t!==a;++e){var o=i[e]*n;for(let e=0;e!==n;++e)s[t++]=r[o+e]}return s},flattenJSON:function(t,r,n,i){let a=1,s=t[0];for(;void 0!==s&&void 0===s[i];)s=t[a++];if(void 0!==s){let e=s[i];if(void 0!==e)if(Array.isArray(e))for(;e=s[i],void 0!==e&&(r.push(s.time),n.push.apply(n,e)),s=t[a++],void 0!==s;);else if(void 0!==e.toArray)for(;e=s[i],void 0!==e&&(r.push(s.time),e.toArray(n,n.length)),s=t[a++],void 0!==s;);else for(;e=s[i],void 0!==e&&(r.push(s.time),n.push(e)),s=t[a++],void 0!==s;);}},subclip:function(e,t,r,n,i=30){const a=e.clone();a.name=t;const s=[];for(let e=0;e<a.tracks.length;++e){const c=a.tracks[e];var o=c.getValueSize();const u=[],d=[];for(let t=0;t<c.times.length;++t){var l=c.times[t]*i;if(!(l<r||n<=l)){u.push(c.times[t]);for(let e=0;e<o;++e)d.push(c.values[t*o+e])}}0!==u.length&&(c.times=yh.convertArray(u,c.times.constructor),c.values=yh.convertArray(d,c.values.constructor),s.push(c))}a.tracks=s;let h=1/0;for(let e=0;e<a.tracks.length;++e)h>a.tracks[e].times[0]&&(h=a.tracks[e].times[0]);for(let e=0;e<a.tracks.length;++e)a.tracks[e].shift(-1*h);return a.resetDuration(),a},makeClipAdditive:function(t,e=0,r=t,n=30){var i=r.tracks.length,a=e/(n=n<=0?30:n);for(let e=0;e<i;++e){const f=r.tracks[e],g=f.ValueTypeName;if("bool"!==g&&"string"!==g){const v=t.tracks.find(function(e){return e.name===f.name&&e.ValueTypeName===g});if(void 0!==v){let e=0;var s=f.getValueSize();f.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline&&(e=s/3);let t=0;var o=v.getValueSize();v.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline&&(t=o/3);var l=f.times.length-1;let r;if(a<=f.times[0]){var h=e,c=s-e;r=yh.arraySlice(f.values,h,c)}else if(a>=f.times[l]){var l=l*s+e,u=l+s-e;r=yh.arraySlice(f.values,l,u)}else{const y=f.createInterpolant();u=e,s=s-e;y.evaluate(a),r=yh.arraySlice(y.resultBuffer,u,s)}if("quaternion"===g){const x=(new dr).fromArray(r).normalize().conjugate();x.toArray(r)}var d=v.times.length;for(let e=0;e<d;++e){var p=e*o+t;if("quaternion"===g)dr.multiplyQuaternionsFlat(v.values,p,r,0,v.values,p);else{var m=o-2*t;for(let e=0;e<m;++e)v.values[p+e]-=r[e]}}}}}return t.blendMode=2501,t}};class xh{constructor(e,t,r,n){this.parameterPositions=e,this._cachedIndex=0,this.resultBuffer=void 0!==n?n:new t.constructor(r),this.sampleValues=t,this.valueSize=r,this.settings=null,this.DefaultSettings_={}}evaluate(t){var r=this.parameterPositions;let n=this._cachedIndex,i=r[n],a=r[n-1];e:{t:{let e;r:{n:if(!(t<i)){for(var s=n+2;;){if(void 0===i){if(t<a)break n;return n=r.length,this._cachedIndex=n,this.afterEnd_(n-1,t,a)}if(n===s)break;if(a=i,i=r[++n],t<i)break t}e=r.length;break r}if(t>=a)break e;var o=r[1];t<o&&(n=2,a=o);for(var l=n-2;;){if(void 0===a)return this._cachedIndex=0,this.beforeStart_(0,t,i);if(n===l)break;if(i=a,a=r[--n-1],t>=a)break t}e=n,n=0}for(;n<e;){var h=n+e>>>1;t<r[h]?e=h:n=1+h}if(i=r[n],a=r[n-1],void 0===a)return this._cachedIndex=0,this.beforeStart_(0,t,i);if(void 0===i)return n=r.length,this._cachedIndex=n,this.afterEnd_(n-1,a,t)}this._cachedIndex=n,this.intervalChanged_(n,a,i)}return this.interpolate_(n,a,t,i)}getSettings_(){return this.settings||this.DefaultSettings_}copySampleValue_(e){const t=this.resultBuffer,r=this.sampleValues,n=this.valueSize,i=e*n;for(let e=0;e!==n;++e)t[e]=r[i+e];return t}interpolate_(){throw new Error("call to abstract method")}intervalChanged_(){}}xh.prototype.beforeStart_=xh.prototype.copySampleValue_,xh.prototype.afterEnd_=xh.prototype.copySampleValue_;class _h extends xh{constructor(e,t,r,n){super(e,t,r,n),this._weightPrev=-0,this._offsetPrev=-0,this._weightNext=-0,this._offsetNext=-0,this.DefaultSettings_={endingStart:St,endingEnd:St}}intervalChanged_(e,t,r){var n=this.parameterPositions;let i=e-2,a=e+1,s=n[i],o=n[a];if(void 0===s)switch(this.getSettings_().endingStart){case At:i=e,s=2*t-r;break;case Rt:i=n.length-2,s=t+n[i]-n[i+1];break;default:i=e,s=r}if(void 0===o)switch(this.getSettings_().endingEnd){case At:a=e,o=2*r-t;break;case Rt:a=1,o=r+n[1]-n[0];break;default:a=e-1,o=t}var l=.5*(r-t),h=this.valueSize;this._weightPrev=l/(t-s),this._weightNext=l/(o-r),this._offsetPrev=i*h,this._offsetNext=a*h}interpolate_(e,t,r,n){const i=this.resultBuffer,a=this.sampleValues,s=this.valueSize,o=e*s,l=o-s,h=this._offsetPrev,c=this._offsetNext,u=this._weightPrev,d=this._weightNext,p=(r-t)/(n-t),m=p*p,f=m*p;var g=-u*f+2*u*m-u*p,v=(1+u)*f+(-1.5-2*u)*m+(-.5+u)*p+1,y=(-1-d)*f+(1.5+d)*m+.5*p,x=d*f-d*m;for(let e=0;e!==s;++e)i[e]=g*a[h+e]+v*a[l+e]+y*a[o+e]+x*a[c+e];return i}}class Mh extends xh{constructor(e,t,r,n){super(e,t,r,n)}interpolate_(e,t,r,n){const i=this.resultBuffer,a=this.sampleValues,s=this.valueSize,o=e*s,l=o-s,h=(r-t)/(n-t),c=1-h;for(let e=0;e!==s;++e)i[e]=a[l+e]*c+a[o+e]*h;return i}}class wh extends xh{constructor(e,t,r,n){super(e,t,r,n)}interpolate_(e){return this.copySampleValue_(e-1)}}class bh{constructor(e,t,r,n){if(void 0===e)throw new Error("THREE.KeyframeTrack: track name is undefined");if(void 0===t||0===t.length)throw new Error("THREE.KeyframeTrack: no keyframes in track named "+e);this.name=e,this.times=yh.convertArray(t,this.TimeBufferType),this.values=yh.convertArray(r,this.ValueBufferType),this.setInterpolation(n||this.DefaultInterpolation)}static toJSON(e){const t=e.constructor;let r;var n;return t.toJSON!==this.toJSON?r=t.toJSON(e):(r={name:e.name,times:yh.convertArray(e.times,Array),values:yh.convertArray(e.values,Array)},(n=e.getInterpolation())!==e.DefaultInterpolation&&(r.interpolation=n)),r.type=e.ValueTypeName,r}InterpolantFactoryMethodDiscrete(e){return new wh(this.times,this.values,this.getValueSize(),e)}InterpolantFactoryMethodLinear(e){return new Mh(this.times,this.values,this.getValueSize(),e)}InterpolantFactoryMethodSmooth(e){return new _h(this.times,this.values,this.getValueSize(),e)}setInterpolation(e){let t;switch(e){case i:t=this.InterpolantFactoryMethodDiscrete;break;case Tt:t=this.InterpolantFactoryMethodLinear;break;case 2302:t=this.InterpolantFactoryMethodSmooth}if(void 0!==t)return this.createInterpolant=t,this;var r="unsupported interpolation for "+this.ValueTypeName+" keyframe track named "+this.name;if(void 0===this.createInterpolant){if(e===this.DefaultInterpolation)throw new Error(r);this.setInterpolation(this.DefaultInterpolation)}return console.warn("THREE.KeyframeTrack:",r),this}getInterpolation(){switch(this.createInterpolant){case this.InterpolantFactoryMethodDiscrete:return i;case this.InterpolantFactoryMethodLinear:return Tt;case this.InterpolantFactoryMethodSmooth:return 2302}}getValueSize(){return this.values.length/this.times.length}shift(r){if(0!==r){const n=this.times;for(let e=0,t=n.length;e!==t;++e)n[e]+=r}return this}scale(r){if(1!==r){const n=this.times;for(let e=0,t=n.length;e!==t;++e)n[e]*=r}return this}trim(e,t){var r,n=this.times,i=n.length;let a=0,s=i-1;for(;a!==i&&n[a]<e;)++a;for(;-1!==s&&n[s]>t;)--s;return++s,0===a&&s===i||(a>=s&&(s=Math.max(s,1),a=s-1),r=this.getValueSize(),this.times=yh.arraySlice(n,a,s),this.values=yh.arraySlice(this.values,a*r,s*r)),this}validate(){let r=!0;var e=this.getValueSize();e-Math.floor(e)!=0&&(console.error("THREE.KeyframeTrack: Invalid value size in track.",this),r=!1);var t=this.times,n=this.values,i=t.length;0===i&&(console.error("THREE.KeyframeTrack: Track is empty.",this),r=!1);let a=null;for(let e=0;e!==i;e++){var s=t[e];if("number"==typeof s&&isNaN(s)){console.error("THREE.KeyframeTrack: Time is not a valid number.",this,e,s),r=!1;break}if(null!==a&&a>s){console.error("THREE.KeyframeTrack: Out of order keys.",this,e,s,a),r=!1;break}a=s}if(void 0!==n&&yh.isTypedArray(n))for(let e=0,t=n.length;e!==t;++e){var o=n[e];if(isNaN(o)){console.error("THREE.KeyframeTrack: Value is not a valid number.",this,e,o),r=!1;break}}return r}optimize(){const r=yh.arraySlice(this.times),n=yh.arraySlice(this.values),i=this.getValueSize(),a=2302===this.getInterpolation(),s=r.length-1;let o=1;for(let e=1;e<s;++e){let t=!1;var l=r[e];if(l!==r[e+1]&&(1!==e||l!==r[0]))if(a)t=!0;else{var h=e*i,c=h-i,u=h+i;for(let e=0;e!==i;++e){var d=n[h+e];if(d!==n[c+e]||d!==n[u+e]){t=!0;break}}}if(t){if(e!==o){r[o]=r[e];var p=e*i,m=o*i;for(let e=0;e!==i;++e)n[m+e]=n[p+e]}++o}}if(0<s){r[o]=r[s];for(let e=s*i,t=o*i,r=0;r!==i;++r)n[t+r]=n[e+r];++o}return o!==r.length?(this.times=yh.arraySlice(r,0,o),this.values=yh.arraySlice(n,0,o*i)):(this.times=r,this.values=n),this}clone(){var e=yh.arraySlice(this.times,0),t=yh.arraySlice(this.values,0);const r=this.constructor,n=new r(this.name,e,t);return n.createInterpolant=this.createInterpolant,n}}bh.prototype.TimeBufferType=Float32Array,bh.prototype.ValueBufferType=Float32Array,bh.prototype.DefaultInterpolation=Tt;class Eh extends bh{}Eh.prototype.ValueTypeName="bool",Eh.prototype.ValueBufferType=Array,Eh.prototype.DefaultInterpolation=i,Eh.prototype.InterpolantFactoryMethodLinear=void 0,Eh.prototype.InterpolantFactoryMethodSmooth=void 0;class Th extends bh{}Th.prototype.ValueTypeName="color";class Sh extends bh{}Sh.prototype.ValueTypeName="number";class Ah extends xh{constructor(e,t,r,n){super(e,t,r,n)}interpolate_(e,t,r,n){var i=this.resultBuffer,a=this.sampleValues,s=this.valueSize,o=(r-t)/(n-t);let l=e*s;for(var h=l+s;l!==h;l+=4)dr.slerpFlat(i,0,a,l-s,a,l,o);return i}}class Rh extends bh{InterpolantFactoryMethodLinear(e){return new Ah(this.times,this.values,this.getValueSize(),e)}}Rh.prototype.ValueTypeName="quaternion",Rh.prototype.DefaultInterpolation=Tt,Rh.prototype.InterpolantFactoryMethodSmooth=void 0;class Lh extends bh{}Lh.prototype.ValueTypeName="string",Lh.prototype.ValueBufferType=Array,Lh.prototype.DefaultInterpolation=i,Lh.prototype.InterpolantFactoryMethodLinear=void 0,Lh.prototype.InterpolantFactoryMethodSmooth=void 0;class Ch extends bh{}class Ph{constructor(e,t=-1,r,n=2500){this.name=e,this.tracks=r,this.duration=t,this.blendMode=n,this.uuid=qt(),this.duration<0&&this.resetDuration()}static parse(e){const r=[],n=e.tracks,i=1/(e.fps||1);for(let e=0,t=n.length;e!==t;++e)r.push(function(e){if(void 0===e.type)throw new Error("THREE.KeyframeTrack: track type undefined, can not parse");const t=function(e){switch(e.toLowerCase()){case"scalar":case"double":case"float":case"number":case"integer":return Sh;case"vector":case"vector2":case"vector3":case"vector4":return Ch;case"color":return Th;case"quaternion":return Rh;case"bool":case"boolean":return Eh;case"string":return Lh}throw new Error("THREE.KeyframeTrack: Unsupported typeName: "+e)}(e.type);{var r,n;void 0===e.times&&(r=[],n=[],yh.flattenJSON(e.keys,r,n,"value"),e.times=r,e.values=n)}return void 0!==t.parse?t.parse(e):new t(e.name,e.times,e.values,e.interpolation)}(n[e]).scale(i));const t=new this(e.name,e.duration,r,e.blendMode);return t.uuid=e.uuid,t}static toJSON(e){const r=[],n=e.tracks;e={name:e.name,duration:e.duration,tracks:r,uuid:e.uuid,blendMode:e.blendMode};for(let e=0,t=n.length;e!==t;++e)r.push(bh.toJSON(n[e]));return e}static CreateFromMorphTargetSequence(e,n,i,a){var s=n.length;const o=[];for(let r=0;r<s;r++){let e=[],t=[];e.push((r+s-1)%s,r,(r+1)%s),t.push(0,1,0);var l=yh.getKeyframeOrder(e);e=yh.sortedArray(e,1,l),t=yh.sortedArray(t,1,l),a||0!==e[0]||(e.push(s),t.push(t[0])),o.push(new Sh(".morphTargetInfluences["+n[r].name+"]",e,t).scale(1/i))}return new this(e,-1,o)}static findByName(e,t){let r=e;Array.isArray(e)||(r=e.geometry&&e.geometry.animations||e.animations);for(let e=0;e<r.length;e++)if(r[e].name===t)return r[e];return null}static CreateClipsFromMorphTargetSequences(r,e,t){const n={};var i=/^([\w-]*?)([\d]+)$/;for(let e=0,t=r.length;e<t;e++){const o=r[e];var a=o.name.match(i);if(a&&1<a.length){a=a[1];let e=n[a];e||(n[a]=e=[]),e.push(o)}}const s=[];for(const l in n)s.push(this.CreateFromMorphTargetSequence(l,n[l],e,t));return s}static parseAnimation(e,t){if(!e)return console.error("THREE.AnimationClip: No animation in JSONLoader data."),null;function r(e,t,r,n,i){var a,s;0!==r.length&&(a=[],s=[],yh.flattenJSON(r,a,s,n),0!==a.length&&i.push(new e(t,a,s)))}const n=[];var i=e.name||"default",a=e.fps||30,s=e.blendMode;let o=e.length||-1;var l=e.hierarchy||[];for(let e=0;e<l.length;e++){var h=l[e].keys;if(h&&0!==h.length)if(h[0].morphTargets){const d={};let t;for(t=0;t<h.length;t++)if(h[t].morphTargets)for(let e=0;e<h[t].morphTargets.length;e++)d[h[t].morphTargets[e]]=-1;for(const p in d){const m=[],f=[];for(let e=0;e!==h[t].morphTargets.length;++e){var c=h[t];m.push(c.time),f.push(c.morphTarget===p?1:0)}n.push(new Sh(".morphTargetInfluence["+p+"]",m,f))}o=d.length*(a||1)}else{var u=".bones["+t[e].name+"]";r(Ch,u+".position",h,"pos",n),r(Rh,u+".quaternion",h,"rot",n),r(Ch,u+".scale",h,"scl",n)}}return 0===n.length?null:new this(i,o,n,s)}resetDuration(){let r=0;for(let e=0,t=this.tracks.length;e!==t;++e){var n=this.tracks[e];r=Math.max(r,n.times[n.times.length-1])}return this.duration=r,this}trim(){for(let e=0;e<this.tracks.length;e++)this.tracks[e].trim(0,this.duration);return this}validate(){let t=!0;for(let e=0;e<this.tracks.length;e++)t=t&&this.tracks[e].validate();return t}optimize(){for(let e=0;e<this.tracks.length;e++)this.tracks[e].optimize();return this}clone(){const t=[];for(let e=0;e<this.tracks.length;e++)t.push(this.tracks[e].clone());return new this.constructor(this.name,this.duration,t,this.blendMode)}toJSON(){return this.constructor.toJSON(this)}}const Ih={enabled:!(Ch.prototype.ValueTypeName="vector"),files:{},add:function(e,t){!1!==this.enabled&&(this.files[e]=t)},get:function(e){if(!1!==this.enabled)return this.files[e]},remove:function(e){delete this.files[e]},clear:function(){this.files={}}};class Dh{constructor(e,t,r){const n=this;let i=!1,a=0,s=0,o=void 0;const l=[];this.onStart=void 0,this.onLoad=e,this.onProgress=t,this.onError=r,this.itemStart=function(e){s++,!1===i&&void 0!==n.onStart&&n.onStart(e,a,s),i=!0},this.itemEnd=function(e){a++,void 0!==n.onProgress&&n.onProgress(e,a,s),a===s&&(i=!1,void 0!==n.onLoad&&n.onLoad())},this.itemError=function(e){void 0!==n.onError&&n.onError(e)},this.resolveURL=function(e){return o?o(e):e},this.setURLModifier=function(e){return o=e,this},this.addHandler=function(e,t){return l.push(e,t),this},this.removeHandler=function(e){e=l.indexOf(e);return-1!==e&&l.splice(e,2),this},this.getHandler=function(r){for(let e=0,t=l.length;e<t;e+=2){const i=l[e];var n=l[e+1];if(i.global&&(i.lastIndex=0),i.test(r))return n}return null}}}const Nh=new Dh;class Fh{constructor(e){this.manager=void 0!==e?e:Nh,this.crossOrigin="anonymous",this.withCredentials=!1,this.path="",this.resourcePath="",this.requestHeader={}}load(){}loadAsync(r,n){const i=this;return new Promise(function(e,t){i.load(r,e,n,t)})}parse(){}setCrossOrigin(e){return this.crossOrigin=e,this}setWithCredentials(e){return this.withCredentials=e,this}setPath(e){return this.path=e,this}setResourcePath(e){return this.resourcePath=e,this}setRequestHeader(e){return this.requestHeader=e,this}}const Bh={};class Uh extends Fh{constructor(e){super(e)}load(o,r,t,n){void 0===o&&(o=""),void 0!==this.path&&(o=this.path+o),o=this.manager.resolveURL(o);const l=this,e=Ih.get(o);if(void 0!==e)return l.manager.itemStart(o),setTimeout(function(){r&&r(e),l.manager.itemEnd(o)},0),e;if(void 0===Bh[o]){var i=o.match(/^data:(.*?)(;base64)?,(.*)$/);let e;if(i){var a=i[1],s=!!i[2];let t=i[3];t=decodeURIComponent(t),s&&(t=atob(t));try{let e;var h=(this.responseType||"").toLowerCase();switch(h){case"arraybuffer":case"blob":const c=new Uint8Array(t.length);for(let e=0;e<t.length;e++)c[e]=t.charCodeAt(e);e="blob"===h?new Blob([c.buffer],{type:a}):c.buffer;break;case"document":const u=new DOMParser;e=u.parseFromString(t,a);break;case"json":e=JSON.parse(t);break;default:e=t}setTimeout(function(){r&&r(e),l.manager.itemEnd(o)},0)}catch(e){setTimeout(function(){n&&n(e),l.manager.itemError(o),l.manager.itemEnd(o)},0)}}else{Bh[o]=[],Bh[o].push({onLoad:r,onProgress:t,onError:n}),e=new XMLHttpRequest,e.open("GET",o,!0),e.addEventListener("load",function(r){var n=this.response,i=Bh[o];if(delete Bh[o],200===this.status||0===this.status){0===this.status&&console.warn("THREE.FileLoader: HTTP Status 0 received."),Ih.add(o,n);for(let e=0,t=i.length;e<t;e++){const a=i[e];a.onLoad&&a.onLoad(n)}l.manager.itemEnd(o)}else{for(let e=0,t=i.length;e<t;e++){const s=i[e];s.onError&&s.onError(r)}l.manager.itemError(o),l.manager.itemEnd(o)}},!1),e.addEventListener("progress",function(r){var n=Bh[o];for(let e=0,t=n.length;e<t;e++){const i=n[e];i.onProgress&&i.onProgress(r)}},!1),e.addEventListener("error",function(r){var n=Bh[o];delete Bh[o];for(let e=0,t=n.length;e<t;e++){const i=n[e];i.onError&&i.onError(r)}l.manager.itemError(o),l.manager.itemEnd(o)},!1),e.addEventListener("abort",function(r){var n=Bh[o];delete Bh[o];for(let e=0,t=n.length;e<t;e++){const i=n[e];i.onError&&i.onError(r)}l.manager.itemError(o),l.manager.itemEnd(o)},!1),void 0!==this.responseType&&(e.responseType=this.responseType),void 0!==this.withCredentials&&(e.withCredentials=this.withCredentials),e.overrideMimeType&&e.overrideMimeType(void 0!==this.mimeType?this.mimeType:"text/plain");for(const d in this.requestHeader)e.setRequestHeader(d,this.requestHeader[d]);e.send(null)}return l.manager.itemStart(o),e}Bh[o].push({onLoad:r,onProgress:t,onError:n})}setResponseType(e){return this.responseType=e,this}setMimeType(e){return this.mimeType=e,this}}class Oh extends Fh{constructor(e){super(e)}load(t,e,r,n){void 0!==this.path&&(t=this.path+t),t=this.manager.resolveURL(t);const i=this,a=Ih.get(t);if(void 0!==a)return i.manager.itemStart(t),setTimeout(function(){e&&e(a),i.manager.itemEnd(t)},0),a;const s=document.createElementNS("http://www.w3.org/1999/xhtml","img");function o(){s.removeEventListener("load",o,!1),s.removeEventListener("error",l,!1),Ih.add(t,this),e&&e(this),i.manager.itemEnd(t)}function l(e){s.removeEventListener("load",o,!1),s.removeEventListener("error",l,!1),n&&n(e),i.manager.itemError(t),i.manager.itemEnd(t)}return s.addEventListener("load",o,!1),s.addEventListener("error",l,!1),"data:"!==t.substr(0,5)&&void 0!==this.crossOrigin&&(s.crossOrigin=this.crossOrigin),i.manager.itemStart(t),s.src=t,s}}class zh extends Fh{constructor(e){super(e)}load(r,n,e,i){const a=new zi,s=new Oh(this.manager);s.setCrossOrigin(this.crossOrigin),s.setPath(this.path);let o=0;for(let e=0;e<r.length;++e)!function(t){s.load(r[t],function(e){a.images[t]=e,o++,6===o&&(a.needsUpdate=!0,n&&n(a))},void 0,i)}(e);return a}}class Hh extends Fh{constructor(e){super(e)}load(e,t,r,n){const i=this,a=new Oo,s=new Uh(this.manager);return s.setResponseType("arraybuffer"),s.setRequestHeader(this.requestHeader),s.setPath(this.path),s.setWithCredentials(i.withCredentials),s.load(e,function(e){e=i.parse(e);e&&(void 0!==e.image?a.image=e.image:void 0!==e.data&&(a.image.width=e.width,a.image.height=e.height,a.image.data=e.data),a.wrapS=void 0!==e.wrapS?e.wrapS:Le,a.wrapT=void 0!==e.wrapT?e.wrapT:Le,a.magFilter=void 0!==e.magFilter?e.magFilter:k,a.minFilter=void 0!==e.minFilter?e.minFilter:k,a.anisotropy=void 0!==e.anisotropy?e.anisotropy:1,void 0!==e.encoding&&(a.encoding=e.encoding),void 0!==e.flipY&&(a.flipY=e.flipY),void 0!==e.format&&(a.format=e.format),void 0!==e.type&&(a.type=e.type),void 0!==e.mipmaps&&(a.mipmaps=e.mipmaps,a.minFilter=Pe),1===e.mipmapCount&&(a.minFilter=k),void 0!==e.generateMipmaps&&(a.generateMipmaps=e.generateMipmaps),a.needsUpdate=!0,t&&t(a,e))},r,n),a}}class Gh extends Fh{constructor(e){super(e)}load(t,r,e,n){const i=new sr,a=new Oh(this.manager);return a.setCrossOrigin(this.crossOrigin),a.setPath(this.path),a.load(t,function(e){i.image=e;e=0<t.search(/\.jpe?g($|\?)/i)||0===t.search(/^data\:image\/jpeg/);i.format=e?Be:Ue,i.needsUpdate=!0,void 0!==r&&r(i)},e,n),i}}class Vh{constructor(){this.type="Curve",this.arcLengthDivisions=200}getPoint(){return console.warn("THREE.Curve: .getPoint() not implemented."),null}getPointAt(e,t){e=this.getUtoTmapping(e);return this.getPoint(e,t)}getPoints(t=5){const r=[];for(let e=0;e<=t;e++)r.push(this.getPoint(e/t));return r}getSpacedPoints(t=5){const r=[];for(let e=0;e<=t;e++)r.push(this.getPointAt(e/t));return r}getLength(){var e=this.getLengths();return e[e.length-1]}getLengths(t=this.arcLengthDivisions){if(this.cacheArcLengths&&this.cacheArcLengths.length===t+1&&!this.needsUpdate)return this.cacheArcLengths;this.needsUpdate=!1;const r=[];let n,i=this.getPoint(0),a=0;r.push(0);for(let e=1;e<=t;e++)n=this.getPoint(e/t),a+=n.distanceTo(i),r.push(a),i=n;return this.cacheArcLengths=r,r}updateArcLengths(){this.needsUpdate=!0,this.getLengths()}getUtoTmapping(e,t){var r=this.getLengths();let n=0;var i=r.length;let a;a=t||e*r[i-1];let s=0,o=i-1,l;for(;s<=o;)if(n=Math.floor(s+(o-s)/2),(l=r[n]-a)<0)s=n+1;else{if(!(0<l)){o=n;break}o=n-1}if(n=o,r[n]===a)return n/(i-1);t=r[n],e=r[n+1],t=(a-t)/(e-t);return(n+t)/(i-1)}getTangent(e,t){let r=e-1e-4,n=e+1e-4;r<0&&(r=0),1<n&&(n=1);var i=this.getPoint(r),e=this.getPoint(n);const a=t||new(i.isVector2?tr:pr);return a.copy(e).sub(i).normalize(),a}getTangentAt(e,t){e=this.getUtoTmapping(e);return this.getTangent(e,t)}computeFrenetFrames(r,e){const t=new pr,n=[],i=[],a=[],s=new pr,o=new Wr;for(let e=0;e<=r;e++){var l=e/r;n[e]=this.getTangentAt(l,new pr),n[e].normalize()}i[0]=new pr,a[0]=new pr;let h=Number.MAX_VALUE;var c,u=Math.abs(n[0].x),d=Math.abs(n[0].y),p=Math.abs(n[0].z);u<=h&&(h=u,t.set(1,0,0)),d<=h&&(h=d,t.set(0,1,0)),p<=h&&t.set(0,0,1),s.crossVectors(n[0],t).normalize(),i[0].crossVectors(n[0],s),a[0].crossVectors(n[0],i[0]);for(let e=1;e<=r;e++)i[e]=i[e-1].clone(),a[e]=a[e-1].clone(),s.crossVectors(n[e-1],n[e]),s.length()>Number.EPSILON&&(s.normalize(),c=Math.acos(Yt(n[e-1].dot(n[e]),-1,1)),i[e].applyMatrix4(o.makeRotationAxis(s,c))),a[e].crossVectors(n[e],i[e]);if(!0===e){let t=Math.acos(Yt(i[0].dot(i[r]),-1,1));t/=r,0<n[0].dot(s.crossVectors(i[0],i[r]))&&(t=-t);for(let e=1;e<=r;e++)i[e].applyMatrix4(o.makeRotationAxis(n[e],t*e)),a[e].crossVectors(n[e],i[e])}return{tangents:n,normals:i,binormals:a}}clone(){return(new this.constructor).copy(this)}copy(e){return this.arcLengthDivisions=e.arcLengthDivisions,this}toJSON(){const e={metadata:{version:4.5,type:"Curve",generator:"Curve.toJSON"}};return e.arcLengthDivisions=this.arcLengthDivisions,e.type=this.type,e}fromJSON(e){return this.arcLengthDivisions=e.arcLengthDivisions,this}}class kh extends Vh{constructor(e=0,t=0,r=1,n=1,i=0,a=2*Math.PI,s=!1,o=0){super(),this.type="EllipseCurve",this.aX=e,this.aY=t,this.xRadius=r,this.yRadius=n,this.aStartAngle=i,this.aEndAngle=a,this.aClockwise=s,this.aRotation=o}getPoint(e,t){const r=t||new tr;var n=2*Math.PI;let i=this.aEndAngle-this.aStartAngle;for(var a=Math.abs(i)<Number.EPSILON;i<0;)i+=n;for(;i>n;)i-=n;i<Number.EPSILON&&(i=a?0:n),!0!==this.aClockwise||a||(i===n?i=-n:i-=n);var s=this.aStartAngle+e*i;let o=this.aX+this.xRadius*Math.cos(s),l=this.aY+this.yRadius*Math.sin(s);return 0!==this.aRotation&&(t=Math.cos(this.aRotation),a=Math.sin(this.aRotation),e=o-this.aX,s=l-this.aY,o=e*t-s*a+this.aX,l=e*a+s*t+this.aY),r.set(o,l)}copy(e){return super.copy(e),this.aX=e.aX,this.aY=e.aY,this.xRadius=e.xRadius,this.yRadius=e.yRadius,this.aStartAngle=e.aStartAngle,this.aEndAngle=e.aEndAngle,this.aClockwise=e.aClockwise,this.aRotation=e.aRotation,this}toJSON(){const e=super.toJSON();return e.aX=this.aX,e.aY=this.aY,e.xRadius=this.xRadius,e.yRadius=this.yRadius,e.aStartAngle=this.aStartAngle,e.aEndAngle=this.aEndAngle,e.aClockwise=this.aClockwise,e.aRotation=this.aRotation,e}fromJSON(e){return super.fromJSON(e),this.aX=e.aX,this.aY=e.aY,this.xRadius=e.xRadius,this.yRadius=e.yRadius,this.aStartAngle=e.aStartAngle,this.aEndAngle=e.aEndAngle,this.aClockwise=e.aClockwise,this.aRotation=e.aRotation,this}}kh.prototype.isEllipseCurve=!0;class Wh extends kh{constructor(e,t,r,n,i,a){super(e,t,r,r,n,i,a),this.type="ArcCurve"}}function jh(){let i=0,a=0,s=0,o=0;function l(e,t,r,n){i=e,a=r,s=-3*e+3*t-2*r-n,o=2*e-2*t+r+n}return{initCatmullRom:function(e,t,r,n,i){l(t,r,i*(r-e),i*(n-t))},initNonuniformCatmullRom:function(e,t,r,n,i,a,s){i=(t-e)/i-(r-e)/(i+a)+(r-t)/a,s=(r-t)/a-(n-t)/(a+s)+(n-r)/s;l(t,r,i*=a,s*=a)},calc:function(e){var t=e*e,r=t*e;return i+a*e+s*t+o*r}}}Wh.prototype.isArcCurve=!0;const Xh=new pr,qh=new jh,Yh=new jh,Zh=new jh;class Jh extends Vh{constructor(e=[],t=!1,r="centripetal",n=.5){super(),this.type="CatmullRomCurve3",this.points=e,this.closed=t,this.curveType=r,this.tension=n}getPoint(e,n=new pr){const t=n;var r=this.points,n=r.length,e=(n-(this.closed?0:1))*e;let i=Math.floor(e),a=e-i;this.closed?i+=0<i?0:(Math.floor(Math.abs(i)/n)+1)*n:0===a&&i===n-1&&(i=n-2,a=1);let s,o;s=this.closed||0<i?r[(i-1)%n]:(Xh.subVectors(r[0],r[1]).add(r[0]),Xh);const l=r[i%n],h=r[(i+1)%n];if(o=this.closed||i+2<n?r[(i+2)%n]:(Xh.subVectors(r[n-1],r[n-2]).add(r[n-1]),Xh),"centripetal"===this.curveType||"chordal"===this.curveType){n="chordal"===this.curveType?.5:.25;let e=Math.pow(s.distanceToSquared(l),n),t=Math.pow(l.distanceToSquared(h),n),r=Math.pow(h.distanceToSquared(o),n);t<1e-4&&(t=1),e<1e-4&&(e=t),r<1e-4&&(r=t),qh.initNonuniformCatmullRom(s.x,l.x,h.x,o.x,e,t,r),Yh.initNonuniformCatmullRom(s.y,l.y,h.y,o.y,e,t,r),Zh.initNonuniformCatmullRom(s.z,l.z,h.z,o.z,e,t,r)}else"catmullrom"===this.curveType&&(qh.initCatmullRom(s.x,l.x,h.x,o.x,this.tension),Yh.initCatmullRom(s.y,l.y,h.y,o.y,this.tension),Zh.initCatmullRom(s.z,l.z,h.z,o.z,this.tension));return t.set(qh.calc(a),Yh.calc(a),Zh.calc(a)),t}copy(r){super.copy(r),this.points=[];for(let e=0,t=r.points.length;e<t;e++){const n=r.points[e];this.points.push(n.clone())}return this.closed=r.closed,this.curveType=r.curveType,this.tension=r.tension,this}toJSON(){const r=super.toJSON();r.points=[];for(let e=0,t=this.points.length;e<t;e++){const n=this.points[e];r.points.push(n.toArray())}return r.closed=this.closed,r.curveType=this.curveType,r.tension=this.tension,r}fromJSON(r){super.fromJSON(r),this.points=[];for(let e=0,t=r.points.length;e<t;e++){var n=r.points[e];this.points.push((new pr).fromArray(n))}return this.closed=r.closed,this.curveType=r.curveType,this.tension=r.tension,this}}function Kh(e,t,r,n,i){var a=.5*(n-t),t=.5*(i-r),i=e*e;return(2*r-2*n+a+t)*(e*i)+(-3*r+3*n-2*a-t)*i+a*e+r}function Qh(e,t,r,n){return(i=1-(i=e))*i*t+2*(1-e)*e*r+e*e*n;var i}function $h(e,t,r,n,i){return(a=1-(a=e))*a*a*t+3*(t=1-e)*t*e*r+3*(1-e)*e*e*n+e*e*e*i;var a}class ec extends Vh{constructor(e=new tr,t=new tr,r=new tr,n=new tr){super(),this.type="CubicBezierCurve",this.v0=e,this.v1=t,this.v2=r,this.v3=n}getPoint(e,t=new tr){const r=t;var n=this.v0,i=this.v1,a=this.v2,t=this.v3;return r.set($h(e,n.x,i.x,a.x,t.x),$h(e,n.y,i.y,a.y,t.y)),r}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this.v3.copy(e.v3),this}toJSON(){const e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e.v3=this.v3.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this.v3.fromArray(e.v3),this}}ec.prototype.isCubicBezierCurve=Jh.prototype.isCatmullRomCurve3=!0;class tc extends Vh{constructor(e=new pr,t=new pr,r=new pr,n=new pr){super(),this.type="CubicBezierCurve3",this.v0=e,this.v1=t,this.v2=r,this.v3=n}getPoint(e,t=new pr){const r=t;var n=this.v0,i=this.v1,a=this.v2,t=this.v3;return r.set($h(e,n.x,i.x,a.x,t.x),$h(e,n.y,i.y,a.y,t.y),$h(e,n.z,i.z,a.z,t.z)),r}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this.v3.copy(e.v3),this}toJSON(){const e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e.v3=this.v3.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this.v3.fromArray(e.v3),this}}class rc extends Vh{constructor(e=new tr,t=new tr){super(),this.type="LineCurve",this.v1=e,this.v2=t}getPoint(e,t=new tr){const r=t;return 1===e?r.copy(this.v2):(r.copy(this.v2).sub(this.v1),r.multiplyScalar(e).add(this.v1)),r}getPointAt(e,t){return this.getPoint(e,t)}getTangent(e,t){const r=t||new tr;return r.copy(this.v2).sub(this.v1).normalize(),r}copy(e){return super.copy(e),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){const e=super.toJSON();return e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}rc.prototype.isLineCurve=tc.prototype.isCubicBezierCurve3=!0;class nc extends Vh{constructor(e=new pr,t=new pr){super(),this.type="LineCurve3",this.isLineCurve3=!0,this.v1=e,this.v2=t}getPoint(e,t=new pr){const r=t;return 1===e?r.copy(this.v2):(r.copy(this.v2).sub(this.v1),r.multiplyScalar(e).add(this.v1)),r}getPointAt(e,t){return this.getPoint(e,t)}copy(e){return super.copy(e),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){const e=super.toJSON();return e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}class ic extends Vh{constructor(e=new tr,t=new tr,r=new tr){super(),this.type="QuadraticBezierCurve",this.v0=e,this.v1=t,this.v2=r}getPoint(e,t=new tr){const r=t;var n=this.v0,i=this.v1,t=this.v2;return r.set(Qh(e,n.x,i.x,t.x),Qh(e,n.y,i.y,t.y)),r}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){const e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}ic.prototype.isQuadraticBezierCurve=!0;class ac extends Vh{constructor(e=new pr,t=new pr,r=new pr){super(),this.type="QuadraticBezierCurve3",this.v0=e,this.v1=t,this.v2=r}getPoint(e,t=new pr){const r=t;var n=this.v0,i=this.v1,t=this.v2;return r.set(Qh(e,n.x,i.x,t.x),Qh(e,n.y,i.y,t.y),Qh(e,n.z,i.z,t.z)),r}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){const e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}class sc extends Vh{constructor(e=[]){super(),this.type="SplineCurve",this.points=e}getPoint(e,t=new tr){const r=t;var n=this.points,i=(n.length-1)*e,a=Math.floor(i),s=i-a,t=n[0===a?a:a-1],e=n[a],i=n[a>n.length-2?n.length-1:a+1],a=n[a>n.length-3?n.length-1:a+2];return r.set(Kh(s,t.x,e.x,i.x,a.x),Kh(s,t.y,e.y,i.y,a.y)),r}copy(r){super.copy(r),this.points=[];for(let e=0,t=r.points.length;e<t;e++){const n=r.points[e];this.points.push(n.clone())}return this}toJSON(){const r=super.toJSON();r.points=[];for(let e=0,t=this.points.length;e<t;e++){const n=this.points[e];r.points.push(n.toArray())}return r}fromJSON(r){super.fromJSON(r),this.points=[];for(let e=0,t=r.points.length;e<t;e++){var n=r.points[e];this.points.push((new tr).fromArray(n))}return this}}sc.prototype.isSplineCurve=ac.prototype.isQuadraticBezierCurve3=!0;var oc=Object.freeze({__proto__:null,ArcCurve:Wh,CatmullRomCurve3:Jh,CubicBezierCurve:ec,CubicBezierCurve3:tc,EllipseCurve:kh,LineCurve:rc,LineCurve3:nc,QuadraticBezierCurve:ic,QuadraticBezierCurve3:ac,SplineCurve:sc});class lc extends Vh{constructor(){super(),this.type="CurvePath",this.curves=[],this.autoClose=!1}add(e){this.curves.push(e)}closePath(){const e=this.curves[0].getPoint(0);var t=this.curves[this.curves.length-1].getPoint(1);e.equals(t)||this.curves.push(new rc(t,e))}getPoint(e){var t=e*this.getLength(),r=this.getCurveLengths();let n=0;for(;n<r.length;){if(r[n]>=t){var i=r[n]-t;const s=this.curves[n];var a=s.getLength();return s.getPointAt(0===a?0:1-i/a)}n++}return null}getLength(){var e=this.getCurveLengths();return e[e.length-1]}updateArcLengths(){this.needsUpdate=!0,this.cacheLengths=null,this.getCurveLengths()}getCurveLengths(){if(this.cacheLengths&&this.cacheLengths.length===this.curves.length)return this.cacheLengths;const r=[];let n=0;for(let e=0,t=this.curves.length;e<t;e++)n+=this.curves[e].getLength(),r.push(n);return this.cacheLengths=r,r}getSpacedPoints(t=40){const r=[];for(let e=0;e<=t;e++)r.push(this.getPoint(e/t));return this.autoClose&&r.push(r[0]),r}getPoints(r=12){const n=[];let i;for(let e=0,t=this.curves;e<t.length;e++){const l=t[e];var a=l&&l.isEllipseCurve?2*r:l&&(l.isLineCurve||l.isLineCurve3)?1:l&&l.isSplineCurve?r*l.points.length:r,s=l.getPoints(a);for(let e=0;e<s.length;e++){var o=s[e];i&&i.equals(o)||(n.push(o),i=o)}}return this.autoClose&&1<n.length&&!n[n.length-1].equals(n[0])&&n.push(n[0]),n}copy(r){super.copy(r),this.curves=[];for(let e=0,t=r.curves.length;e<t;e++){const n=r.curves[e];this.curves.push(n.clone())}return this.autoClose=r.autoClose,this}toJSON(){const r=super.toJSON();r.autoClose=this.autoClose,r.curves=[];for(let e=0,t=this.curves.length;e<t;e++){const n=this.curves[e];r.curves.push(n.toJSON())}return r}fromJSON(r){super.fromJSON(r),this.autoClose=r.autoClose,this.curves=[];for(let e=0,t=r.curves.length;e<t;e++){var n=r.curves[e];this.curves.push((new oc[n.type]).fromJSON(n))}return this}}class hc extends lc{constructor(e){super(),this.type="Path",this.currentPoint=new tr,e&&this.setFromPoints(e)}setFromPoints(r){this.moveTo(r[0].x,r[0].y);for(let e=1,t=r.length;e<t;e++)this.lineTo(r[e].x,r[e].y);return this}moveTo(e,t){return this.currentPoint.set(e,t),this}lineTo(e,t){var r=new rc(this.currentPoint.clone(),new tr(e,t));return this.curves.push(r),this.currentPoint.set(e,t),this}quadraticCurveTo(e,t,r,n){t=new ic(this.currentPoint.clone(),new tr(e,t),new tr(r,n));return this.curves.push(t),this.currentPoint.set(r,n),this}bezierCurveTo(e,t,r,n,i,a){n=new ec(this.currentPoint.clone(),new tr(e,t),new tr(r,n),new tr(i,a));return this.curves.push(n),this.currentPoint.set(i,a),this}splineThru(e){var t=[this.currentPoint.clone()].concat(e),t=new sc(t);return this.curves.push(t),this.currentPoint.copy(e[e.length-1]),this}arc(e,t,r,n,i,a){var s=this.currentPoint.x,o=this.currentPoint.y;return this.absarc(e+s,t+o,r,n,i,a),this}absarc(e,t,r,n,i,a){return this.absellipse(e,t,r,r,n,i,a),this}ellipse(e,t,r,n,i,a,s,o){var l=this.currentPoint.x,h=this.currentPoint.y;return this.absellipse(e+l,t+h,r,n,i,a,s,o),this}absellipse(e,t,r,n,i,a,s,o){const l=new kh(e,t,r,n,i,a,s,o);if(0<this.curves.length){const h=l.getPoint(0);h.equals(this.currentPoint)||this.lineTo(h.x,h.y)}this.curves.push(l);o=l.getPoint(1);return this.currentPoint.copy(o),this}copy(e){return super.copy(e),this.currentPoint.copy(e.currentPoint),this}toJSON(){const e=super.toJSON();return e.currentPoint=this.currentPoint.toArray(),e}fromJSON(e){return super.fromJSON(e),this.currentPoint.fromArray(e.currentPoint),this}}class cc extends hc{constructor(e){super(e),this.uuid=qt(),this.type="Shape",this.holes=[]}getPointsHoles(r){const n=[];for(let e=0,t=this.holes.length;e<t;e++)n[e]=this.holes[e].getPoints(r);return n}extractPoints(e){return{shape:this.getPoints(e),holes:this.getPointsHoles(e)}}copy(r){super.copy(r),this.holes=[];for(let e=0,t=r.holes.length;e<t;e++){const n=r.holes[e];this.holes.push(n.clone())}return this}toJSON(){const r=super.toJSON();r.uuid=this.uuid,r.holes=[];for(let e=0,t=this.holes.length;e<t;e++){const n=this.holes[e];r.holes.push(n.toJSON())}return r}fromJSON(r){super.fromJSON(r),this.uuid=r.uuid,this.holes=[];for(let e=0,t=r.holes.length;e<t;e++){var n=r.holes[e];this.holes.push((new hc).fromJSON(n))}return this}}class uc extends gn{constructor(e,t=1){super(),this.type="Light",this.color=new Hn(e),this.intensity=t}dispose(){}copy(e){return super.copy(e),this.color.copy(e.color),this.intensity=e.intensity,this}toJSON(e){const t=super.toJSON(e);return t.object.color=this.color.getHex(),t.object.intensity=this.intensity,void 0!==this.groundColor&&(t.object.groundColor=this.groundColor.getHex()),void 0!==this.distance&&(t.object.distance=this.distance),void 0!==this.angle&&(t.object.angle=this.angle),void 0!==this.decay&&(t.object.decay=this.decay),void 0!==this.penumbra&&(t.object.penumbra=this.penumbra),void 0!==this.shadow&&(t.object.shadow=this.shadow.toJSON()),t}}uc.prototype.isLight=!0;class dc extends uc{constructor(e,t,r){super(e,r),this.type="HemisphereLight",this.position.copy(gn.DefaultUp),this.updateMatrix(),this.groundColor=new Hn(t)}copy(e){return uc.prototype.copy.call(this,e),this.groundColor.copy(e.groundColor),this}}dc.prototype.isHemisphereLight=!0;const pc=new Wr,mc=new pr,fc=new pr;class gc{constructor(e){this.camera=e,this.bias=0,this.normalBias=0,this.radius=1,this.mapSize=new tr(512,512),this.map=null,this.mapPass=null,this.matrix=new Wr,this.autoUpdate=!0,this.needsUpdate=!1,this._frustum=new ki,this._frameExtents=new tr(1,1),this._viewportCount=1,this._viewports=[new lr(0,0,1,1)]}getViewportCount(){return this._viewportCount}getFrustum(){return this._frustum}updateMatrices(e){const t=this.camera,r=this.matrix;mc.setFromMatrixPosition(e.matrixWorld),t.position.copy(mc),fc.setFromMatrixPosition(e.target.matrixWorld),t.lookAt(fc),t.updateMatrixWorld(),pc.multiplyMatrices(t.projectionMatrix,t.matrixWorldInverse),this._frustum.setFromProjectionMatrix(pc),r.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1),r.multiply(t.projectionMatrix),r.multiply(t.matrixWorldInverse)}getViewport(e){return this._viewports[e]}getFrameExtents(){return this._frameExtents}dispose(){this.map&&this.map.dispose(),this.mapPass&&this.mapPass.dispose()}copy(e){return this.camera=e.camera.clone(),this.bias=e.bias,this.radius=e.radius,this.mapSize.copy(e.mapSize),this}clone(){return(new this.constructor).copy(this)}toJSON(){const e={};return 0!==this.bias&&(e.bias=this.bias),0!==this.normalBias&&(e.normalBias=this.normalBias),1!==this.radius&&(e.radius=this.radius),512===this.mapSize.x&&512===this.mapSize.y||(e.mapSize=this.mapSize.toArray()),e.camera=this.camera.toJSON(!1).object,delete e.camera.matrix,e}}class vc extends gc{constructor(){super(new Ui(50,1,.5,500)),this.focus=1}updateMatrices(e){const t=this.camera;var r=2*Xt*e.angle*this.focus,n=this.mapSize.width/this.mapSize.height,i=e.distance||t.far;r===t.fov&&n===t.aspect&&i===t.far||(t.fov=r,t.aspect=n,t.far=i,t.updateProjectionMatrix()),super.updateMatrices(e)}copy(e){return super.copy(e),this.focus=e.focus,this}}vc.prototype.isSpotLightShadow=!0;class yc extends uc{constructor(e,t,r=0,n=Math.PI/3,i=0,a=1){super(e,t),this.type="SpotLight",this.position.copy(gn.DefaultUp),this.updateMatrix(),this.target=new gn,this.distance=r,this.angle=n,this.penumbra=i,this.decay=a,this.shadow=new vc}get power(){return this.intensity*Math.PI}set power(e){this.intensity=e/Math.PI}dispose(){this.shadow.dispose()}copy(e){return super.copy(e),this.distance=e.distance,this.angle=e.angle,this.penumbra=e.penumbra,this.decay=e.decay,this.target=e.target.clone(),this.shadow=e.shadow.clone(),this}}yc.prototype.isSpotLight=!0;const xc=new Wr,_c=new pr,Mc=new pr;class wc extends gc{constructor(){super(new Ui(90,1,.5,500)),this._frameExtents=new tr(4,2),this._viewportCount=6,this._viewports=[new lr(2,1,1,1),new lr(0,1,1,1),new lr(3,1,1,1),new lr(1,1,1,1),new lr(3,0,1,1),new lr(1,0,1,1)],this._cubeDirections=[new pr(1,0,0),new pr(-1,0,0),new pr(0,0,1),new pr(0,0,-1),new pr(0,1,0),new pr(0,-1,0)],this._cubeUps=[new pr(0,1,0),new pr(0,1,0),new pr(0,1,0),new pr(0,1,0),new pr(0,0,1),new pr(0,0,-1)]}updateMatrices(e,t=0){const r=this.camera,n=this.matrix;var i=e.distance||r.far;i!==r.far&&(r.far=i,r.updateProjectionMatrix()),_c.setFromMatrixPosition(e.matrixWorld),r.position.copy(_c),Mc.copy(r.position),Mc.add(this._cubeDirections[t]),r.up.copy(this._cubeUps[t]),r.lookAt(Mc),r.updateMatrixWorld(),n.makeTranslation(-_c.x,-_c.y,-_c.z),xc.multiplyMatrices(r.projectionMatrix,r.matrixWorldInverse),this._frustum.setFromProjectionMatrix(xc)}}wc.prototype.isPointLightShadow=!0;class bc extends uc{constructor(e,t,r=0,n=1){super(e,t),this.type="PointLight",this.distance=r,this.decay=n,this.shadow=new wc}get power(){return 4*this.intensity*Math.PI}set power(e){this.intensity=e/(4*Math.PI)}dispose(){this.shadow.dispose()}copy(e){return super.copy(e),this.distance=e.distance,this.decay=e.decay,this.shadow=e.shadow.clone(),this}}bc.prototype.isPointLight=!0;class Ec extends Bi{constructor(e=-1,t=1,r=1,n=-1,i=.1,a=2e3){super(),this.type="OrthographicCamera",this.zoom=1,this.view=null,this.left=e,this.right=t,this.top=r,this.bottom=n,this.near=i,this.far=a,this.updateProjectionMatrix()}copy(e,t){return super.copy(e,t),this.left=e.left,this.right=e.right,this.top=e.top,this.bottom=e.bottom,this.near=e.near,this.far=e.far,this.zoom=e.zoom,this.view=null===e.view?null:Object.assign({},e.view),this}setViewOffset(e,t,r,n,i,a){null===this.view&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=e,this.view.fullHeight=t,this.view.offsetX=r,this.view.offsetY=n,this.view.width=i,this.view.height=a,this.updateProjectionMatrix()}clearViewOffset(){null!==this.view&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){var e=(this.right-this.left)/(2*this.zoom),t=(this.top-this.bottom)/(2*this.zoom),r=(this.right+this.left)/2,n=(this.top+this.bottom)/2;let i=r-e,a=r+e,s=n+t,o=n-t;null!==this.view&&this.view.enabled&&(n=(this.right-this.left)/this.view.fullWidth/this.zoom,t=(this.top-this.bottom)/this.view.fullHeight/this.zoom,i+=n*this.view.offsetX,a=i+n*this.view.width,s-=t*this.view.offsetY,o=s-t*this.view.height),this.projectionMatrix.makeOrthographic(i,a,s,o,this.near,this.far),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(e){const t=super.toJSON(e);return t.object.zoom=this.zoom,t.object.left=this.left,t.object.right=this.right,t.object.top=this.top,t.object.bottom=this.bottom,t.object.near=this.near,t.object.far=this.far,null!==this.view&&(t.object.view=Object.assign({},this.view)),t}}Ec.prototype.isOrthographicCamera=!0;class Tc extends gc{constructor(){super(new Ec(-5,5,5,-5,.5,500))}}Tc.prototype.isDirectionalLightShadow=!0;class Sc extends uc{constructor(e,t){super(e,t),this.type="DirectionalLight",this.position.copy(gn.DefaultUp),this.updateMatrix(),this.target=new gn,this.shadow=new Tc}dispose(){this.shadow.dispose()}copy(e){return super.copy(e),this.target=e.target.clone(),this.shadow=e.shadow.clone(),this}}Sc.prototype.isDirectionalLight=!0;class Ac extends uc{constructor(e,t){super(e,t),this.type="AmbientLight"}}Ac.prototype.isAmbientLight=!0;class Rc extends uc{constructor(e,t,r=10,n=10){super(e,t),this.type="RectAreaLight",this.width=r,this.height=n}copy(e){return super.copy(e),this.width=e.width,this.height=e.height,this}toJSON(e){const t=super.toJSON(e);return t.object.width=this.width,t.object.height=this.height,t}}Rc.prototype.isRectAreaLight=!0;class Lc{constructor(){this.coefficients=[];for(let e=0;e<9;e++)this.coefficients.push(new pr)}set(t){for(let e=0;e<9;e++)this.coefficients[e].copy(t[e]);return this}zero(){for(let e=0;e<9;e++)this.coefficients[e].set(0,0,0);return this}getAt(e,t){var r=e.x,n=e.y,i=e.z,e=this.coefficients;return t.copy(e[0]).multiplyScalar(.282095),t.addScaledVector(e[1],.488603*n),t.addScaledVector(e[2],.488603*i),t.addScaledVector(e[3],.488603*r),t.addScaledVector(e[4],r*n*1.092548),t.addScaledVector(e[5],n*i*1.092548),t.addScaledVector(e[6],.315392*(3*i*i-1)),t.addScaledVector(e[7],r*i*1.092548),t.addScaledVector(e[8],.546274*(r*r-n*n)),t}getIrradianceAt(e,t){var r=e.x,n=e.y,i=e.z,e=this.coefficients;return t.copy(e[0]).multiplyScalar(.886227),t.addScaledVector(e[1],1.023328*n),t.addScaledVector(e[2],1.023328*i),t.addScaledVector(e[3],1.023328*r),t.addScaledVector(e[4],.858086*r*n),t.addScaledVector(e[5],.858086*n*i),t.addScaledVector(e[6],.743125*i*i-.247708),t.addScaledVector(e[7],.858086*r*i),t.addScaledVector(e[8],.429043*(r*r-n*n)),t}add(t){for(let e=0;e<9;e++)this.coefficients[e].add(t.coefficients[e]);return this}addScaledSH(t,r){for(let e=0;e<9;e++)this.coefficients[e].addScaledVector(t.coefficients[e],r);return this}scale(t){for(let e=0;e<9;e++)this.coefficients[e].multiplyScalar(t);return this}lerp(t,r){for(let e=0;e<9;e++)this.coefficients[e].lerp(t.coefficients[e],r);return this}equals(t){for(let e=0;e<9;e++)if(!this.coefficients[e].equals(t.coefficients[e]))return!1;return!0}copy(e){return this.set(e.coefficients)}clone(){return(new this.constructor).copy(this)}fromArray(t,r=0){const n=this.coefficients;for(let e=0;e<9;e++)n[e].fromArray(t,r+3*e);return this}toArray(t=[],r=0){const n=this.coefficients;for(let e=0;e<9;e++)n[e].toArray(t,r+3*e);return t}static getBasisAt(e,t){var r=e.x,n=e.y,e=e.z;t[0]=.282095,t[1]=.488603*n,t[2]=.488603*e,t[3]=.488603*r,t[4]=1.092548*r*n,t[5]=1.092548*n*e,t[6]=.315392*(3*e*e-1),t[7]=1.092548*r*e,t[8]=.546274*(r*r-n*n)}}Lc.prototype.isSphericalHarmonics3=!0;class Cc extends uc{constructor(e=new Lc,t=1){super(void 0,t),this.sh=e}copy(e){return super.copy(e),this.sh.copy(e.sh),this}fromJSON(e){return this.intensity=e.intensity,this.sh.fromArray(e.sh),this}toJSON(e){const t=super.toJSON(e);return t.object.sh=this.sh.toArray(),t}}Cc.prototype.isLightProbe=!0;class Pc extends Fh{constructor(e){super(e),this.textures={}}load(t,r,e,n){const i=this,a=new Uh(i.manager);a.setPath(i.path),a.setRequestHeader(i.requestHeader),a.setWithCredentials(i.withCredentials),a.load(t,function(e){try{r(i.parse(JSON.parse(e)))}catch(e){n?n(e):console.error(e),i.manager.itemError(t)}},e,n)}parse(t){const r=this.textures;function e(e){return void 0===r[e]&&console.warn("THREE.MaterialLoader: Undefined texture",e),r[e]}const n=new vh[t.type];if(void 0!==t.uuid&&(n.uuid=t.uuid),void 0!==t.name&&(n.name=t.name),void 0!==t.color&&void 0!==n.color&&n.color.setHex(t.color),void 0!==t.roughness&&(n.roughness=t.roughness),void 0!==t.metalness&&(n.metalness=t.metalness),void 0!==t.sheen&&(n.sheen=(new Hn).setHex(t.sheen)),void 0!==t.emissive&&void 0!==n.emissive&&n.emissive.setHex(t.emissive),void 0!==t.specular&&void 0!==n.specular&&n.specular.setHex(t.specular),void 0!==t.shininess&&(n.shininess=t.shininess),void 0!==t.clearcoat&&(n.clearcoat=t.clearcoat),void 0!==t.clearcoatRoughness&&(n.clearcoatRoughness=t.clearcoatRoughness),void 0!==t.transmission&&(n.transmission=t.transmission),void 0!==t.thickness&&(n.thickness=t.thickness),void 0!==t.attenuationDistance&&(n.attenuationDistance=t.attenuationDistance),void 0!==t.attenuationColor&&void 0!==n.attenuationColor&&n.attenuationColor.setHex(t.attenuationColor),void 0!==t.fog&&(n.fog=t.fog),void 0!==t.flatShading&&(n.flatShading=t.flatShading),void 0!==t.blending&&(n.blending=t.blending),void 0!==t.combine&&(n.combine=t.combine),void 0!==t.side&&(n.side=t.side),void 0!==t.shadowSide&&(n.shadowSide=t.shadowSide),void 0!==t.opacity&&(n.opacity=t.opacity),void 0!==t.transparent&&(n.transparent=t.transparent),void 0!==t.alphaTest&&(n.alphaTest=t.alphaTest),void 0!==t.depthTest&&(n.depthTest=t.depthTest),void 0!==t.depthWrite&&(n.depthWrite=t.depthWrite),void 0!==t.colorWrite&&(n.colorWrite=t.colorWrite),void 0!==t.stencilWrite&&(n.stencilWrite=t.stencilWrite),void 0!==t.stencilWriteMask&&(n.stencilWriteMask=t.stencilWriteMask),void 0!==t.stencilFunc&&(n.stencilFunc=t.stencilFunc),void 0!==t.stencilRef&&(n.stencilRef=t.stencilRef),void 0!==t.stencilFuncMask&&(n.stencilFuncMask=t.stencilFuncMask),void 0!==t.stencilFail&&(n.stencilFail=t.stencilFail),void 0!==t.stencilZFail&&(n.stencilZFail=t.stencilZFail),void 0!==t.stencilZPass&&(n.stencilZPass=t.stencilZPass),void 0!==t.wireframe&&(n.wireframe=t.wireframe),void 0!==t.wireframeLinewidth&&(n.wireframeLinewidth=t.wireframeLinewidth),void 0!==t.wireframeLinecap&&(n.wireframeLinecap=t.wireframeLinecap),void 0!==t.wireframeLinejoin&&(n.wireframeLinejoin=t.wireframeLinejoin),void 0!==t.rotation&&(n.rotation=t.rotation),1!==t.linewidth&&(n.linewidth=t.linewidth),void 0!==t.dashSize&&(n.dashSize=t.dashSize),void 0!==t.gapSize&&(n.gapSize=t.gapSize),void 0!==t.scale&&(n.scale=t.scale),void 0!==t.polygonOffset&&(n.polygonOffset=t.polygonOffset),void 0!==t.polygonOffsetFactor&&(n.polygonOffsetFactor=t.polygonOffsetFactor),void 0!==t.polygonOffsetUnits&&(n.polygonOffsetUnits=t.polygonOffsetUnits),void 0!==t.morphTargets&&(n.morphTargets=t.morphTargets),void 0!==t.morphNormals&&(n.morphNormals=t.morphNormals),void 0!==t.dithering&&(n.dithering=t.dithering),void 0!==t.alphaToCoverage&&(n.alphaToCoverage=t.alphaToCoverage),void 0!==t.premultipliedAlpha&&(n.premultipliedAlpha=t.premultipliedAlpha),void 0!==t.vertexTangents&&(n.vertexTangents=t.vertexTangents),void 0!==t.visible&&(n.visible=t.visible),void 0!==t.toneMapped&&(n.toneMapped=t.toneMapped),void 0!==t.userData&&(n.userData=t.userData),void 0!==t.vertexColors&&("number"==typeof t.vertexColors?n.vertexColors=0<t.vertexColors:n.vertexColors=t.vertexColors),void 0!==t.uniforms)for(const a in t.uniforms){var i=t.uniforms[a];switch(n.uniforms[a]={},i.type){case"t":n.uniforms[a].value=e(i.value);break;case"c":n.uniforms[a].value=(new Hn).setHex(i.value);break;case"v2":n.uniforms[a].value=(new tr).fromArray(i.value);break;case"v3":n.uniforms[a].value=(new pr).fromArray(i.value);break;case"v4":n.uniforms[a].value=(new lr).fromArray(i.value);break;case"m3":n.uniforms[a].value=(new rr).fromArray(i.value);break;case"m4":n.uniforms[a].value=(new Wr).fromArray(i.value);break;default:n.uniforms[a].value=i.value}}if(void 0!==t.defines&&(n.defines=t.defines),void 0!==t.vertexShader&&(n.vertexShader=t.vertexShader),void 0!==t.fragmentShader&&(n.fragmentShader=t.fragmentShader),void 0!==t.extensions)for(const s in t.extensions)n.extensions[s]=t.extensions[s];if(void 0!==t.shading&&(n.flatShading=1===t.shading),void 0!==t.size&&(n.size=t.size),void 0!==t.sizeAttenuation&&(n.sizeAttenuation=t.sizeAttenuation),void 0!==t.map&&(n.map=e(t.map)),void 0!==t.matcap&&(n.matcap=e(t.matcap)),void 0!==t.alphaMap&&(n.alphaMap=e(t.alphaMap)),void 0!==t.bumpMap&&(n.bumpMap=e(t.bumpMap)),void 0!==t.bumpScale&&(n.bumpScale=t.bumpScale),void 0!==t.normalMap&&(n.normalMap=e(t.normalMap)),void 0!==t.normalMapType&&(n.normalMapType=t.normalMapType),void 0!==t.normalScale){let e=t.normalScale;!1===Array.isArray(e)&&(e=[e,e]),n.normalScale=(new tr).fromArray(e)}return void 0!==t.displacementMap&&(n.displacementMap=e(t.displacementMap)),void 0!==t.displacementScale&&(n.displacementScale=t.displacementScale),void 0!==t.displacementBias&&(n.displacementBias=t.displacementBias),void 0!==t.roughnessMap&&(n.roughnessMap=e(t.roughnessMap)),void 0!==t.metalnessMap&&(n.metalnessMap=e(t.metalnessMap)),void 0!==t.emissiveMap&&(n.emissiveMap=e(t.emissiveMap)),void 0!==t.emissiveIntensity&&(n.emissiveIntensity=t.emissiveIntensity),void 0!==t.specularMap&&(n.specularMap=e(t.specularMap)),void 0!==t.envMap&&(n.envMap=e(t.envMap)),void 0!==t.envMapIntensity&&(n.envMapIntensity=t.envMapIntensity),void 0!==t.reflectivity&&(n.reflectivity=t.reflectivity),void 0!==t.refractionRatio&&(n.refractionRatio=t.refractionRatio),void 0!==t.lightMap&&(n.lightMap=e(t.lightMap)),void 0!==t.lightMapIntensity&&(n.lightMapIntensity=t.lightMapIntensity),void 0!==t.aoMap&&(n.aoMap=e(t.aoMap)),void 0!==t.aoMapIntensity&&(n.aoMapIntensity=t.aoMapIntensity),void 0!==t.gradientMap&&(n.gradientMap=e(t.gradientMap)),void 0!==t.clearcoatMap&&(n.clearcoatMap=e(t.clearcoatMap)),void 0!==t.clearcoatRoughnessMap&&(n.clearcoatRoughnessMap=e(t.clearcoatRoughnessMap)),void 0!==t.clearcoatNormalMap&&(n.clearcoatNormalMap=e(t.clearcoatNormalMap)),void 0!==t.clearcoatNormalScale&&(n.clearcoatNormalScale=(new tr).fromArray(t.clearcoatNormalScale)),void 0!==t.transmissionMap&&(n.transmissionMap=e(t.transmissionMap)),void 0!==t.thicknessMap&&(n.thicknessMap=e(t.thicknessMap)),n}setTextures(e){return this.textures=e,this}}class Ic{static decodeText(r){if("undefined"!=typeof TextDecoder)return(new TextDecoder).decode(r);let n="";for(let e=0,t=r.length;e<t;e++)n+=String.fromCharCode(r[e]);try{return decodeURIComponent(escape(n))}catch(e){return n}}static extractUrlBase(e){var t=e.lastIndexOf("/");return-1===t?"./":e.substr(0,t+1)}}class Dc extends ui{constructor(){super(),this.type="InstancedBufferGeometry",this.instanceCount=1/0}copy(e){return super.copy(e),this.instanceCount=e.instanceCount,this}clone(){return(new this.constructor).copy(this)}toJSON(){const e=super.toJSON(this);return e.instanceCount=this.instanceCount,e.isInstancedBufferGeometry=!0,e}}Dc.prototype.isInstancedBufferGeometry=!0;class Nc extends Wn{constructor(e,t,r,n){"number"==typeof r&&(n=r,r=!1,console.error("THREE.InstancedBufferAttribute: The constructor now expects normalized as the third argument.")),super(e,t,r),this.meshPerAttribute=n||1}copy(e){return super.copy(e),this.meshPerAttribute=e.meshPerAttribute,this}toJSON(){const e=super.toJSON();return e.meshPerAttribute=this.meshPerAttribute,e.isInstancedBufferAttribute=!0,e}}Nc.prototype.isInstancedBufferAttribute=!0;class Fc extends Fh{constructor(e){super(e)}load(t,r,e,n){const i=this,a=new Uh(i.manager);a.setPath(i.path),a.setRequestHeader(i.requestHeader),a.setWithCredentials(i.withCredentials),a.load(t,function(e){try{r(i.parse(JSON.parse(e)))}catch(e){n?n(e):console.error(e),i.manager.itemError(t)}},e,n)}parse(r){const i={},a={};function n(e,t){if(void 0!==i[t])return i[t];var r=e.interleavedBuffers[t],e=function(e,t){if(void 0!==a[t])return a[t];e=e.arrayBuffers,e=e[t],e=new Uint32Array(e).buffer;return a[t]=e}(e,r.buffer),e=ni(r.type,e);const n=new lo(e,r.stride);return n.uuid=r.uuid,i[t]=n,n}const s=new(r.isInstancedBufferGeometry?Dc:ui);var e=r.data.index;void 0!==e&&(f=ni(e.type,e.array),s.setIndex(new Wn(f,1)));var t=r.data.attributes;for(const g in t){var o=t[g];let e;if(o.isInterleavedBufferAttribute){var l=n(r.data,o.data);e=new co(l,o.itemSize,o.offset,o.normalized)}else{l=ni(o.type,o.array);const v=o.isInstancedBufferAttribute?Nc:Wn;e=new v(l,o.itemSize,o.normalized)}void 0!==o.name&&(e.name=o.name),void 0!==o.usage&&e.setUsage(o.usage),void 0!==o.updateRange&&(e.updateRange.offset=o.updateRange.offset,e.updateRange.count=o.updateRange.count),s.setAttribute(g,e)}var h=r.data.morphAttributes;if(h)for(const y in h){var c=h[y];const x=[];for(let t=0,e=c.length;t<e;t++){var u,d=c[t];let e;e=d.isInterleavedBufferAttribute?(u=n(r.data,d.data),new co(u,d.itemSize,d.offset,d.normalized)):(u=ni(d.type,d.array),new Wn(u,d.itemSize,d.normalized)),void 0!==d.name&&(e.name=d.name),x.push(e)}s.morphAttributes[y]=x}r.data.morphTargetsRelative&&(s.morphTargetsRelative=!0);var p=r.data.groups||r.data.drawcalls||r.data.offsets;if(void 0!==p)for(let e=0,t=p.length;e!==t;++e){var m=p[e];s.addGroup(m.start,m.count,m.materialIndex)}var f=r.data.boundingSphere;if(void 0!==f){const _=new pr;void 0!==f.center&&_.fromArray(f.center),s.boundingSphere=new Fr(_,f.radius)}return r.name&&(s.name=r.name),r.userData&&(s.userData=r.userData),s}}const Bc={UVMapping:300,CubeReflectionMapping:F,CubeRefractionMapping:B,EquirectangularReflectionMapping:l,EquirectangularRefractionMapping:h,CubeUVReflectionMapping:U,CubeUVRefractionMapping:O},Uc={RepeatWrapping:z,ClampToEdgeWrapping:Le,MirroredRepeatWrapping:H},Oc={NearestFilter:Ce,NearestMipmapNearestFilter:G,NearestMipmapLinearFilter:V,LinearFilter:k,LinearMipmapNearestFilter:W,LinearMipmapLinearFilter:Pe};class zc extends Fh{constructor(e){super(e),"undefined"==typeof createImageBitmap&&console.warn("THREE.ImageBitmapLoader: createImageBitmap() not supported."),"undefined"==typeof fetch&&console.warn("THREE.ImageBitmapLoader: fetch() not supported."),this.options={premultiplyAlpha:"none"}}setOptions(e){return this.options=e,this}load(t,r,e,n){void 0===t&&(t=""),void 0!==this.path&&(t=this.path+t),t=this.manager.resolveURL(t);const i=this,a=Ih.get(t);if(void 0!==a)return i.manager.itemStart(t),setTimeout(function(){r&&r(a),i.manager.itemEnd(t)},0),a;const s={};s.credentials="anonymous"===this.crossOrigin?"same-origin":"include",s.headers=this.requestHeader,fetch(t,s).then(function(e){return e.blob()}).then(function(e){return createImageBitmap(e,Object.assign(i.options,{colorSpaceConversion:"none"}))}).then(function(e){Ih.add(t,e),r&&r(e),i.manager.itemEnd(t)}).catch(function(e){n&&n(e),i.manager.itemError(t),i.manager.itemEnd(t)}),i.manager.itemStart(t)}}class Hc{constructor(){this.type="ShapePath",this.color=new Hn,this.subPaths=[],this.currentPath=null}moveTo(e,t){return this.currentPath=new hc,this.subPaths.push(this.currentPath),this.currentPath.moveTo(e,t),this}lineTo(e,t){return this.currentPath.lineTo(e,t),this}quadraticCurveTo(e,t,r,n){return this.currentPath.quadraticCurveTo(e,t,r,n),this}bezierCurveTo(e,t,r,n,i,a){return this.currentPath.bezierCurveTo(e,t,r,n,i,a),this}splineThru(e){return this.currentPath.splineThru(e),this}toShapes(r,e){function t(r){const n=[];for(let e=0,t=r.length;e<t;e++){var i=r[e];const a=new cc;a.curves=i.curves,n.push(a)}return n}const n=Vl.isClockWise,i=this.subPaths;if(0===i.length)return[];if(!0===e)return t(i);let a,s,o;const l=[];if(1===i.length)return s=i[0],o=new cc,o.curves=s.curves,l.push(o),l;let h=!n(i[0].getPoints());h=r?!h:h;const c=[],u=[];let d=[],p=0;var m,f;u[p]=void 0,d[p]=[];for(let e=0,t=i.length;e<t;e++)s=i[e],m=s.getPoints(),a=n(m),a=r?!a:a,a?(!h&&u[p]&&p++,u[p]={s:new cc,p:m},u[p].s.curves=s.curves,h&&p++,d[p]=[]):d[p].push({h:s,p:m[0]});if(!u[0])return t(i);if(1<u.length){let i=!1;const y=[];for(let e=0,t=u.length;e<t;e++)c[e]=[];for(let n=0,e=u.length;n<e;n++){var g=d[n];for(let r=0;r<g.length;r++){var v=g[r];let t=!0;for(let e=0;e<u.length;e++)!function(s,o){var e=o.length;let l=!1;for(let i=e-1,a=0;a<e;i=a++){let e=o[i],t=o[a],r=t.x-e.x,n=t.y-e.y;if(Math.abs(n)>Number.EPSILON){if(n<0&&(e=o[a],r=-r,t=o[i],n=-n),!(s.y<e.y||s.y>t.y))if(s.y===e.y){if(s.x===e.x)return 1}else{var h=n*(s.x-e.x)-r*(s.y-e.y);if(0==h)return 1;h<0||(l=!l)}}else if(s.y===e.y&&(t.x<=s.x&&s.x<=e.x||e.x<=s.x&&s.x<=t.x))return 1}return l}(v.p,u[e].p)||(n!==e&&y.push({froms:n,tos:e,hole:r}),t?(t=!1,c[e].push(v)):i=!0);t&&c[n].push(v)}}0<y.length&&(i||(d=c))}for(let r=0,e=u.length;r<e;r++){o=u[r].s,l.push(o);for(let e=0,t=(f=d[r]).length;e<t;e++)o.holes.push(f[e].h)}return l}}class Gc{constructor(e){this.type="Font",this.data=e}generateShapes(e,t=100){var r=[];const n=function(e,t,r){const n=Array.from(e),i=t/r.resolution,a=(r.boundingBox.yMax-r.boundingBox.yMin+r.underlineThickness)*i,s=[];let o=0,l=0;for(let e=0;e<n.length;e++){var h=n[e];"\n"===h?(o=0,l-=a):(h=function(e,c,u,d,t){const p=t.glyphs[e]||t.glyphs["?"];if(p){const f=new Hc;let r,n,i,a,s,o,l,h;if(p.o){var m=p._cachedOutline||(p._cachedOutline=p.o.split(" "));for(let e=0,t=m.length;e<t;)switch(m[e++]){case"m":r=m[e++]*c+u,n=m[e++]*c+d,f.moveTo(r,n);break;case"l":r=m[e++]*c+u,n=m[e++]*c+d,f.lineTo(r,n);break;case"q":i=m[e++]*c+u,a=m[e++]*c+d,s=m[e++]*c+u,o=m[e++]*c+d,f.quadraticCurveTo(s,o,i,a);break;case"b":i=m[e++]*c+u,a=m[e++]*c+d,s=m[e++]*c+u,o=m[e++]*c+d,l=m[e++]*c+u,h=m[e++]*c+d,f.bezierCurveTo(s,o,l,h,i,a)}}return{offsetX:p.ha*c,path:f}}console.error('THREE.Font: character "'+e+'" does not exists in font family '+t.familyName+".")}(h,i,o,l,r),o+=h.offsetX,s.push(h.path))}return s}(e,t,this.data);for(let e=0,t=n.length;e<t;e++)Array.prototype.push.apply(r,n[e].toShapes());return r}}Gc.prototype.isFont=zc.prototype.isImageBitmapLoader=!0;let Vc;const kc={getContext:function(){return void 0===Vc&&(Vc=new(window.AudioContext||window.webkitAudioContext)),Vc},setContext:function(e){Vc=e}};class Wc extends Fh{constructor(e){super(e)}load(n,i,e,a){const s=this,t=new Uh(this.manager);t.setResponseType("arraybuffer"),t.setPath(this.path),t.setRequestHeader(this.requestHeader),t.setWithCredentials(this.withCredentials),t.load(n,function(e){try{var t=e.slice(0);const r=kc.getContext();r.decodeAudioData(t,function(e){i(e)})}catch(e){a?a(e):console.error(e),s.manager.itemError(n)}},e,a)}}class jc extends Cc{constructor(e,t,r=1){super(void 0,r);var n=(new Hn).set(e),r=(new Hn).set(t),e=new pr(n.r,n.g,n.b),t=new pr(r.r,r.g,r.b),n=Math.sqrt(Math.PI),r=n*Math.sqrt(.75);this.sh.coefficients[0].copy(e).add(t).multiplyScalar(n),this.sh.coefficients[1].copy(e).sub(t).multiplyScalar(r)}}class Xc extends Cc{constructor(e,t=1){super(void 0,t);e=(new Hn).set(e);this.sh.coefficients[0].set(e.r,e.g,e.b).multiplyScalar(2*Math.sqrt(Math.PI))}}Xc.prototype.isAmbientLightProbe=jc.prototype.isHemisphereLightProbe=!0;const qc=new Wr,Yc=new Wr;class Zc{constructor(e=!0){this.autoStart=e,this.startTime=0,this.oldTime=0,this.elapsedTime=0,this.running=!1}start(){this.startTime=Jc(),this.oldTime=this.startTime,this.elapsedTime=0,this.running=!0}stop(){this.getElapsedTime(),this.running=!1,this.autoStart=!1}getElapsedTime(){return this.getDelta(),this.elapsedTime}getDelta(){let e=0;return this.autoStart&&!this.running?(this.start(),0):(this.running&&(t=Jc(),e=(t-this.oldTime)/1e3,this.oldTime=t,this.elapsedTime+=e),e);var t}}function Jc(){return("undefined"==typeof performance?Date:performance).now()}const Kc=new pr,Qc=new dr,$c=new pr,eu=new pr;class tu extends gn{constructor(){super(),this.type="AudioListener",this.context=kc.getContext(),this.gain=this.context.createGain(),this.gain.connect(this.context.destination),this.filter=null,this.timeDelta=0,this._clock=new Zc}getInput(){return this.gain}removeFilter(){return null!==this.filter&&(this.gain.disconnect(this.filter),this.filter.disconnect(this.context.destination),this.gain.connect(this.context.destination),this.filter=null),this}getFilter(){return this.filter}setFilter(e){return null!==this.filter?(this.gain.disconnect(this.filter),this.filter.disconnect(this.context.destination)):this.gain.disconnect(this.context.destination),this.filter=e,this.gain.connect(this.filter),this.filter.connect(this.context.destination),this}getMasterVolume(){return this.gain.gain.value}setMasterVolume(e){return this.gain.gain.setTargetAtTime(e,this.context.currentTime,.01),this}updateMatrixWorld(e){super.updateMatrixWorld(e);const t=this.context.listener;var r=this.up;this.timeDelta=this._clock.getDelta(),this.matrixWorld.decompose(Kc,Qc,$c),eu.set(0,0,-1).applyQuaternion(Qc),t.positionX?(e=this.context.currentTime+this.timeDelta,t.positionX.linearRampToValueAtTime(Kc.x,e),t.positionY.linearRampToValueAtTime(Kc.y,e),t.positionZ.linearRampToValueAtTime(Kc.z,e),t.forwardX.linearRampToValueAtTime(eu.x,e),t.forwardY.linearRampToValueAtTime(eu.y,e),t.forwardZ.linearRampToValueAtTime(eu.z,e),t.upX.linearRampToValueAtTime(r.x,e),t.upY.linearRampToValueAtTime(r.y,e),t.upZ.linearRampToValueAtTime(r.z,e)):(t.setPosition(Kc.x,Kc.y,Kc.z),t.setOrientation(eu.x,eu.y,eu.z,r.x,r.y,r.z))}}class ru extends gn{constructor(e){super(),this.type="Audio",this.listener=e,this.context=e.context,this.gain=this.context.createGain(),this.gain.connect(e.getInput()),this.autoplay=!1,this.buffer=null,this.detune=0,this.loop=!1,this.loopStart=0,this.loopEnd=0,this.offset=0,this.duration=void 0,this.playbackRate=1,this.isPlaying=!1,this.hasPlaybackControl=!0,this.source=null,this.sourceType="empty",this._startedAt=0,this._progress=0,this._connected=!1,this.filters=[]}getOutput(){return this.gain}setNodeSource(e){return this.hasPlaybackControl=!1,this.sourceType="audioNode",this.source=e,this.connect(),this}setMediaElementSource(e){return this.hasPlaybackControl=!1,this.sourceType="mediaNode",this.source=this.context.createMediaElementSource(e),this.connect(),this}setMediaStreamSource(e){return this.hasPlaybackControl=!1,this.sourceType="mediaStreamNode",this.source=this.context.createMediaStreamSource(e),this.connect(),this}setBuffer(e){return this.buffer=e,this.sourceType="buffer",this.autoplay&&this.play(),this}play(e=0){if(!0!==this.isPlaying){if(!1!==this.hasPlaybackControl){this._startedAt=this.context.currentTime+e;const t=this.context.createBufferSource();return t.buffer=this.buffer,t.loop=this.loop,t.loopStart=this.loopStart,t.loopEnd=this.loopEnd,t.onended=this.onEnded.bind(this),t.start(this._startedAt,this._progress+this.offset,this.duration),this.isPlaying=!0,this.source=t,this.setDetune(this.detune),this.setPlaybackRate(this.playbackRate),this.connect()}console.warn("THREE.Audio: this Audio has no playback control.")}else console.warn("THREE.Audio: Audio is already playing.")}pause(){if(!1!==this.hasPlaybackControl)return!0===this.isPlaying&&(this._progress+=Math.max(this.context.currentTime-this._startedAt,0)*this.playbackRate,!0===this.loop&&(this._progress=this._progress%(this.duration||this.buffer.duration)),this.source.stop(),this.source.onended=null,this.isPlaying=!1),this;console.warn("THREE.Audio: this Audio has no playback control.")}stop(){if(!1!==this.hasPlaybackControl)return this._progress=0,this.source.stop(),this.source.onended=null,this.isPlaying=!1,this;console.warn("THREE.Audio: this Audio has no playback control.")}connect(){if(0<this.filters.length){this.source.connect(this.filters[0]);for(let e=1,t=this.filters.length;e<t;e++)this.filters[e-1].connect(this.filters[e]);this.filters[this.filters.length-1].connect(this.getOutput())}else this.source.connect(this.getOutput());return this._connected=!0,this}disconnect(){if(0<this.filters.length){this.source.disconnect(this.filters[0]);for(let e=1,t=this.filters.length;e<t;e++)this.filters[e-1].disconnect(this.filters[e]);this.filters[this.filters.length-1].disconnect(this.getOutput())}else this.source.disconnect(this.getOutput());return this._connected=!1,this}getFilters(){return this.filters}setFilters(e){return e=e||[],!0===this._connected?(this.disconnect(),this.filters=e.slice(),this.connect()):this.filters=e.slice(),this}setDetune(e){if(this.detune=e,void 0!==this.source.detune)return!0===this.isPlaying&&this.source.detune.setTargetAtTime(this.detune,this.context.currentTime,.01),this}getDetune(){return this.detune}getFilter(){return this.getFilters()[0]}setFilter(e){return this.setFilters(e?[e]:[])}setPlaybackRate(e){if(!1!==this.hasPlaybackControl)return this.playbackRate=e,!0===this.isPlaying&&this.source.playbackRate.setTargetAtTime(this.playbackRate,this.context.currentTime,.01),this;console.warn("THREE.Audio: this Audio has no playback control.")}getPlaybackRate(){return this.playbackRate}onEnded(){this.isPlaying=!1}getLoop(){return!1===this.hasPlaybackControl?(console.warn("THREE.Audio: this Audio has no playback control."),!1):this.loop}setLoop(e){if(!1!==this.hasPlaybackControl)return this.loop=e,!0===this.isPlaying&&(this.source.loop=this.loop),this;console.warn("THREE.Audio: this Audio has no playback control.")}setLoopStart(e){return this.loopStart=e,this}setLoopEnd(e){return this.loopEnd=e,this}getVolume(){return this.gain.gain.value}setVolume(e){return this.gain.gain.setTargetAtTime(e,this.context.currentTime,.01),this}}const nu=new pr,iu=new dr,au=new pr,su=new pr;class ou{constructor(e,t=2048){this.analyser=e.context.createAnalyser(),this.analyser.fftSize=t,this.data=new Uint8Array(this.analyser.frequencyBinCount),e.getOutput().connect(this.analyser)}getFrequencyData(){return this.analyser.getByteFrequencyData(this.data),this.data}getAverageFrequency(){let t=0;var r=this.getFrequencyData();for(let e=0;e<r.length;e++)t+=r[e];return t/r.length}}class lu{constructor(e,t,r){this.binding=e,this.valueSize=r;let n,i,a;switch(t){case"quaternion":n=this._slerp,i=this._slerpAdditive,a=this._setAdditiveIdentityQuaternion,this.buffer=new Float64Array(6*r),this._workIndex=5;break;case"string":case"bool":n=this._select,i=this._select,a=this._setAdditiveIdentityOther,this.buffer=new Array(5*r);break;default:n=this._lerp,i=this._lerpAdditive,a=this._setAdditiveIdentityNumeric,this.buffer=new Float64Array(5*r)}this._mixBufferRegion=n,this._mixBufferRegionAdditive=i,this._setIdentity=a,this._origIndex=3,this._addIndex=4,this.cumulativeWeight=0,this.cumulativeWeightAdditive=0,this.useCount=0,this.referenceCount=0}accumulate(e,t){const r=this.buffer,n=this.valueSize,i=e*n+n;let a=this.cumulativeWeight;if(0===a){for(let e=0;e!==n;++e)r[i+e]=r[e];a=t}else{a+=t;t=t/a;this._mixBufferRegion(r,i,0,t,n)}this.cumulativeWeight=a}accumulateAdditive(e){var t=this.buffer,r=this.valueSize,n=r*this._addIndex;0===this.cumulativeWeightAdditive&&this._setIdentity(),this._mixBufferRegionAdditive(t,n,0,e,r),this.cumulativeWeightAdditive+=e}apply(e){const r=this.valueSize,n=this.buffer,i=e*r+r,t=this.cumulativeWeight,a=this.cumulativeWeightAdditive,s=this.binding;this.cumulativeWeight=0,this.cumulativeWeightAdditive=0,t<1&&(e=r*this._origIndex,this._mixBufferRegion(n,i,e,1-t,r)),0<a&&this._mixBufferRegionAdditive(n,i,this._addIndex*r,1,r);for(let e=r,t=r+r;e!==t;++e)if(n[e]!==n[e+r]){s.setValue(n,i);break}}saveOriginalState(){const e=this.binding,r=this.buffer,n=this.valueSize,i=n*this._origIndex;e.getValue(r,i);for(let e=n,t=i;e!==t;++e)r[e]=r[i+e%n];this._setIdentity(),this.cumulativeWeight=0,this.cumulativeWeightAdditive=0}restoreOriginalState(){var e=3*this.valueSize;this.binding.setValue(this.buffer,e)}_setAdditiveIdentityNumeric(){var t=this._addIndex*this.valueSize,r=t+this.valueSize;for(let e=t;e<r;e++)this.buffer[e]=0}_setAdditiveIdentityQuaternion(){this._setAdditiveIdentityNumeric(),this.buffer[this._addIndex*this.valueSize+3]=1}_setAdditiveIdentityOther(){var t=this._origIndex*this.valueSize,r=this._addIndex*this.valueSize;for(let e=0;e<this.valueSize;e++)this.buffer[r+e]=this.buffer[t+e]}_select(t,r,n,e,i){if(.5<=e)for(let e=0;e!==i;++e)t[r+e]=t[n+e]}_slerp(e,t,r,n){dr.slerpFlat(e,t,e,t,e,r,n)}_slerpAdditive(e,t,r,n,i){i=this._workIndex*i;dr.multiplyQuaternionsFlat(e,i,e,t,e,r),dr.slerpFlat(e,t,e,t,e,i,n)}_lerp(t,r,n,i,a){var s=1-i;for(let e=0;e!==a;++e){var o=r+e;t[o]=t[o]*s+t[n+e]*i}}_lerpAdditive(t,r,n,i,a){for(let e=0;e!==a;++e){var s=r+e;t[s]=t[s]+t[n+e]*i}}}var hu="\\[\\]\\.:\\/";const cu=new RegExp("["+hu+"]","g");var uu="[^"+hu+"]",du="[^"+hu.replace("\\.","")+"]",pu=/((?:WC+[\/:])*)/.source.replace("WC",uu),hu=/(WCOD+)?/.source.replace("WCOD",du),du=/(?:\.(WC+)(?:\[(.+)\])?)?/.source.replace("WC",uu),uu=/\.(WC+)(?:\[(.+)\])?/.source.replace("WC",uu);const mu=new RegExp("^"+pu+hu+du+uu+"$"),fu=["material","materials","bones"];class gu{constructor(e,t,r){this.path=t,this.parsedPath=r||gu.parseTrackName(t),this.node=gu.findNode(e,this.parsedPath.nodeName)||e,this.rootNode=e,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}static create(e,t,r){return new(e&&e.isAnimationObjectGroup?gu.Composite:gu)(e,t,r)}static sanitizeNodeName(e){return e.replace(/\s/g,"_").replace(cu,"")}static parseTrackName(e){var t=mu.exec(e);if(!t)throw new Error("PropertyBinding: Cannot parse trackName: "+e);const r={nodeName:t[2],objectName:t[3],objectIndex:t[4],propertyName:t[5],propertyIndex:t[6]};var n=r.nodeName&&r.nodeName.lastIndexOf(".");if(void 0!==n&&-1!==n&&(t=r.nodeName.substring(n+1),-1!==fu.indexOf(t)&&(r.nodeName=r.nodeName.substring(0,n),r.objectName=t)),null===r.propertyName||0===r.propertyName.length)throw new Error("PropertyBinding: can not parse propertyName from trackName: "+e);return r}static findNode(e,n){if(!n||""===n||"."===n||-1===n||n===e.name||n===e.uuid)return e;if(e.skeleton){var t=e.skeleton.getBoneByName(n);if(void 0!==t)return t}if(e.children){const i=function(t){for(let e=0;e<t.length;e++){var r=t[e];if(r.name===n||r.uuid===n)return r;r=i(r.children);if(r)return r}return null};e=i(e.children);if(e)return e}return null}_getValue_unavailable(){}_setValue_unavailable(){}_getValue_direct(e,t){e[t]=this.node[this.propertyName]}_getValue_array(r,n){var i=this.resolvedProperty;for(let e=0,t=i.length;e!==t;++e)r[n++]=i[e]}_getValue_arrayElement(e,t){e[t]=this.resolvedProperty[this.propertyIndex]}_getValue_toArray(e,t){this.resolvedProperty.toArray(e,t)}_setValue_direct(e,t){this.targetObject[this.propertyName]=e[t]}_setValue_direct_setNeedsUpdate(e,t){this.targetObject[this.propertyName]=e[t],this.targetObject.needsUpdate=!0}_setValue_direct_setMatrixWorldNeedsUpdate(e,t){this.targetObject[this.propertyName]=e[t],this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_array(r,n){const i=this.resolvedProperty;for(let e=0,t=i.length;e!==t;++e)i[e]=r[n++]}_setValue_array_setNeedsUpdate(r,n){const i=this.resolvedProperty;for(let e=0,t=i.length;e!==t;++e)i[e]=r[n++];this.targetObject.needsUpdate=!0}_setValue_array_setMatrixWorldNeedsUpdate(r,n){const i=this.resolvedProperty;for(let e=0,t=i.length;e!==t;++e)i[e]=r[n++];this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_arrayElement(e,t){this.resolvedProperty[this.propertyIndex]=e[t]}_setValue_arrayElement_setNeedsUpdate(e,t){this.resolvedProperty[this.propertyIndex]=e[t],this.targetObject.needsUpdate=!0}_setValue_arrayElement_setMatrixWorldNeedsUpdate(e,t){this.resolvedProperty[this.propertyIndex]=e[t],this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_fromArray(e,t){this.resolvedProperty.fromArray(e,t)}_setValue_fromArray_setNeedsUpdate(e,t){this.resolvedProperty.fromArray(e,t),this.targetObject.needsUpdate=!0}_setValue_fromArray_setMatrixWorldNeedsUpdate(e,t){this.resolvedProperty.fromArray(e,t),this.targetObject.matrixWorldNeedsUpdate=!0}_getValue_unbound(e,t){this.bind(),this.getValue(e,t)}_setValue_unbound(e,t){this.bind(),this.setValue(e,t)}bind(){let r=this.node;var e=this.parsedPath,n=e.objectName,i=e.propertyName;let a=e.propertyIndex;if(r||(r=gu.findNode(this.rootNode,e.nodeName)||this.rootNode,this.node=r),this.getValue=this._getValue_unavailable,this.setValue=this._setValue_unavailable,r){if(n){let t=e.objectIndex;switch(n){case"materials":if(!r.material)return void console.error("THREE.PropertyBinding: Can not bind to material as node does not have a material.",this);if(!r.material.materials)return void console.error("THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.",this);r=r.material.materials;break;case"bones":if(!r.skeleton)return void console.error("THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.",this);r=r.skeleton.bones;for(let e=0;e<r.length;e++)if(r[e].name===t){t=e;break}break;default:if(void 0===r[n])return void console.error("THREE.PropertyBinding: Can not bind to objectName of node undefined.",this);r=r[n]}if(void 0!==t){if(void 0===r[t])return void console.error("THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.",this,r);r=r[t]}}var s=r[i];if(void 0!==s){let e=this.Versioning.None;this.targetObject=r,void 0!==r.needsUpdate?e=this.Versioning.NeedsUpdate:void 0!==r.matrixWorldNeedsUpdate&&(e=this.Versioning.MatrixWorldNeedsUpdate);let t=this.BindingType.Direct;if(void 0!==a){if("morphTargetInfluences"===i){if(!r.geometry)return void console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.",this);if(!r.geometry.isBufferGeometry)return void console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences on THREE.Geometry. Use THREE.BufferGeometry instead.",this);if(!r.geometry.morphAttributes)return void console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.",this);void 0!==r.morphTargetDictionary[a]&&(a=r.morphTargetDictionary[a])}t=this.BindingType.ArrayElement,this.resolvedProperty=s,this.propertyIndex=a}else void 0!==s.fromArray&&void 0!==s.toArray?(t=this.BindingType.HasFromToArray,this.resolvedProperty=s):Array.isArray(s)?(t=this.BindingType.EntireArray,this.resolvedProperty=s):this.propertyName=i;this.getValue=this.GetterByBindingType[t],this.setValue=this.SetterByBindingTypeAndVersioning[t][e]}else{e=e.nodeName;console.error("THREE.PropertyBinding: Trying to update property for track: "+e+"."+i+" but it wasn't found.",r)}}else console.error("THREE.PropertyBinding: Trying to update node for track: "+this.path+" but it wasn't found.")}unbind(){this.node=null,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}}gu.Composite=class{constructor(e,t,r){r=r||gu.parseTrackName(t);this._targetGroup=e,this._bindings=e.subscribe_(t,r)}getValue(e,t){this.bind();const r=this._targetGroup.nCachedObjects_,n=this._bindings[r];void 0!==n&&n.getValue(e,t)}setValue(r,n){const i=this._bindings;for(let e=this._targetGroup.nCachedObjects_,t=i.length;e!==t;++e)i[e].setValue(r,n)}bind(){const r=this._bindings;for(let e=this._targetGroup.nCachedObjects_,t=r.length;e!==t;++e)r[e].bind()}unbind(){const r=this._bindings;for(let e=this._targetGroup.nCachedObjects_,t=r.length;e!==t;++e)r[e].unbind()}},gu.prototype.BindingType={Direct:0,EntireArray:1,ArrayElement:2,HasFromToArray:3},gu.prototype.Versioning={None:0,NeedsUpdate:1,MatrixWorldNeedsUpdate:2},gu.prototype.GetterByBindingType=[gu.prototype._getValue_direct,gu.prototype._getValue_array,gu.prototype._getValue_arrayElement,gu.prototype._getValue_toArray],gu.prototype.SetterByBindingTypeAndVersioning=[[gu.prototype._setValue_direct,gu.prototype._setValue_direct_setNeedsUpdate,gu.prototype._setValue_direct_setMatrixWorldNeedsUpdate],[gu.prototype._setValue_array,gu.prototype._setValue_array_setNeedsUpdate,gu.prototype._setValue_array_setMatrixWorldNeedsUpdate],[gu.prototype._setValue_arrayElement,gu.prototype._setValue_arrayElement_setNeedsUpdate,gu.prototype._setValue_arrayElement_setMatrixWorldNeedsUpdate],[gu.prototype._setValue_fromArray,gu.prototype._setValue_fromArray_setNeedsUpdate,gu.prototype._setValue_fromArray_setMatrixWorldNeedsUpdate]];class vu{constructor(){this.uuid=qt(),this._objects=Array.prototype.slice.call(arguments),this.nCachedObjects_=0;const r={};this._indicesByUUID=r;for(let e=0,t=arguments.length;e!==t;++e)r[arguments[e].uuid]=e;this._paths=[],this._parsedPaths=[],this._bindings=[],this._bindingsIndicesByPath={};const e=this;this.stats={objects:{get total(){return e._objects.length},get inUse(){return this.total-e.nCachedObjects_}},get bindingsPerObject(){return e._bindings.length}}}add(){const n=this._objects,i=this._indicesByUUID,a=this._paths,s=this._parsedPaths,o=this._bindings,l=o.length;let h=void 0,c=n.length,u=this.nCachedObjects_;for(let e=0,t=arguments.length;e!==t;++e){var d=arguments[e],p=d.uuid;let r=i[p];if(void 0===r){r=c++,i[p]=r,n.push(d);for(let e=0,t=l;e!==t;++e)o[e].push(new gu(d,a[e],s[e]))}else if(r<u){h=n[r];var m=--u,f=n[m];i[f.uuid]=r,n[r]=f,i[p]=m,n[m]=d;for(let t=0,e=l;t!==e;++t){const g=o[t],v=g[m];let e=g[r];g[r]=v,void 0===e&&(e=new gu(d,a[t],s[t])),g[m]=e}}else n[r]!==h&&console.error("THREE.AnimationObjectGroup: Different objects with the same UUID detected. Clean the caches or recreate your infrastructure when reloading scenes.")}this.nCachedObjects_=u}remove(){const r=this._objects,n=this._indicesByUUID,i=this._bindings,a=i.length;let s=this.nCachedObjects_;for(let e=0,t=arguments.length;e!==t;++e){var o=arguments[e],l=o.uuid,h=n[l];if(void 0!==h&&h>=s){var c=s++,u=r[c];n[u.uuid]=h,r[h]=u,n[l]=c,r[c]=o;for(let e=0,t=a;e!==t;++e){const d=i[e],p=d[c],m=d[h];d[h]=p,d[c]=m}}}this.nCachedObjects_=s}uncache(){const r=this._objects,n=this._indicesByUUID,i=this._bindings,a=i.length;let s=this.nCachedObjects_,o=r.length;for(let e=0,t=arguments.length;e!==t;++e){var l=arguments[e].uuid,h=n[l];if(void 0!==h)if(delete n[l],h<s){var c=--s,l=r[c],u=--o,d=r[u];n[l.uuid]=h,r[h]=l,n[d.uuid]=c,r[c]=d,r.pop();for(let e=0,t=a;e!==t;++e){const m=i[e],f=m[c],g=m[u];m[h]=f,m[c]=g,m.pop()}}else{var p=--o,d=r[p];0<p&&(n[d.uuid]=h),r[h]=d,r.pop();for(let e=0,t=a;e!==t;++e){const v=i[e];v[h]=v[p],v.pop()}}}this.nCachedObjects_=s}subscribe_(r,n){const e=this._bindingsIndicesByPath;let t=e[r];const i=this._bindings;if(void 0!==t)return i[t];const a=this._paths,s=this._parsedPaths,o=this._objects,l=o.length,h=this.nCachedObjects_,c=new Array(l);t=i.length,e[r]=t,a.push(r),s.push(n),i.push(c);for(let e=h,t=o.length;e!==t;++e){var u=o[e];c[e]=new gu(u,r,n)}return c}unsubscribe_(e){const t=this._bindingsIndicesByPath,r=t[e];if(void 0!==r){const n=this._paths,i=this._parsedPaths,a=this._bindings,s=a.length-1,o=a[s],l=e[s];t[l]=r,a[r]=o,a.pop(),i[r]=i[s],i.pop(),n[r]=n[s],n.pop()}}}vu.prototype.isAnimationObjectGroup=!0;class yu{constructor(e,t,r=null,n=t.blendMode){this._mixer=e,this._clip=t,this._localRoot=r,this.blendMode=n;const i=t.tracks,a=i.length,s=new Array(a);var o={endingStart:St,endingEnd:St};for(let e=0;e!==a;++e){const l=i[e].createInterpolant(null);s[e]=l,l.settings=o}this._interpolantSettings=o,this._interpolants=s,this._propertyBindings=new Array(a),this._cacheIndex=null,this._byClipCacheIndex=null,this._timeScaleInterpolant=null,this._weightInterpolant=null,this.loop=2201,this._loopCount=-1,this._startTime=null,this.time=0,this.timeScale=1,this._effectiveTimeScale=1,this.weight=1,this._effectiveWeight=1,this.repetitions=1/0,this.paused=!1,this.enabled=!0,this.clampWhenFinished=!1,this.zeroSlopeAtStart=!0,this.zeroSlopeAtEnd=!0}play(){return this._mixer._activateAction(this),this}stop(){return this._mixer._deactivateAction(this),this.reset()}reset(){return this.paused=!1,this.enabled=!0,this.time=0,this._loopCount=-1,this._startTime=null,this.stopFading().stopWarping()}isRunning(){return this.enabled&&!this.paused&&0!==this.timeScale&&null===this._startTime&&this._mixer._isActiveAction(this)}isScheduled(){return this._mixer._isActiveAction(this)}startAt(e){return this._startTime=e,this}setLoop(e,t){return this.loop=e,this.repetitions=t,this}setEffectiveWeight(e){return this.weight=e,this._effectiveWeight=this.enabled?e:0,this.stopFading()}getEffectiveWeight(){return this._effectiveWeight}fadeIn(e){return this._scheduleFading(e,0,1)}fadeOut(e){return this._scheduleFading(e,1,0)}crossFadeFrom(e,t,r){var n,i;return e.fadeOut(t),this.fadeIn(t),r&&(r=(n=this._clip.duration)/(i=e._clip.duration),e.warp(1,i/n,t),this.warp(r,1,t)),this}crossFadeTo(e,t,r){return e.crossFadeFrom(this,t,r)}stopFading(){var e=this._weightInterpolant;return null!==e&&(this._weightInterpolant=null,this._mixer._takeBackControlInterpolant(e)),this}setEffectiveTimeScale(e){return this.timeScale=e,this._effectiveTimeScale=this.paused?0:e,this.stopWarping()}getEffectiveTimeScale(){return this._effectiveTimeScale}setDuration(e){return this.timeScale=this._clip.duration/e,this.stopWarping()}syncWith(e){return this.time=e.time,this.timeScale=e.timeScale,this.stopWarping()}halt(e){return this.warp(this._effectiveTimeScale,0,e)}warp(e,t,r){const n=this._mixer,i=n.time,a=this.timeScale;let s=this._timeScaleInterpolant;null===s&&(s=n._lendControlInterpolant(),this._timeScaleInterpolant=s);const o=s.parameterPositions,l=s.sampleValues;return o[0]=i,o[1]=i+r,l[0]=e/a,l[1]=t/a,this}stopWarping(){var e=this._timeScaleInterpolant;return null!==e&&(this._timeScaleInterpolant=null,this._mixer._takeBackControlInterpolant(e)),this}getMixer(){return this._mixer}getClip(){return this._clip}getRoot(){return this._localRoot||this._mixer._root}_update(e,t,r,n){if(this.enabled){var i=this._startTime;if(null!==i){i=(e-i)*r;if(i<0||0===r)return;this._startTime=null,t=r*i}t*=this._updateTimeScale(e);var a=this._updateTime(t),s=this._updateWeight(e);if(0<s){const o=this._interpolants,l=this._propertyBindings;switch(this.blendMode){case 2501:for(let e=0,t=o.length;e!==t;++e)o[e].evaluate(a),l[e].accumulateAdditive(s);break;case 2500:default:for(let e=0,t=o.length;e!==t;++e)o[e].evaluate(a),l[e].accumulate(n,s)}}}else this._updateWeight(e)}_updateWeight(e){let t=0;if(this.enabled){t=this.weight;const n=this._weightInterpolant;var r;null!==n&&(r=n.evaluate(e)[0],t*=r,e>n.parameterPositions[1]&&(this.stopFading(),0===r&&(this.enabled=!1)))}return this._effectiveWeight=t,t}_updateTimeScale(e){let t=0;if(!this.paused){t=this.timeScale;const n=this._timeScaleInterpolant;var r;null!==n&&(r=n.evaluate(e)[0],t*=r,e>n.parameterPositions[1]&&(this.stopWarping(),0===t?this.paused=!0:this.timeScale=t))}return this._effectiveTimeScale=t,t}_updateTime(e){var t=this._clip.duration,r=this.loop;let n=this.time+e,i=this._loopCount;var a,s=2202===r;if(0===e)return-1!==i&&s&&1==(1&i)?t-n:n;if(2200===r){-1===i&&(this._loopCount=0,this._setEndings(!0,!0,!1));e:{if(n>=t)n=t;else{if(!(n<0)){this.time=n;break e}n=0}this.clampWhenFinished?this.paused=!0:this.enabled=!1,this.time=n,this._mixer.dispatchEvent({type:"finished",action:this,direction:e<0?-1:1})}}else if(-1===i&&(0<=e?(i=0,this._setEndings(!0,0===this.repetitions,s)):this._setEndings(0===this.repetitions,!0,s)),n>=t||n<0?(a=Math.floor(n/t),n-=t*a,i+=Math.abs(a),(r=this.repetitions-i)<=0?(this.clampWhenFinished?this.paused=!0:this.enabled=!1,n=0<e?t:0,this.time=n,this._mixer.dispatchEvent({type:"finished",action:this,direction:0<e?1:-1})):(1==r?this._setEndings(r=e<0,!r,s):this._setEndings(!1,!1,s),this._loopCount=i,this.time=n,this._mixer.dispatchEvent({type:"loop",action:this,loopDelta:a}))):this.time=n,s&&1==(1&i))return t-n;return n}_setEndings(e,t,r){const n=this._interpolantSettings;r?(n.endingStart=At,n.endingEnd=At):(n.endingStart=e?this.zeroSlopeAtStart?At:St:Rt,n.endingEnd=t?this.zeroSlopeAtEnd?At:St:Rt)}_scheduleFading(e,t,r){const n=this._mixer,i=n.time;let a=this._weightInterpolant;null===a&&(a=n._lendControlInterpolant(),this._weightInterpolant=a);const s=a.parameterPositions,o=a.sampleValues;return s[0]=i,o[0]=t,s[1]=i+e,o[1]=r,this}}class xu extends Vt{constructor(e){super(),this._root=e,this._initMemoryManager(),this._accuIndex=0,this.time=0,this.timeScale=1}_bindAction(e,r){const n=e._localRoot||this._root,i=e._clip.tracks,a=i.length,s=e._propertyBindings,o=e._interpolants,l=n.uuid,t=this._bindingsByRootAndName;let h=t[l];void 0===h&&(h={},t[l]=h);for(let t=0;t!==a;++t){const u=i[t],d=u.name;let e=h[d];if(void 0!==e)s[t]=e;else{if(e=s[t],void 0!==e){null===e._cacheIndex&&(++e.referenceCount,this._addInactiveBinding(e,l,d));continue}var c=r&&r._propertyBindings[t].binding.parsedPath;e=new lu(gu.create(n,d,c),u.ValueTypeName,u.getValueSize()),++e.referenceCount,this._addInactiveBinding(e,l,d),s[t]=e}o[t].resultBuffer=e.buffer}}_activateAction(e){if(!this._isActiveAction(e)){var t,r,n;null===e._cacheIndex&&(t=(e._localRoot||this._root).uuid,r=e._clip.uuid,n=this._actionsByClip[r],this._bindAction(e,n&&n.knownActions[0]),this._addInactiveAction(e,r,t));var i=e._propertyBindings;for(let e=0,t=i.length;e!==t;++e){const a=i[e];0==a.useCount++&&(this._lendBinding(a),a.saveOriginalState())}this._lendAction(e)}}_deactivateAction(e){if(this._isActiveAction(e)){var r=e._propertyBindings;for(let e=0,t=r.length;e!==t;++e){const n=r[e];0==--n.useCount&&(n.restoreOriginalState(),this._takeBackBinding(n))}this._takeBackAction(e)}}_initMemoryManager(){this._actions=[],this._nActiveActions=0,this._actionsByClip={},this._bindings=[],this._nActiveBindings=0,this._bindingsByRootAndName={},this._controlInterpolants=[],this._nActiveControlInterpolants=0;const e=this;this.stats={actions:{get total(){return e._actions.length},get inUse(){return e._nActiveActions}},bindings:{get total(){return e._bindings.length},get inUse(){return e._nActiveBindings}},controlInterpolants:{get total(){return e._controlInterpolants.length},get inUse(){return e._nActiveControlInterpolants}}}}_isActiveAction(e){e=e._cacheIndex;return null!==e&&e<this._nActiveActions}_addInactiveAction(e,t,r){const n=this._actions,i=this._actionsByClip;let a=i[t];if(void 0===a)a={knownActions:[e],actionByRoot:{}},e._byClipCacheIndex=0,i[t]=a;else{const s=a.knownActions;e._byClipCacheIndex=s.length,s.push(e)}e._cacheIndex=n.length,n.push(e),a.actionByRoot[r]=e}_removeInactiveAction(e){const t=this._actions,r=t[t.length-1],n=e._cacheIndex;r._cacheIndex=n,t[n]=r,t.pop(),e._cacheIndex=null;const i=e._clip.uuid,a=this._actionsByClip,s=a[i],o=s.knownActions,l=o[o.length-1],h=e._byClipCacheIndex;l._byClipCacheIndex=h,o[h]=l,o.pop(),e._byClipCacheIndex=null;const c=s.actionByRoot,u=(e._localRoot||this._root).uuid;delete c[u],0===o.length&&delete a[i],this._removeInactiveBindingsForAction(e)}_removeInactiveBindingsForAction(e){var r=e._propertyBindings;for(let e=0,t=r.length;e!==t;++e){const n=r[e];0==--n.referenceCount&&this._removeInactiveBinding(n)}}_lendAction(e){const t=this._actions,r=e._cacheIndex,n=this._nActiveActions++,i=t[n];e._cacheIndex=n,t[n]=e,i._cacheIndex=r,t[r]=i}_takeBackAction(e){const t=this._actions,r=e._cacheIndex,n=--this._nActiveActions,i=t[n];e._cacheIndex=n,t[n]=e,i._cacheIndex=r,t[r]=i}_addInactiveBinding(e,t,r){const n=this._bindingsByRootAndName,i=this._bindings;let a=n[t];void 0===a&&(a={},n[t]=a),(a[r]=e)._cacheIndex=i.length,i.push(e)}_removeInactiveBinding(e){const t=this._bindings,r=e.binding,n=r.rootNode.uuid,i=r.path,a=this._bindingsByRootAndName,s=a[n],o=t[t.length-1],l=e._cacheIndex;o._cacheIndex=l,t[l]=o,t.pop(),delete s[i],0===Object.keys(s).length&&delete a[n]}_lendBinding(e){const t=this._bindings,r=e._cacheIndex,n=this._nActiveBindings++,i=t[n];e._cacheIndex=n,t[n]=e,i._cacheIndex=r,t[r]=i}_takeBackBinding(e){const t=this._bindings,r=e._cacheIndex,n=--this._nActiveBindings,i=t[n];e._cacheIndex=n,t[n]=e,i._cacheIndex=r,t[r]=i}_lendControlInterpolant(){const e=this._controlInterpolants,t=this._nActiveControlInterpolants++;let r=e[t];return void 0===r&&(r=new Mh(new Float32Array(2),new Float32Array(2),1,this._controlInterpolantsResultBuffer),r.__cacheIndex=t,e[t]=r),r}_takeBackControlInterpolant(e){const t=this._controlInterpolants,r=e.__cacheIndex,n=--this._nActiveControlInterpolants,i=t[n];e.__cacheIndex=n,t[n]=e,i.__cacheIndex=r,t[r]=i}clipAction(e,t,r){var n=t||this._root,i=n.uuid;let a="string"==typeof e?Ph.findByName(n,e):e;var s=null!==a?a.uuid:e,n=this._actionsByClip[s];let o=null;if(void 0===r&&(r=null!==a?a.blendMode:2500),void 0!==n){e=n.actionByRoot[i];if(void 0!==e&&e.blendMode===r)return e;o=n.knownActions[0],null===a&&(a=o._clip)}if(null===a)return null;r=new yu(this,a,t,r);return this._bindAction(r,o),this._addInactiveAction(r,s,i),r}existingAction(e,t){var r=t||this._root,t=r.uuid,r="string"==typeof e?Ph.findByName(r,e):e,e=r?r.uuid:e,e=this._actionsByClip[e];return void 0!==e&&e.actionByRoot[t]||null}stopAllAction(){const t=this._actions,r=this._nActiveActions;for(let e=r-1;0<=e;--e)t[e].stop();return this}update(t){t*=this.timeScale;var r=this._actions,n=this._nActiveActions,i=this.time+=t,a=Math.sign(t),s=this._accuIndex^=1;for(let e=0;e!==n;++e){const h=r[e];h._update(i,t,a,s)}const o=this._bindings,l=this._nActiveBindings;for(let e=0;e!==l;++e)o[e].apply(s);return this}setTime(e){for(let e=this.time=0;e<this._actions.length;e++)this._actions[e].time=0;return this.update(e)}getRoot(){return this._root}uncacheClip(e){const r=this._actions,t=e.uuid,n=this._actionsByClip,i=n[t];if(void 0!==i){var a=i.knownActions;for(let e=0,t=a.length;e!==t;++e){const s=a[e];this._deactivateAction(s);const o=s._cacheIndex,l=r[r.length-1];s._cacheIndex=null,s._byClipCacheIndex=null,l._cacheIndex=o,r[o]=l,r.pop(),this._removeInactiveBindingsForAction(s)}delete n[t]}}uncacheRoot(e){var t=e.uuid,r=this._actionsByClip;for(const a in r){var n=r[a].actionByRoot[t];void 0!==n&&(this._deactivateAction(n),this._removeInactiveAction(n))}var i=this._bindingsByRootAndName[t];if(void 0!==i)for(const s in i){const o=i[s];o.restoreOriginalState(),this._removeInactiveBinding(o)}}uncacheAction(e,t){t=this.existingAction(e,t);null!==t&&(this._deactivateAction(t),this._removeInactiveAction(t))}}xu.prototype._controlInterpolantsResultBuffer=new Float32Array(1);class _u{constructor(e){"string"==typeof e&&(console.warn("THREE.Uniform: Type parameter is no longer needed."),e=arguments[1]),this.value=e}clone(){return new _u(void 0===this.value.clone?this.value:this.value.clone())}}class Mu extends lo{constructor(e,t,r=1){super(e,t),this.meshPerAttribute=r||1}copy(e){return super.copy(e),this.meshPerAttribute=e.meshPerAttribute,this}clone(e){const t=super.clone(e);return t.meshPerAttribute=this.meshPerAttribute,t}toJSON(e){const t=super.toJSON(e);return t.isInstancedInterleavedBuffer=!0,t.meshPerAttribute=this.meshPerAttribute,t}}class wu{constructor(e,t,r,n,i){this.buffer=e,this.type=t,this.itemSize=r,this.elementSize=n,this.count=i,this.version=0}set needsUpdate(e){!0===e&&this.version++}setBuffer(e){return this.buffer=e,this}setType(e,t){return this.type=e,this.elementSize=t,this}setItemSize(e){return this.itemSize=e,this}setCount(e){return this.count=e,this}}wu.prototype.isGLBufferAttribute=Mu.prototype.isInstancedInterleavedBuffer=!0;function bu(e,t){return e.distance-t.distance}function Eu(e,r,n,t){if(e.layers.test(r.layers)&&e.raycast(r,n),!0===t){var i=e.children;for(let e=0,t=i.length;e<t;e++)Eu(i[e],r,n,!0)}}const Tu=new tr;class Su{constructor(e=new tr(1/0,1/0),t=new tr(-1/0,-1/0)){this.min=e,this.max=t}set(e,t){return this.min.copy(e),this.max.copy(t),this}setFromPoints(r){this.makeEmpty();for(let e=0,t=r.length;e<t;e++)this.expandByPoint(r[e]);return this}setFromCenterAndSize(e,t){t=Tu.copy(t).multiplyScalar(.5);return this.min.copy(e).sub(t),this.max.copy(e).add(t),this}clone(){return(new this.constructor).copy(this)}copy(e){return this.min.copy(e.min),this.max.copy(e.max),this}makeEmpty(){return this.min.x=this.min.y=1/0,this.max.x=this.max.y=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y}getCenter(e){return void 0===e&&(console.warn("THREE.Box2: .getCenter() target is now required"),e=new tr),this.isEmpty()?e.set(0,0):e.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(e){return void 0===e&&(console.warn("THREE.Box2: .getSize() target is now required"),e=new tr),this.isEmpty()?e.set(0,0):e.subVectors(this.max,this.min)}expandByPoint(e){return this.min.min(e),this.max.max(e),this}expandByVector(e){return this.min.sub(e),this.max.add(e),this}expandByScalar(e){return this.min.addScalar(-e),this.max.addScalar(e),this}containsPoint(e){return!(e.x<this.min.x||e.x>this.max.x||e.y<this.min.y||e.y>this.max.y)}containsBox(e){return this.min.x<=e.min.x&&e.max.x<=this.max.x&&this.min.y<=e.min.y&&e.max.y<=this.max.y}getParameter(e,t){return void 0===t&&(console.warn("THREE.Box2: .getParameter() target is now required"),t=new tr),t.set((e.x-this.min.x)/(this.max.x-this.min.x),(e.y-this.min.y)/(this.max.y-this.min.y))}intersectsBox(e){return!(e.max.x<this.min.x||e.min.x>this.max.x||e.max.y<this.min.y||e.min.y>this.max.y)}clampPoint(e,t){return void 0===t&&(console.warn("THREE.Box2: .clampPoint() target is now required"),t=new tr),t.copy(e).clamp(this.min,this.max)}distanceToPoint(e){const t=Tu.copy(e).clamp(this.min,this.max);return t.sub(e).length()}intersect(e){return this.min.max(e.min),this.max.min(e.max),this}union(e){return this.min.min(e.min),this.max.max(e.max),this}translate(e){return this.min.add(e),this.max.add(e),this}equals(e){return e.min.equals(this.min)&&e.max.equals(this.max)}}Su.prototype.isBox2=!0;const Au=new pr,Ru=new pr;class Lu{constructor(e=new pr,t=new pr){this.start=e,this.end=t}set(e,t){return this.start.copy(e),this.end.copy(t),this}copy(e){return this.start.copy(e.start),this.end.copy(e.end),this}getCenter(e){return void 0===e&&(console.warn("THREE.Line3: .getCenter() target is now required"),e=new pr),e.addVectors(this.start,this.end).multiplyScalar(.5)}delta(e){return void 0===e&&(console.warn("THREE.Line3: .delta() target is now required"),e=new pr),e.subVectors(this.end,this.start)}distanceSq(){return this.start.distanceToSquared(this.end)}distance(){return this.start.distanceTo(this.end)}at(e,t){return void 0===t&&(console.warn("THREE.Line3: .at() target is now required"),t=new pr),this.delta(t).multiplyScalar(e).add(this.start)}closestPointToPointParameter(e,t){Au.subVectors(e,this.start),Ru.subVectors(this.end,this.start);e=Ru.dot(Ru);let r=Ru.dot(Au)/e;return t&&(r=Yt(r,0,1)),r}closestPointToPoint(e,t,r){t=this.closestPointToPointParameter(e,t);return void 0===r&&(console.warn("THREE.Line3: .closestPointToPoint() target is now required"),r=new pr),this.delta(r).multiplyScalar(t).add(this.start)}applyMatrix4(e){return this.start.applyMatrix4(e),this.end.applyMatrix4(e),this}equals(e){return e.start.equals(this.start)&&e.end.equals(this.end)}clone(){return(new this.constructor).copy(this)}}class Cu extends gn{constructor(e){super(),this.material=e,this.render=function(){},this.hasPositions=!1,this.hasNormals=!1,this.hasColors=!1,this.hasUvs=!1,this.positionArray=null,this.normalArray=null,this.colorArray=null,this.uvArray=null,this.count=0}}Cu.prototype.isImmediateRenderObject=!0;const Pu=new pr;class Iu extends gn{constructor(e,t){super(),this.light=e,this.light.updateMatrixWorld(),this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.color=t;const r=new ui,n=[0,0,0,0,0,1,0,0,0,1,0,1,0,0,0,-1,0,1,0,0,0,0,1,1,0,0,0,0,-1,1];for(let e=0,t=1;e<32;e++,t++){var i=e/32*Math.PI*2,a=t/32*Math.PI*2;n.push(Math.cos(i),Math.sin(i),1,Math.cos(a),Math.sin(a),1)}r.setAttribute("position",new $n(n,3));t=new qo({fog:!1,toneMapped:!1});this.cone=new rl(r,t),this.add(this.cone),this.update()}dispose(){this.cone.geometry.dispose(),this.cone.material.dispose()}update(){this.light.updateMatrixWorld();var e=this.light.distance||1e3,t=e*Math.tan(this.light.angle);this.cone.scale.set(t,t,e),Pu.setFromMatrixPosition(this.light.target.matrixWorld),this.cone.lookAt(Pu),void 0!==this.color?this.cone.material.color.set(this.color):this.cone.material.color.copy(this.light.color)}}const Du=new pr,Nu=new Wr,Fu=new Wr;class Bu extends rl{constructor(e){var t=function t(r){const n=[];r&&r.isBone&&n.push(r);for(let e=0;e<r.children.length;e++)n.push.apply(n,t(r.children[e]));return n}(e);const r=new ui,n=[],i=[];var a=new Hn(0,0,1),s=new Hn(0,1,0);for(let e=0;e<t.length;e++){var o=t[e];o.parent&&o.parent.isBone&&(n.push(0,0,0),n.push(0,0,0),i.push(a.r,a.g,a.b),i.push(s.r,s.g,s.b))}r.setAttribute("position",new $n(n,3)),r.setAttribute("color",new $n(i,3));var l=new qo({vertexColors:!0,depthTest:!1,depthWrite:!1,toneMapped:!1,transparent:!0});super(r,l),this.type="SkeletonHelper",this.isSkeletonHelper=!0,this.root=e,this.bones=t,this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1}updateMatrixWorld(e){var r=this.bones;const t=this.geometry,n=t.getAttribute("position");Fu.copy(this.root.matrixWorld).invert();for(let e=0,t=0;e<r.length;e++){var i=r[e];i.parent&&i.parent.isBone&&(Nu.multiplyMatrices(Fu,i.matrixWorld),Du.setFromMatrixPosition(Nu),n.setXYZ(t,Du.x,Du.y,Du.z),Nu.multiplyMatrices(Fu,i.parent.matrixWorld),Du.setFromMatrixPosition(Nu),n.setXYZ(t+1,Du.x,Du.y,Du.z),t+=2)}t.getAttribute("position").needsUpdate=!0,super.updateMatrixWorld(e)}}class Uu extends Li{constructor(e,t,r){super(new $l(t,4,2),new Gn({wireframe:!0,fog:!1,toneMapped:!1})),this.light=e,this.light.updateMatrixWorld(),this.color=r,this.type="PointLightHelper",this.matrix=this.light.matrixWorld,this.matrixAutoUpdate=!1,this.update()}dispose(){this.geometry.dispose(),this.material.dispose()}update(){void 0!==this.color?this.material.color.set(this.color):this.material.color.copy(this.light.color)}}const Ou=new pr,zu=new Hn,Hu=new Hn;class Gu extends gn{constructor(e,t,r){super(),this.light=e,this.light.updateMatrixWorld(),this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.color=r;const n=new Zl(t);n.rotateY(.5*Math.PI),this.material=new Gn({wireframe:!0,fog:!1,toneMapped:!1}),void 0===this.color&&(this.material.vertexColors=!0);t=n.getAttribute("position"),t=new Float32Array(3*t.count);n.setAttribute("color",new Wn(t,3)),this.add(new Li(n,this.material)),this.update()}dispose(){this.children[0].geometry.dispose(),this.children[0].material.dispose()}update(){const e=this.children[0];if(void 0!==this.color)this.material.color.set(this.color);else{const n=e.geometry.getAttribute("color");zu.copy(this.light.color),Hu.copy(this.light.groundColor);for(let e=0,t=n.count;e<t;e++){var r=e<t/2?zu:Hu;n.setXYZ(e,r.r,r.g,r.b)}n.needsUpdate=!0}e.lookAt(Ou.setFromMatrixPosition(this.light.matrixWorld).negate())}}class Vu extends rl{constructor(e=10,n=10,i=4473924,a=8947848){i=new Hn(i),a=new Hn(a);var s=n/2,o=e/n,l=e/2;const h=[],c=[];for(let e=0,t=0,r=-l;e<=n;e++,r+=o){h.push(-l,0,r,l,0,r),h.push(r,0,-l,r,0,l);const u=e===s?i:a;u.toArray(c,t),t+=3,u.toArray(c,t),t+=3,u.toArray(c,t),t+=3,u.toArray(c,t),t+=3}const t=new ui;t.setAttribute("position",new $n(h,3)),t.setAttribute("color",new $n(c,3));e=new qo({vertexColors:!0,toneMapped:!1});super(t,e),this.type="GridHelper"}}rl;const ku=new pr,Wu=new pr,ju=new pr;class Xu extends gn{constructor(e,t,r){super(),this.light=e,this.light.updateMatrixWorld(),this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.color=r,void 0===t&&(t=1);let n=new ui;n.setAttribute("position",new $n([-t,t,0,t,t,0,t,-t,0,-t,-t,0,-t,t,0],3));t=new qo({fog:!1,toneMapped:!1});this.lightPlane=new $o(n,t),this.add(this.lightPlane),n=new ui,n.setAttribute("position",new $n([0,0,0,0,0,1],3)),this.targetLine=new $o(n,t),this.add(this.targetLine),this.update()}dispose(){this.lightPlane.geometry.dispose(),this.lightPlane.material.dispose(),this.targetLine.geometry.dispose(),this.targetLine.material.dispose()}update(){ku.setFromMatrixPosition(this.light.matrixWorld),Wu.setFromMatrixPosition(this.light.target.matrixWorld),ju.subVectors(Wu,ku),this.lightPlane.lookAt(Wu),void 0!==this.color?(this.lightPlane.material.color.set(this.color),this.targetLine.material.color.set(this.color)):(this.lightPlane.material.color.copy(this.light.color),this.targetLine.material.color.copy(this.light.color)),this.targetLine.lookAt(Wu),this.targetLine.scale.z=ju.length()}}const qu=new pr,Yu=new Bi;rl;function Zu(e,t,r,n,i,a,s){qu.set(i,a,s).unproject(n);var o=t[e];if(void 0!==o){const l=r.getAttribute("position");for(let e=0,t=o.length;e<t;e++)l.setXYZ(o[e],qu.x,qu.y,qu.z)}}const Ju=new gr;class Ku extends rl{constructor(e,t=16776960){var r=new Uint16Array([0,1,1,2,2,3,3,0,4,5,5,6,6,7,7,4,0,4,1,5,2,6,3,7]),n=new Float32Array(24);const i=new ui;i.setIndex(new Wn(r,1)),i.setAttribute("position",new Wn(n,3)),super(i,new qo({color:t,toneMapped:!1})),this.object=e,this.type="BoxHelper",this.matrixAutoUpdate=!1,this.update()}update(e){if(void 0!==e&&console.warn("THREE.BoxHelper: .update() has no longer arguments."),void 0!==this.object&&Ju.setFromObject(this.object),!Ju.isEmpty()){var t=Ju.min,e=Ju.max;const r=this.geometry.attributes.position,n=r.array;n[0]=e.x,n[1]=e.y,n[2]=e.z,n[3]=t.x,n[4]=e.y,n[5]=e.z,n[6]=t.x,n[7]=t.y,n[8]=e.z,n[9]=e.x,n[10]=t.y,n[11]=e.z,n[12]=e.x,n[13]=e.y,n[14]=t.z,n[15]=t.x,n[16]=e.y,n[17]=t.z,n[18]=t.x,n[19]=t.y,n[20]=t.z,n[21]=e.x,n[22]=t.y,n[23]=t.z,r.needsUpdate=!0,this.geometry.computeBoundingSphere()}}setFromObject(e){return this.object=e,this.update(),this}copy(e){return rl.prototype.copy.call(this,e),this.object=e.object,this}}rl;$o;const Qu=new pr;let $u,ed;class td extends gn{constructor(e=new pr(0,0,1),t=new pr(0,0,0),r=1,n=16776960,i=.2*r,a=.2*i){super(),this.type="ArrowHelper",void 0===$u&&($u=new ui,$u.setAttribute("position",new $n([0,0,0,0,1,0],3)),ed=new gl(0,.5,1,5,1),ed.translate(0,-.5,0)),this.position.copy(t),this.line=new $o($u,new qo({color:n,toneMapped:!1})),this.line.matrixAutoUpdate=!1,this.add(this.line),this.cone=new Li(ed,new Gn({color:n,toneMapped:!1})),this.cone.matrixAutoUpdate=!1,this.add(this.cone),this.setDirection(e),this.setLength(r,i,a)}setDirection(e){.99999<e.y?this.quaternion.set(0,0,0,1):e.y<-.99999?this.quaternion.set(1,0,0,0):(Qu.set(e.z,0,-e.x).normalize(),e=Math.acos(e.y),this.quaternion.setFromAxisAngle(Qu,e))}setLength(e,t=.2*e,r=.2*t){this.line.scale.set(1,Math.max(1e-4,e-t),1),this.line.updateMatrix(),this.cone.scale.set(r,t,r),this.cone.position.y=e,this.cone.updateMatrix()}setColor(e){this.line.material.color.set(e),this.cone.material.color.set(e)}copy(e){return super.copy(e,!1),this.line.copy(e.line),this.cone.copy(e.cone),this}}class rd extends rl{constructor(e=1){e=[0,0,0,e,0,0,0,0,0,0,e,0,0,0,0,0,0,e];const t=new ui;t.setAttribute("position",new $n(e,3)),t.setAttribute("color",new $n([1,0,0,1,.6,0,0,1,0,.6,1,0,0,0,1,0,.6,1],3));e=new qo({vertexColors:!0,toneMapped:!1});super(t,e),this.type="AxesHelper"}dispose(){this.geometry.dispose(),this.material.dispose()}}const nd=new Float32Array(1),id=new Int32Array(nd.buffer);const ad=Math.pow(2,8),sd=[.125,.215,.35,.446,.526,.582],od=5+sd.length,ld={[Lt]:0,[Ct]:1,[It]:2,[Dt]:3,[Nt]:4,[Ft]:5,[Pt]:6},hd=new Gn({side:Y,depthWrite:!1,depthTest:!1}),cd=new Li(new Pi,hd),ud=new Ec,{_lodPlanes:dd,_sizeLods:pd,_sigmas:md}=xd(),fd=new Hn;let gd=null;du=(1+Math.sqrt(5))/2,uu=1/du;const vd=[new pr(1,1,1),new pr(-1,1,1),new pr(1,1,-1),new pr(-1,1,-1),new pr(0,du,uu),new pr(0,du,-uu),new pr(uu,0,du),new pr(-uu,0,du),new pr(du,uu,0),new pr(-du,uu,0)];function yd(e){var t=Math.max(e.r,e.g,e.b),t=Math.min(Math.max(Math.ceil(Math.log2(t)),-128),127);return e.multiplyScalar(Math.pow(2,-t)),(t+128)/255}function xd(){const r=[],n=[],i=[];let a=8;for(let t=0;t<od;t++){var s=Math.pow(2,a);n.push(s);let e=1/s;4<t?e=sd[t-8+4-1]:0==t&&(e=0),i.push(e);var o=1/(s-1),s=-o/2,o=1+o/2,l=[s,s,o,s,o,o,s,s,o,o,s,o];const u=new Float32Array(108),d=new Float32Array(72),p=new Float32Array(36);for(let e=0;e<6;e++){var h=e%3*2/3-1,c=2<e?0:-1;u.set([h,c,0,h+2/3,c,0,h+2/3,1+c,0,h,c,0,h+2/3,1+c,0,h,1+c,0],18*e),d.set(l,12*e);c=[e,e,e,e,e,e];p.set(c,6*e)}const m=new ui;m.setAttribute("position",new Wn(u,3)),m.setAttribute("uv",new Wn(d,2)),m.setAttribute("faceIndex",new Wn(p,1)),r.push(m),4<a&&a--}return{_lodPlanes:r,_sizeLods:n,_sigmas:i}}function _d(e){const t=new hr(3*ad,3*ad,e);return t.texture.mapping=U,t.texture.name="PMREM.cubeUv",t.scissorTest=!0,t}function Md(e,t,r,n,i){e.viewport.set(t,r,n,i),e.scissor.set(t,r,n,i)}function wd(){var e=new tr(1,1);return new lh({name:"EquirectangularToCubeUV",uniforms:{envMap:{value:null},texelSize:{value:e},inputEncoding:{value:ld[Lt]},outputEncoding:{value:ld[Lt]}},vertexShader:Ed(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;
			uniform vec2 texelSize;

			${Td()}

			#include <common>

			void main() {

				gl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );

				vec3 outputDirection = normalize( vOutputDirection );
				vec2 uv = equirectUv( outputDirection );

				vec2 f = fract( uv / texelSize - 0.5 );
				uv -= f * texelSize;
				vec3 tl = envMapTexelToLinear( texture2D ( envMap, uv ) ).rgb;
				uv.x += texelSize.x;
				vec3 tr = envMapTexelToLinear( texture2D ( envMap, uv ) ).rgb;
				uv.y += texelSize.y;
				vec3 br = envMapTexelToLinear( texture2D ( envMap, uv ) ).rgb;
				uv.x -= texelSize.x;
				vec3 bl = envMapTexelToLinear( texture2D ( envMap, uv ) ).rgb;

				vec3 tm = mix( tl, tr, f.x );
				vec3 bm = mix( bl, br, f.x );
				gl_FragColor.rgb = mix( tm, bm, f.y );

				gl_FragColor = linearToOutputTexel( gl_FragColor );

			}
		`,blending:J,depthTest:!1,depthWrite:!1})}function bd(){return new lh({name:"CubemapToCubeUV",uniforms:{envMap:{value:null},inputEncoding:{value:ld[Lt]},outputEncoding:{value:ld[Lt]}},vertexShader:Ed(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform samplerCube envMap;

			${Td()}

			void main() {

				gl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );
				gl_FragColor.rgb = envMapTexelToLinear( textureCube( envMap, vec3( - vOutputDirection.x, vOutputDirection.yz ) ) ).rgb;
				gl_FragColor = linearToOutputTexel( gl_FragColor );

			}
		`,blending:J,depthTest:!1,depthWrite:!1})}function Ed(){return`

		precision mediump float;
		precision mediump int;

		attribute vec3 position;
		attribute vec2 uv;
		attribute float faceIndex;

		varying vec3 vOutputDirection;

		// RH coordinate system; PMREM face-indexing convention
		vec3 getDirection( vec2 uv, float face ) {

			uv = 2.0 * uv - 1.0;

			vec3 direction = vec3( uv, 1.0 );

			if ( face == 0.0 ) {

				direction = direction.zyx; // ( 1, v, u ) pos x

			} else if ( face == 1.0 ) {

				direction = direction.xzy;
				direction.xz *= -1.0; // ( -u, 1, -v ) pos y

			} else if ( face == 2.0 ) {

				direction.x *= -1.0; // ( -u, v, 1 ) pos z

			} else if ( face == 3.0 ) {

				direction = direction.zyx;
				direction.xz *= -1.0; // ( -1, v, -u ) neg x

			} else if ( face == 4.0 ) {

				direction = direction.xzy;
				direction.xy *= -1.0; // ( -u, -1, v ) neg y

			} else if ( face == 5.0 ) {

				direction.z *= -1.0; // ( u, v, -1 ) neg z

			}

			return direction;

		}

		void main() {

			vOutputDirection = getDirection( uv, faceIndex );
			gl_Position = vec4( position, 1.0 );

		}
	`}function Td(){return`

		uniform int inputEncoding;
		uniform int outputEncoding;

		#include <encodings_pars_fragment>

		vec4 inputTexelToLinear( vec4 value ) {

			if ( inputEncoding == 0 ) {

				return value;

			} else if ( inputEncoding == 1 ) {

				return sRGBToLinear( value );

			} else if ( inputEncoding == 2 ) {

				return RGBEToLinear( value );

			} else if ( inputEncoding == 3 ) {

				return RGBMToLinear( value, 7.0 );

			} else if ( inputEncoding == 4 ) {

				return RGBMToLinear( value, 16.0 );

			} else if ( inputEncoding == 5 ) {

				return RGBDToLinear( value, 256.0 );

			} else {

				return GammaToLinear( value, 2.2 );

			}

		}

		vec4 linearToOutputTexel( vec4 value ) {

			if ( outputEncoding == 0 ) {

				return value;

			} else if ( outputEncoding == 1 ) {

				return LinearTosRGB( value );

			} else if ( outputEncoding == 2 ) {

				return LinearToRGBE( value );

			} else if ( outputEncoding == 3 ) {

				return LinearToRGBM( value, 7.0 );

			} else if ( outputEncoding == 4 ) {

				return LinearToRGBM( value, 16.0 );

			} else if ( outputEncoding == 5 ) {

				return LinearToRGBD( value, 256.0 );

			} else {

				return LinearToGamma( value, 2.2 );

			}

		}

		vec4 envMapTexelToLinear( vec4 color ) {

			return inputTexelToLinear( color );

		}
	`}Vh.create=function(e,t){return console.log("THREE.Curve.create() has been deprecated"),e.prototype=Object.create(Vh.prototype),(e.prototype.constructor=e).prototype.getPoint=t,e},hc.prototype.fromPoints=function(e){return console.warn("THREE.Path: .fromPoints() has been renamed to .setFromPoints()."),this.setFromPoints(e)},Vu.prototype.setColors=function(){console.error("THREE.GridHelper: setColors() has been deprecated, pass them in the constructor instead.")},Bu.prototype.update=function(){console.error("THREE.SkeletonHelper: update() no longer needs to be called.")},Fh.prototype.extractUrlBase=function(e){return console.warn("THREE.Loader: .extractUrlBase() has been deprecated. Use THREE.LoaderUtils.extractUrlBase() instead."),Ic.extractUrlBase(e)},Fh.Handlers={add:function(){console.error("THREE.Loader: Handlers.add() has been removed. Use LoadingManager.addHandler() instead.")},get:function(){console.error("THREE.Loader: Handlers.get() has been removed. Use LoadingManager.getHandler() instead.")}},Su.prototype.center=function(e){return console.warn("THREE.Box2: .center() has been renamed to .getCenter()."),this.getCenter(e)},Su.prototype.empty=function(){return console.warn("THREE.Box2: .empty() has been renamed to .isEmpty()."),this.isEmpty()},Su.prototype.isIntersectionBox=function(e){return console.warn("THREE.Box2: .isIntersectionBox() has been renamed to .intersectsBox()."),this.intersectsBox(e)},Su.prototype.size=function(e){return console.warn("THREE.Box2: .size() has been renamed to .getSize()."),this.getSize(e)},gr.prototype.center=function(e){return console.warn("THREE.Box3: .center() has been renamed to .getCenter()."),this.getCenter(e)},gr.prototype.empty=function(){return console.warn("THREE.Box3: .empty() has been renamed to .isEmpty()."),this.isEmpty()},gr.prototype.isIntersectionBox=function(e){return console.warn("THREE.Box3: .isIntersectionBox() has been renamed to .intersectsBox()."),this.intersectsBox(e)},gr.prototype.isIntersectionSphere=function(e){return console.warn("THREE.Box3: .isIntersectionSphere() has been renamed to .intersectsSphere()."),this.intersectsSphere(e)},gr.prototype.size=function(e){return console.warn("THREE.Box3: .size() has been renamed to .getSize()."),this.getSize(e)},Fr.prototype.empty=function(){return console.warn("THREE.Sphere: .empty() has been renamed to .isEmpty()."),this.isEmpty()},ki.prototype.setFromMatrix=function(e){return console.warn("THREE.Frustum: .setFromMatrix() has been renamed to .setFromProjectionMatrix()."),this.setFromProjectionMatrix(e)},Lu.prototype.center=function(e){return console.warn("THREE.Line3: .center() has been renamed to .getCenter()."),this.getCenter(e)},rr.prototype.flattenToArrayOffset=function(e,t){return console.warn("THREE.Matrix3: .flattenToArrayOffset() has been deprecated. Use .toArray() instead."),this.toArray(e,t)},rr.prototype.multiplyVector3=function(e){return console.warn("THREE.Matrix3: .multiplyVector3() has been removed. Use vector.applyMatrix3( matrix ) instead."),e.applyMatrix3(this)},rr.prototype.multiplyVector3Array=function(){console.error("THREE.Matrix3: .multiplyVector3Array() has been removed.")},rr.prototype.applyToBufferAttribute=function(e){return console.warn("THREE.Matrix3: .applyToBufferAttribute() has been removed. Use attribute.applyMatrix3( matrix ) instead."),e.applyMatrix3(this)},rr.prototype.applyToVector3Array=function(){console.error("THREE.Matrix3: .applyToVector3Array() has been removed.")},rr.prototype.getInverse=function(e){return console.warn("THREE.Matrix3: .getInverse() has been removed. Use matrixInv.copy( matrix ).invert(); instead."),this.copy(e).invert()},Wr.prototype.extractPosition=function(e){return console.warn("THREE.Matrix4: .extractPosition() has been renamed to .copyPosition()."),this.copyPosition(e)},Wr.prototype.flattenToArrayOffset=function(e,t){return console.warn("THREE.Matrix4: .flattenToArrayOffset() has been deprecated. Use .toArray() instead."),this.toArray(e,t)},Wr.prototype.getPosition=function(){return console.warn("THREE.Matrix4: .getPosition() has been removed. Use Vector3.setFromMatrixPosition( matrix ) instead."),(new pr).setFromMatrixColumn(this,3)},Wr.prototype.setRotationFromQuaternion=function(e){return console.warn("THREE.Matrix4: .setRotationFromQuaternion() has been renamed to .makeRotationFromQuaternion()."),this.makeRotationFromQuaternion(e)},Wr.prototype.multiplyToArray=function(){console.warn("THREE.Matrix4: .multiplyToArray() has been removed.")},Wr.prototype.multiplyVector3=function(e){return console.warn("THREE.Matrix4: .multiplyVector3() has been removed. Use vector.applyMatrix4( matrix ) instead."),e.applyMatrix4(this)},Wr.prototype.multiplyVector4=function(e){return console.warn("THREE.Matrix4: .multiplyVector4() has been removed. Use vector.applyMatrix4( matrix ) instead."),e.applyMatrix4(this)},Wr.prototype.multiplyVector3Array=function(){console.error("THREE.Matrix4: .multiplyVector3Array() has been removed.")},Wr.prototype.rotateAxis=function(e){console.warn("THREE.Matrix4: .rotateAxis() has been removed. Use Vector3.transformDirection( matrix ) instead."),e.transformDirection(this)},Wr.prototype.crossVector=function(e){return console.warn("THREE.Matrix4: .crossVector() has been removed. Use vector.applyMatrix4( matrix ) instead."),e.applyMatrix4(this)},Wr.prototype.translate=function(){console.error("THREE.Matrix4: .translate() has been removed.")},Wr.prototype.rotateX=function(){console.error("THREE.Matrix4: .rotateX() has been removed.")},Wr.prototype.rotateY=function(){console.error("THREE.Matrix4: .rotateY() has been removed.")},Wr.prototype.rotateZ=function(){console.error("THREE.Matrix4: .rotateZ() has been removed.")},Wr.prototype.rotateByAxis=function(){console.error("THREE.Matrix4: .rotateByAxis() has been removed.")},Wr.prototype.applyToBufferAttribute=function(e){return console.warn("THREE.Matrix4: .applyToBufferAttribute() has been removed. Use attribute.applyMatrix4( matrix ) instead."),e.applyMatrix4(this)},Wr.prototype.applyToVector3Array=function(){console.error("THREE.Matrix4: .applyToVector3Array() has been removed.")},Wr.prototype.makeFrustum=function(e,t,r,n,i,a){return console.warn("THREE.Matrix4: .makeFrustum() has been removed. Use .makePerspective( left, right, top, bottom, near, far ) instead."),this.makePerspective(e,t,n,r,i,a)},Wr.prototype.getInverse=function(e){return console.warn("THREE.Matrix4: .getInverse() has been removed. Use matrixInv.copy( matrix ).invert(); instead."),this.copy(e).invert()},_n.prototype.isIntersectionLine=function(e){return console.warn("THREE.Plane: .isIntersectionLine() has been renamed to .intersectsLine()."),this.intersectsLine(e)},dr.prototype.multiplyVector3=function(e){return console.warn("THREE.Quaternion: .multiplyVector3() has been removed. Use is now vector.applyQuaternion( quaternion ) instead."),e.applyQuaternion(this)},dr.prototype.inverse=function(){return console.warn("THREE.Quaternion: .inverse() has been renamed to invert()."),this.invert()},kr.prototype.isIntersectionBox=function(e){return console.warn("THREE.Ray: .isIntersectionBox() has been renamed to .intersectsBox()."),this.intersectsBox(e)},kr.prototype.isIntersectionPlane=function(e){return console.warn("THREE.Ray: .isIntersectionPlane() has been renamed to .intersectsPlane()."),this.intersectsPlane(e)},kr.prototype.isIntersectionSphere=function(e){return console.warn("THREE.Ray: .isIntersectionSphere() has been renamed to .intersectsSphere()."),this.intersectsSphere(e)},Pn.prototype.area=function(){return console.warn("THREE.Triangle: .area() has been renamed to .getArea()."),this.getArea()},Pn.prototype.barycoordFromPoint=function(e,t){return console.warn("THREE.Triangle: .barycoordFromPoint() has been renamed to .getBarycoord()."),this.getBarycoord(e,t)},Pn.prototype.midpoint=function(e){return console.warn("THREE.Triangle: .midpoint() has been renamed to .getMidpoint()."),this.getMidpoint(e)},Pn.prototypenormal=function(e){return console.warn("THREE.Triangle: .normal() has been renamed to .getNormal()."),this.getNormal(e)},Pn.prototype.plane=function(e){return console.warn("THREE.Triangle: .plane() has been renamed to .getPlane()."),this.getPlane(e)},Pn.barycoordFromPoint=function(e,t,r,n,i){return console.warn("THREE.Triangle: .barycoordFromPoint() has been renamed to .getBarycoord()."),Pn.getBarycoord(e,t,r,n,i)},Pn.normal=function(e,t,r,n){return console.warn("THREE.Triangle: .normal() has been renamed to .getNormal()."),Pn.getNormal(e,t,r,n)},cc.prototype.extractAllPoints=function(e){return console.warn("THREE.Shape: .extractAllPoints() has been removed. Use .extractPoints() instead."),this.extractPoints(e)},cc.prototype.extrude=function(e){return console.warn("THREE.Shape: .extrude() has been removed. Use ExtrudeGeometry() instead."),new jl(this,e)},cc.prototype.makeGeometry=function(e){return console.warn("THREE.Shape: .makeGeometry() has been removed. Use ShapeGeometry() instead."),new Ql(this,e)},tr.prototype.fromAttribute=function(e,t,r){return console.warn("THREE.Vector2: .fromAttribute() has been renamed to .fromBufferAttribute()."),this.fromBufferAttribute(e,t,r)},tr.prototype.distanceToManhattan=function(e){return console.warn("THREE.Vector2: .distanceToManhattan() has been renamed to .manhattanDistanceTo()."),this.manhattanDistanceTo(e)},tr.prototype.lengthManhattan=function(){return console.warn("THREE.Vector2: .lengthManhattan() has been renamed to .manhattanLength()."),this.manhattanLength()},pr.prototype.setEulerFromRotationMatrix=function(){console.error("THREE.Vector3: .setEulerFromRotationMatrix() has been removed. Use Euler.setFromRotationMatrix() instead.")},pr.prototype.setEulerFromQuaternion=function(){console.error("THREE.Vector3: .setEulerFromQuaternion() has been removed. Use Euler.setFromQuaternion() instead.")},pr.prototype.getPositionFromMatrix=function(e){return console.warn("THREE.Vector3: .getPositionFromMatrix() has been renamed to .setFromMatrixPosition()."),this.setFromMatrixPosition(e)},pr.prototype.getScaleFromMatrix=function(e){return console.warn("THREE.Vector3: .getScaleFromMatrix() has been renamed to .setFromMatrixScale()."),this.setFromMatrixScale(e)},pr.prototype.getColumnFromMatrix=function(e,t){return console.warn("THREE.Vector3: .getColumnFromMatrix() has been renamed to .setFromMatrixColumn()."),this.setFromMatrixColumn(t,e)},pr.prototype.applyProjection=function(e){return console.warn("THREE.Vector3: .applyProjection() has been removed. Use .applyMatrix4( m ) instead."),this.applyMatrix4(e)},pr.prototype.fromAttribute=function(e,t,r){return console.warn("THREE.Vector3: .fromAttribute() has been renamed to .fromBufferAttribute()."),this.fromBufferAttribute(e,t,r)},pr.prototype.distanceToManhattan=function(e){return console.warn("THREE.Vector3: .distanceToManhattan() has been renamed to .manhattanDistanceTo()."),this.manhattanDistanceTo(e)},pr.prototype.lengthManhattan=function(){return console.warn("THREE.Vector3: .lengthManhattan() has been renamed to .manhattanLength()."),this.manhattanLength()},lr.prototype.fromAttribute=function(e,t,r){return console.warn("THREE.Vector4: .fromAttribute() has been renamed to .fromBufferAttribute()."),this.fromBufferAttribute(e,t,r)},lr.prototype.lengthManhattan=function(){return console.warn("THREE.Vector4: .lengthManhattan() has been renamed to .manhattanLength()."),this.manhattanLength()},gn.prototype.getChildByName=function(e){return console.warn("THREE.Object3D: .getChildByName() has been renamed to .getObjectByName()."),this.getObjectByName(e)},gn.prototype.renderDepth=function(){console.warn("THREE.Object3D: .renderDepth has been removed. Use .renderOrder, instead.")},gn.prototype.translate=function(e,t){return console.warn("THREE.Object3D: .translate() has been removed. Use .translateOnAxis( axis, distance ) instead."),this.translateOnAxis(t,e)},gn.prototype.getWorldRotation=function(){console.error("THREE.Object3D: .getWorldRotation() has been removed. Use THREE.Object3D.getWorldQuaternion( target ) instead.")},gn.prototype.applyMatrix=function(e){return console.warn("THREE.Object3D: .applyMatrix() has been renamed to .applyMatrix4()."),this.applyMatrix4(e)},Object.defineProperties(gn.prototype,{eulerOrder:{get:function(){return console.warn("THREE.Object3D: .eulerOrder is now .rotation.order."),this.rotation.order},set:function(e){console.warn("THREE.Object3D: .eulerOrder is now .rotation.order."),this.rotation.order=e}},useQuaternion:{get:function(){console.warn("THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.")},set:function(){console.warn("THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.")}}}),Li.prototype.setDrawMode=function(){console.error("THREE.Mesh: .setDrawMode() has been removed. The renderer now always assumes THREE.TrianglesDrawMode. Transform your geometry via BufferGeometryUtils.toTrianglesDrawMode() if necessary.")},Object.defineProperties(Li.prototype,{drawMode:{get:function(){return console.error("THREE.Mesh: .drawMode has been removed. The renderer now always assumes THREE.TrianglesDrawMode."),0},set:function(){console.error("THREE.Mesh: .drawMode has been removed. The renderer now always assumes THREE.TrianglesDrawMode. Transform your geometry via BufferGeometryUtils.toTrianglesDrawMode() if necessary.")}}}),Bo.prototype.initBones=function(){console.error("THREE.SkinnedMesh: initBones() has been removed.")},Ui.prototype.setLens=function(e,t){console.warn("THREE.PerspectiveCamera.setLens is deprecated. Use .setFocalLength and .filmGauge for a photographic setup."),void 0!==t&&(this.filmGauge=t),this.setFocalLength(e)},Object.defineProperties(uc.prototype,{onlyShadow:{set:function(){console.warn("THREE.Light: .onlyShadow has been removed.")}},shadowCameraFov:{set:function(e){console.warn("THREE.Light: .shadowCameraFov is now .shadow.camera.fov."),this.shadow.camera.fov=e}},shadowCameraLeft:{set:function(e){console.warn("THREE.Light: .shadowCameraLeft is now .shadow.camera.left."),this.shadow.camera.left=e}},shadowCameraRight:{set:function(e){console.warn("THREE.Light: .shadowCameraRight is now .shadow.camera.right."),this.shadow.camera.right=e}},shadowCameraTop:{set:function(e){console.warn("THREE.Light: .shadowCameraTop is now .shadow.camera.top."),this.shadow.camera.top=e}},shadowCameraBottom:{set:function(e){console.warn("THREE.Light: .shadowCameraBottom is now .shadow.camera.bottom."),this.shadow.camera.bottom=e}},shadowCameraNear:{set:function(e){console.warn("THREE.Light: .shadowCameraNear is now .shadow.camera.near."),this.shadow.camera.near=e}},shadowCameraFar:{set:function(e){console.warn("THREE.Light: .shadowCameraFar is now .shadow.camera.far."),this.shadow.camera.far=e}},shadowCameraVisible:{set:function(){console.warn("THREE.Light: .shadowCameraVisible has been removed. Use new THREE.CameraHelper( light.shadow.camera ) instead.")}},shadowBias:{set:function(e){console.warn("THREE.Light: .shadowBias is now .shadow.bias."),this.shadow.bias=e}},shadowDarkness:{set:function(){console.warn("THREE.Light: .shadowDarkness has been removed.")}},shadowMapWidth:{set:function(e){console.warn("THREE.Light: .shadowMapWidth is now .shadow.mapSize.width."),this.shadow.mapSize.width=e}},shadowMapHeight:{set:function(e){console.warn("THREE.Light: .shadowMapHeight is now .shadow.mapSize.height."),this.shadow.mapSize.height=e}}}),Object.defineProperties(Wn.prototype,{length:{get:function(){return console.warn("THREE.BufferAttribute: .length has been deprecated. Use .count instead."),this.array.length}},dynamic:{get:function(){return console.warn("THREE.BufferAttribute: .dynamic has been deprecated. Use .usage instead."),this.usage===Ht},set:function(){console.warn("THREE.BufferAttribute: .dynamic has been deprecated. Use .usage instead."),this.setUsage(Ht)}}}),Wn.prototype.setDynamic=function(e){return console.warn("THREE.BufferAttribute: .setDynamic() has been deprecated. Use .setUsage() instead."),this.setUsage(!0===e?Ht:zt),this},Wn.prototype.copyIndicesArray=function(){console.error("THREE.BufferAttribute: .copyIndicesArray() has been removed.")},Wn.prototype.setArray=function(){console.error("THREE.BufferAttribute: .setArray has been removed. Use BufferGeometry .setAttribute to replace/resize attribute buffers")},ui.prototype.addIndex=function(e){console.warn("THREE.BufferGeometry: .addIndex() has been renamed to .setIndex()."),this.setIndex(e)},ui.prototype.addAttribute=function(e,t){return console.warn("THREE.BufferGeometry: .addAttribute() has been renamed to .setAttribute()."),t&&t.isBufferAttribute||t&&t.isInterleavedBufferAttribute?"index"===e?(console.warn("THREE.BufferGeometry.addAttribute: Use .setIndex() for index attribute."),this.setIndex(t),this):this.setAttribute(e,t):(console.warn("THREE.BufferGeometry: .addAttribute() now expects ( name, attribute )."),this.setAttribute(e,new Wn(t,arguments[2])))},ui.prototype.addDrawCall=function(e,t,r){void 0!==r&&console.warn("THREE.BufferGeometry: .addDrawCall() no longer supports indexOffset."),console.warn("THREE.BufferGeometry: .addDrawCall() is now .addGroup()."),this.addGroup(e,t)},ui.prototype.clearDrawCalls=function(){console.warn("THREE.BufferGeometry: .clearDrawCalls() is now .clearGroups()."),this.clearGroups()},ui.prototype.computeOffsets=function(){console.warn("THREE.BufferGeometry: .computeOffsets() has been removed.")},ui.prototype.removeAttribute=function(e){return console.warn("THREE.BufferGeometry: .removeAttribute() has been renamed to .deleteAttribute()."),this.deleteAttribute(e)},ui.prototype.applyMatrix=function(e){return console.warn("THREE.BufferGeometry: .applyMatrix() has been renamed to .applyMatrix4()."),this.applyMatrix4(e)},Object.defineProperties(ui.prototype,{drawcalls:{get:function(){return console.error("THREE.BufferGeometry: .drawcalls has been renamed to .groups."),this.groups}},offsets:{get:function(){return console.warn("THREE.BufferGeometry: .offsets has been renamed to .groups."),this.groups}}}),lo.prototype.setDynamic=function(e){return console.warn("THREE.InterleavedBuffer: .setDynamic() has been deprecated. Use .setUsage() instead."),this.setUsage(!0===e?Ht:zt),this},lo.prototype.setArray=function(){console.error("THREE.InterleavedBuffer: .setArray has been removed. Use BufferGeometry .setAttribute to replace/resize attribute buffers")},jl.prototype.getArrays=function(){console.error("THREE.ExtrudeGeometry: .getArrays() has been removed.")},jl.prototype.addShapeList=function(){console.error("THREE.ExtrudeGeometry: .addShapeList() has been removed.")},jl.prototype.addShape=function(){console.error("THREE.ExtrudeGeometry: .addShape() has been removed.")},oo.prototype.dispose=function(){console.error("THREE.Scene: .dispose() has been removed.")},_u.prototype.onUpdate=function(){return console.warn("THREE.Uniform: .onUpdate() has been removed. Use object.onBeforeRender() instead."),this},Object.defineProperties(Dn.prototype,{wrapAround:{get:function(){console.warn("THREE.Material: .wrapAround has been removed.")},set:function(){console.warn("THREE.Material: .wrapAround has been removed.")}},overdraw:{get:function(){console.warn("THREE.Material: .overdraw has been removed.")},set:function(){console.warn("THREE.Material: .overdraw has been removed.")}},wrapRGB:{get:function(){return console.warn("THREE.Material: .wrapRGB has been removed."),new Hn}},shading:{get:function(){console.error("THREE."+this.type+": .shading has been removed. Use the boolean .flatShading instead.")},set:function(e){console.warn("THREE."+this.type+": .shading has been removed. Use the boolean .flatShading instead."),this.flatShading=1===e}},stencilMask:{get:function(){return console.warn("THREE."+this.type+": .stencilMask has been removed. Use .stencilFuncMask instead."),this.stencilFuncMask},set:function(e){console.warn("THREE."+this.type+": .stencilMask has been removed. Use .stencilFuncMask instead."),this.stencilFuncMask=e}}}),Object.defineProperties(Fi.prototype,{derivatives:{get:function(){return console.warn("THREE.ShaderMaterial: .derivatives has been moved to .extensions.derivatives."),this.extensions.derivatives},set:function(e){console.warn("THREE. ShaderMaterial: .derivatives has been moved to .extensions.derivatives."),this.extensions.derivatives=e}}}),no.prototype.clearTarget=function(e,t,r,n){console.warn("THREE.WebGLRenderer: .clearTarget() has been deprecated. Use .setRenderTarget() and .clear() instead."),this.setRenderTarget(e),this.clear(t,r,n)},no.prototype.animate=function(e){console.warn("THREE.WebGLRenderer: .animate() is now .setAnimationLoop()."),this.setAnimationLoop(e)},no.prototype.getCurrentRenderTarget=function(){return console.warn("THREE.WebGLRenderer: .getCurrentRenderTarget() is now .getRenderTarget()."),this.getRenderTarget()},no.prototype.getMaxAnisotropy=function(){return console.warn("THREE.WebGLRenderer: .getMaxAnisotropy() is now .capabilities.getMaxAnisotropy()."),this.capabilities.getMaxAnisotropy()},no.prototype.getPrecision=function(){return console.warn("THREE.WebGLRenderer: .getPrecision() is now .capabilities.precision."),this.capabilities.precision},no.prototype.resetGLState=function(){return console.warn("THREE.WebGLRenderer: .resetGLState() is now .state.reset()."),this.state.reset()},no.prototype.supportsFloatTextures=function(){return console.warn("THREE.WebGLRenderer: .supportsFloatTextures() is now .extensions.get( 'OES_texture_float' )."),this.extensions.get("OES_texture_float")},no.prototype.supportsHalfFloatTextures=function(){return console.warn("THREE.WebGLRenderer: .supportsHalfFloatTextures() is now .extensions.get( 'OES_texture_half_float' )."),this.extensions.get("OES_texture_half_float")},no.prototype.supportsStandardDerivatives=function(){return console.warn("THREE.WebGLRenderer: .supportsStandardDerivatives() is now .extensions.get( 'OES_standard_derivatives' )."),this.extensions.get("OES_standard_derivatives")},no.prototype.supportsCompressedTextureS3TC=function(){return console.warn("THREE.WebGLRenderer: .supportsCompressedTextureS3TC() is now .extensions.get( 'WEBGL_compressed_texture_s3tc' )."),this.extensions.get("WEBGL_compressed_texture_s3tc")},no.prototype.supportsCompressedTexturePVRTC=function(){return console.warn("THREE.WebGLRenderer: .supportsCompressedTexturePVRTC() is now .extensions.get( 'WEBGL_compressed_texture_pvrtc' )."),this.extensions.get("WEBGL_compressed_texture_pvrtc")},no.prototype.supportsBlendMinMax=function(){return console.warn("THREE.WebGLRenderer: .supportsBlendMinMax() is now .extensions.get( 'EXT_blend_minmax' )."),this.extensions.get("EXT_blend_minmax")},no.prototype.supportsVertexTextures=function(){return console.warn("THREE.WebGLRenderer: .supportsVertexTextures() is now .capabilities.vertexTextures."),this.capabilities.vertexTextures},no.prototype.supportsInstancedArrays=function(){return console.warn("THREE.WebGLRenderer: .supportsInstancedArrays() is now .extensions.get( 'ANGLE_instanced_arrays' )."),this.extensions.get("ANGLE_instanced_arrays")},no.prototype.enableScissorTest=function(e){console.warn("THREE.WebGLRenderer: .enableScissorTest() is now .setScissorTest()."),this.setScissorTest(e)},no.prototype.initMaterial=function(){console.warn("THREE.WebGLRenderer: .initMaterial() has been removed.")},no.prototype.addPrePlugin=function(){console.warn("THREE.WebGLRenderer: .addPrePlugin() has been removed.")},no.prototype.addPostPlugin=function(){console.warn("THREE.WebGLRenderer: .addPostPlugin() has been removed.")},no.prototype.updateShadowMap=function(){console.warn("THREE.WebGLRenderer: .updateShadowMap() has been removed.")},no.prototype.setFaceCulling=function(){console.warn("THREE.WebGLRenderer: .setFaceCulling() has been removed.")},no.prototype.allocTextureUnit=function(){console.warn("THREE.WebGLRenderer: .allocTextureUnit() has been removed.")},no.prototype.setTexture=function(){console.warn("THREE.WebGLRenderer: .setTexture() has been removed.")},no.prototype.setTexture2D=function(){console.warn("THREE.WebGLRenderer: .setTexture2D() has been removed.")},no.prototype.setTextureCube=function(){console.warn("THREE.WebGLRenderer: .setTextureCube() has been removed.")},no.prototype.getActiveMipMapLevel=function(){return console.warn("THREE.WebGLRenderer: .getActiveMipMapLevel() is now .getActiveMipmapLevel()."),this.getActiveMipmapLevel()},Object.defineProperties(no.prototype,{shadowMapEnabled:{get:function(){return this.shadowMap.enabled},set:function(e){console.warn("THREE.WebGLRenderer: .shadowMapEnabled is now .shadowMap.enabled."),this.shadowMap.enabled=e}},shadowMapType:{get:function(){return this.shadowMap.type},set:function(e){console.warn("THREE.WebGLRenderer: .shadowMapType is now .shadowMap.type."),this.shadowMap.type=e}},shadowMapCullFace:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMapCullFace has been removed. Set Material.shadowSide instead.")},set:function(){console.warn("THREE.WebGLRenderer: .shadowMapCullFace has been removed. Set Material.shadowSide instead.")}},context:{get:function(){return console.warn("THREE.WebGLRenderer: .context has been removed. Use .getContext() instead."),this.getContext()}},vr:{get:function(){return console.warn("THREE.WebGLRenderer: .vr has been renamed to .xr"),this.xr}},gammaInput:{get:function(){return console.warn("THREE.WebGLRenderer: .gammaInput has been removed. Set the encoding for textures via Texture.encoding instead."),!1},set:function(){console.warn("THREE.WebGLRenderer: .gammaInput has been removed. Set the encoding for textures via Texture.encoding instead.")}},gammaOutput:{get:function(){return console.warn("THREE.WebGLRenderer: .gammaOutput has been removed. Set WebGLRenderer.outputEncoding instead."),!1},set:function(e){console.warn("THREE.WebGLRenderer: .gammaOutput has been removed. Set WebGLRenderer.outputEncoding instead."),this.outputEncoding=!0===e?Ct:Lt}},toneMappingWhitePoint:{get:function(){return console.warn("THREE.WebGLRenderer: .toneMappingWhitePoint has been removed."),1},set:function(){console.warn("THREE.WebGLRenderer: .toneMappingWhitePoint has been removed.")}}}),Object.defineProperties(qs.prototype,{cullFace:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMap.cullFace has been removed. Set Material.shadowSide instead.")},set:function(){console.warn("THREE.WebGLRenderer: .shadowMap.cullFace has been removed. Set Material.shadowSide instead.")}},renderReverseSided:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderReverseSided has been removed. Set Material.shadowSide instead.")},set:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderReverseSided has been removed. Set Material.shadowSide instead.")}},renderSingleSided:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderSingleSided has been removed. Set Material.shadowSide instead.")},set:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderSingleSided has been removed. Set Material.shadowSide instead.")}}}),Object.defineProperties(hr.prototype,{wrapS:{get:function(){return console.warn("THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS."),this.texture.wrapS},set:function(e){console.warn("THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS."),this.texture.wrapS=e}},wrapT:{get:function(){return console.warn("THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT."),this.texture.wrapT},set:function(e){console.warn("THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT."),this.texture.wrapT=e}},magFilter:{get:function(){return console.warn("THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter."),this.texture.magFilter},set:function(e){console.warn("THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter."),this.texture.magFilter=e}},minFilter:{get:function(){return console.warn("THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter."),this.texture.minFilter},set:function(e){console.warn("THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter."),this.texture.minFilter=e}},anisotropy:{get:function(){return console.warn("THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy."),this.texture.anisotropy},set:function(e){console.warn("THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy."),this.texture.anisotropy=e}},offset:{get:function(){return console.warn("THREE.WebGLRenderTarget: .offset is now .texture.offset."),this.texture.offset},set:function(e){console.warn("THREE.WebGLRenderTarget: .offset is now .texture.offset."),this.texture.offset=e}},repeat:{get:function(){return console.warn("THREE.WebGLRenderTarget: .repeat is now .texture.repeat."),this.texture.repeat},set:function(e){console.warn("THREE.WebGLRenderTarget: .repeat is now .texture.repeat."),this.texture.repeat=e}},format:{get:function(){return console.warn("THREE.WebGLRenderTarget: .format is now .texture.format."),this.texture.format},set:function(e){console.warn("THREE.WebGLRenderTarget: .format is now .texture.format."),this.texture.format=e}},type:{get:function(){return console.warn("THREE.WebGLRenderTarget: .type is now .texture.type."),this.texture.type},set:function(e){console.warn("THREE.WebGLRenderTarget: .type is now .texture.type."),this.texture.type=e}},generateMipmaps:{get:function(){return console.warn("THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps."),this.texture.generateMipmaps},set:function(e){console.warn("THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps."),this.texture.generateMipmaps=e}}}),ru.prototype.load=function(e){console.warn("THREE.Audio: .load has been deprecated. Use THREE.AudioLoader instead.");const t=this,r=new Wc;return r.load(e,function(e){t.setBuffer(e)}),this},ou.prototype.getData=function(){return console.warn("THREE.AudioAnalyser: .getData() is now .getFrequencyData()."),this.getFrequencyData()},Oi.prototype.updateCubeMap=function(e,t){return console.warn("THREE.CubeCamera: .updateCubeMap() is now .update()."),this.update(e,t)},Oi.prototype.clear=function(e,t,r,n){return console.warn("THREE.CubeCamera: .clear() is now .renderTarget.clear()."),this.renderTarget.clear(e,t,r,n)},ir.crossOrigin=void 0,ir.loadTexture=function(e,t,r,n){console.warn("THREE.ImageUtils.loadTexture has been deprecated. Use THREE.TextureLoader() instead.");const i=new Gh;i.setCrossOrigin(this.crossOrigin);const a=i.load(e,r,void 0,n);return t&&(a.mapping=t),a},ir.loadTextureCube=function(e,t,r,n){console.warn("THREE.ImageUtils.loadTextureCube has been deprecated. Use THREE.CubeTextureLoader() instead.");const i=new zh;i.setCrossOrigin(this.crossOrigin);const a=i.load(e,r,void 0,n);return t&&(a.mapping=t),a},ir.loadCompressedTexture=function(){console.error("THREE.ImageUtils.loadCompressedTexture has been removed. Use THREE.DDSLoader instead.")},ir.loadCompressedTextureCube=function(){console.error("THREE.ImageUtils.loadCompressedTextureCube has been removed. Use THREE.DDSLoader instead.")};uu={createMultiMaterialObject:function(){console.error("THREE.SceneUtils has been moved to /examples/jsm/utils/SceneUtils.js")},detach:function(){console.error("THREE.SceneUtils has been moved to /examples/jsm/utils/SceneUtils.js")},attach:function(){console.error("THREE.SceneUtils has been moved to /examples/jsm/utils/SceneUtils.js")}};"undefined"!=typeof __THREE_DEVTOOLS__&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("register",{detail:{revision:t}})),"undefined"!=typeof window&&(window.__THREE__?console.warn("WARNING: Multiple instances of Three.js being imported."):window.__THREE__=t),e.ACESFilmicToneMapping=D,e.AddEquation=re,e.AddOperation=L,e.AdditiveAnimationBlendMode=2501,e.AdditiveBlending=Q,e.AlphaFormat=p,e.AlwaysDepth=xe,e.AlwaysStencilFunc=519,e.AmbientLight=Ac,e.AmbientLightProbe=Xc,e.AnimationClip=Ph,e.AnimationLoader=class extends Fh{constructor(e){super(e)}load(t,r,e,n){const i=this,a=new Uh(this.manager);a.setPath(this.path),a.setRequestHeader(this.requestHeader),a.setWithCredentials(this.withCredentials),a.load(t,function(e){try{r(i.parse(JSON.parse(e)))}catch(e){n?n(e):console.error(e),i.manager.itemError(t)}},e,n)}parse(t){const r=[];for(let e=0;e<t.length;e++){var n=Ph.parse(t[e]);r.push(n)}return r}},e.AnimationMixer=xu,e.AnimationObjectGroup=vu,e.AnimationUtils=yh,e.ArcCurve=Wh,e.ArrayCamera=Ks,e.ArrowHelper=td,e.Audio=ru,e.AudioAnalyser=ou,e.AudioContext=kc,e.AudioListener=tu,e.AudioLoader=Wc,e.AxesHelper=rd,e.AxisHelper=function(e){return console.warn("THREE.AxisHelper has been renamed to THREE.AxesHelper."),new rd(e)},e.BackSide=Y,e.BasicDepthPacking=3200,e.BasicShadowMap=0,e.BinaryTextureLoader=function(e){return console.warn("THREE.BinaryTextureLoader has been renamed to THREE.DataTextureLoader."),new Hh(e)},e.Bone=Uo,e.BooleanKeyframeTrack=Eh,e.BoundingBoxHelper=function(e,t){return console.warn("THREE.BoundingBoxHelper has been deprecated. Creating a THREE.BoxHelper instead."),new Ku(e,t)},e.Box2=Su,e.Box3=gr,e.Box3Helper=class extends rl{constructor(e,t=16776960){var r=new Uint16Array([0,1,1,2,2,3,3,0,4,5,5,6,6,7,7,4,0,4,1,5,2,6,3,7]);const n=new ui;n.setIndex(new Wn(r,1)),n.setAttribute("position",new $n([1,1,1,-1,1,1,-1,-1,1,1,-1,1,1,1,-1,-1,1,-1,-1,-1,-1,1,-1,-1],3)),super(n,new qo({color:t,toneMapped:!1})),this.box=e,this.type="Box3Helper",this.geometry.computeBoundingSphere()}updateMatrixWorld(e){const t=this.box;t.isEmpty()||(t.getCenter(this.position),t.getSize(this.scale),this.scale.multiplyScalar(.5),super.updateMatrixWorld(e))}},e.BoxBufferGeometry=Pi,e.BoxGeometry=Pi,e.BoxHelper=Ku,e.BufferAttribute=Wn,e.BufferGeometry=ui,e.BufferGeometryLoader=Fc,e.ByteType=a,e.Cache=Ih,e.Camera=Bi,e.CameraHelper=class extends rl{constructor(e){const t=new ui;var r=new qo({color:16777215,vertexColors:!0,toneMapped:!1});const n=[],i=[],a={};var s=new Hn(16755200),o=new Hn(16711680),l=new Hn(43775),h=new Hn(16777215),c=new Hn(3355443);function u(e,t,r){d(e,r),d(t,r)}function d(e,t){n.push(0,0,0),i.push(t.r,t.g,t.b),void 0===a[e]&&(a[e]=[]),a[e].push(n.length/3-1)}u("n1","n2",s),u("n2","n4",s),u("n4","n3",s),u("n3","n1",s),u("f1","f2",s),u("f2","f4",s),u("f4","f3",s),u("f3","f1",s),u("n1","f1",s),u("n2","f2",s),u("n3","f3",s),u("n4","f4",s),u("p","n1",o),u("p","n2",o),u("p","n3",o),u("p","n4",o),u("u1","u2",l),u("u2","u3",l),u("u3","u1",l),u("c","t",h),u("p","c",c),u("cn1","cn2",c),u("cn3","cn4",c),u("cf1","cf2",c),u("cf3","cf4",c),t.setAttribute("position",new $n(n,3)),t.setAttribute("color",new $n(i,3)),super(t,r),this.type="CameraHelper",this.camera=e,this.camera.updateProjectionMatrix&&this.camera.updateProjectionMatrix(),this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.pointMap=a,this.update()}update(){const e=this.geometry;var t=this.pointMap;Yu.projectionMatrixInverse.copy(this.camera.projectionMatrixInverse),Zu("c",t,e,Yu,0,0,-1),Zu("t",t,e,Yu,0,0,1),Zu("n1",t,e,Yu,-1,-1,-1),Zu("n2",t,e,Yu,1,-1,-1),Zu("n3",t,e,Yu,-1,1,-1),Zu("n4",t,e,Yu,1,1,-1),Zu("f1",t,e,Yu,-1,-1,1),Zu("f2",t,e,Yu,1,-1,1),Zu("f3",t,e,Yu,-1,1,1),Zu("f4",t,e,Yu,1,1,1),Zu("u1",t,e,Yu,.7,1.1,-1),Zu("u2",t,e,Yu,-.7,1.1,-1),Zu("u3",t,e,Yu,0,2,-1),Zu("cf1",t,e,Yu,-1,0,1),Zu("cf2",t,e,Yu,1,0,1),Zu("cf3",t,e,Yu,0,-1,1),Zu("cf4",t,e,Yu,0,1,1),Zu("cn1",t,e,Yu,-1,0,-1),Zu("cn2",t,e,Yu,1,0,-1),Zu("cn3",t,e,Yu,0,-1,-1),Zu("cn4",t,e,Yu,0,1,-1),e.getAttribute("position").needsUpdate=!0}dispose(){this.geometry.dispose(),this.material.dispose()}},e.CanvasRenderer=function(){console.error("THREE.CanvasRenderer has been removed")},e.CanvasTexture=pl,e.CatmullRomCurve3=Jh,e.CineonToneMapping=I,e.CircleBufferGeometry=fl,e.CircleGeometry=fl,e.ClampToEdgeWrapping=Le,e.Clock=Zc,e.Color=Hn,e.ColorKeyframeTrack=Th,e.CompressedTexture=dl,e.CompressedTextureLoader=class extends Fh{constructor(e){super(e)}load(r,i,n,a){const s=this,o=[],l=new dl,h=new Uh(this.manager);h.setPath(this.path),h.setResponseType("arraybuffer"),h.setRequestHeader(this.requestHeader),h.setWithCredentials(s.withCredentials);let c=0;if(Array.isArray(r))for(let e=0,t=r.length;e<t;++e)!function(t){h.load(r[t],function(e){e=s.parse(e,!0);o[t]={width:e.width,height:e.height,format:e.format,mipmaps:e.mipmaps},c+=1,6===c&&(1===e.mipmapCount&&(l.minFilter=k),l.image=o,l.format=e.format,l.needsUpdate=!0,i&&i(l))},n,a)}(e);else h.load(r,function(e){var r=s.parse(e,!0);if(r.isCubemap){var n=r.mipmaps.length/r.mipmapCount;for(let t=0;t<n;t++){o[t]={mipmaps:[]};for(let e=0;e<r.mipmapCount;e++)o[t].mipmaps.push(r.mipmaps[t*r.mipmapCount+e]),o[t].format=r.format,o[t].width=r.width,o[t].height=r.height}l.image=o}else l.image.width=r.width,l.image.height=r.height,l.mipmaps=r.mipmaps;1===r.mipmapCount&&(l.minFilter=k),l.format=r.format,l.needsUpdate=!0,i&&i(l)},n,a);return l}},e.ConeBufferGeometry=vl,e.ConeGeometry=vl,e.CubeCamera=Oi,e.CubeReflectionMapping=F,e.CubeRefractionMapping=B,e.CubeTexture=zi,e.CubeTextureLoader=zh,e.CubeUVReflectionMapping=U,e.CubeUVRefractionMapping=O,e.CubicBezierCurve=ec,e.CubicBezierCurve3=tc,e.CubicInterpolant=_h,e.CullFaceBack=X,e.CullFaceFront=q,e.CullFaceFrontBack=3,e.CullFaceNone=j,e.Curve=Vh,e.CurvePath=lc,e.CustomBlending=te,e.CustomToneMapping=N,e.CylinderBufferGeometry=gl,e.CylinderGeometry=gl,e.Cylindrical=class{constructor(e=1,t=0,r=0){return this.radius=e,this.theta=t,this.y=r,this}set(e,t,r){return this.radius=e,this.theta=t,this.y=r,this}copy(e){return this.radius=e.radius,this.theta=e.theta,this.y=e.y,this}setFromVector3(e){return this.setFromCartesianCoords(e.x,e.y,e.z)}setFromCartesianCoords(e,t,r){return this.radius=Math.sqrt(e*e+r*r),this.theta=Math.atan2(e,r),this.y=t,this}clone(){return(new this.constructor).copy(this)}},e.DataTexture=Oo,e.DataTexture2DArray=ca,e.DataTexture3D=ua,e.DataTextureLoader=Hh,e.DataUtils=class{static toHalfFloat(e){nd[0]=e;var t=id[0];let r=t>>16&32768,n=t>>12&2047;e=t>>23&255;return e<103||(142<e?(r|=31744,r|=(255==e?0:1)&&8388607&t):e<113?(n|=2048,r|=(n>>114-e)+(n>>113-e&1)):(r|=e-112<<10|n>>1,r+=1&n)),r}},e.DecrementStencilOp=7683,e.DecrementWrapStencilOp=34056,e.DefaultLoadingManager=Nh,e.DepthFormat=Oe,e.DepthStencilFormat=ze,e.DepthTexture=ml,e.DirectionalLight=Sc,e.DirectionalLightHelper=Xu,e.DiscreteInterpolant=wh,e.DodecahedronBufferGeometry=xl,e.DodecahedronGeometry=xl,e.DoubleSide=Z,e.DstAlphaFactor=pe,e.DstColorFactor=fe,e.DynamicBufferAttribute=function(e,t){return console.warn("THREE.DynamicBufferAttribute has been removed. Use new THREE.BufferAttribute().setUsage( THREE.DynamicDrawUsage ) instead."),new Wn(e,t).setUsage(Ht)},e.DynamicCopyUsage=35050,e.DynamicDrawUsage=Ht,e.DynamicReadUsage=35049,e.EdgesGeometry=El,e.EdgesHelper=function(e,t){return console.warn("THREE.EdgesHelper has been removed. Use THREE.EdgesGeometry instead."),new rl(new El(e.geometry),new qo({color:void 0!==t?t:16777215}))},e.EllipseCurve=kh,e.EqualDepth=we,e.EqualStencilFunc=514,e.EquirectangularReflectionMapping=l,e.EquirectangularRefractionMapping=h,e.Euler=en,e.EventDispatcher=Vt,e.ExtrudeBufferGeometry=jl,e.ExtrudeGeometry=jl,e.FaceColors=1,e.FileLoader=Uh,e.FlatShading=1,e.Float16BufferAttribute=Qn,e.Float32Attribute=function(e,t){return console.warn("THREE.Float32Attribute has been removed. Use new THREE.Float32BufferAttribute() instead."),new $n(e,t)},e.Float32BufferAttribute=$n,e.Float64Attribute=function(e,t){return console.warn("THREE.Float64Attribute has been removed. Use new THREE.Float64BufferAttribute() instead."),new ei(e,t)},e.Float64BufferAttribute=ei,e.FloatType=De,e.Fog=so,e.FogExp2=ao,e.Font=Gc,e.FontLoader=class extends Fh{constructor(e){super(e)}load(e,n,t,r){const i=this,a=new Uh(this.manager);a.setPath(this.path),a.setRequestHeader(this.requestHeader),a.setWithCredentials(i.withCredentials),a.load(e,function(t){let r;try{r=JSON.parse(t)}catch(e){console.warn("THREE.FontLoader: typeface.js support is being deprecated. Use typeface.json instead."),r=JSON.parse(t.substring(65,t.length-2))}t=i.parse(r);n&&n(t)},t,r)}parse(e){return new Gc(e)}},e.FrontSide=R,e.Frustum=ki,e.GLBufferAttribute=wu,e.GLSL1="100",e.GLSL3=Gt,e.GammaEncoding=Pt,e.GreaterDepth=Ee,e.GreaterEqualDepth=be,e.GreaterEqualStencilFunc=518,e.GreaterStencilFunc=516,e.GridHelper=Vu,e.Group=Qs,e.HalfFloatType=Ne,e.HemisphereLight=dc,e.HemisphereLightHelper=Gu,e.HemisphereLightProbe=jc,e.IcosahedronBufferGeometry=ql,e.IcosahedronGeometry=ql,e.ImageBitmapLoader=zc,e.ImageLoader=Oh,e.ImageUtils=ir,e.ImmediateRenderObject=Cu,e.IncrementStencilOp=7682,e.IncrementWrapStencilOp=34055,e.InstancedBufferAttribute=Nc,e.InstancedBufferGeometry=Dc,e.InstancedInterleavedBuffer=Mu,e.InstancedMesh=Xo,e.Int16Attribute=function(e,t){return console.warn("THREE.Int16Attribute has been removed. Use new THREE.Int16BufferAttribute() instead."),new Yn(e,t)},e.Int16BufferAttribute=Yn,e.Int32Attribute=function(e,t){return console.warn("THREE.Int32Attribute has been removed. Use new THREE.Int32BufferAttribute() instead."),new Jn(e,t)},e.Int32BufferAttribute=Jn,e.Int8Attribute=function(e,t){return console.warn("THREE.Int8Attribute has been removed. Use new THREE.Int8BufferAttribute() instead."),new jn(e,t)},e.Int8BufferAttribute=jn,e.IntType=o,e.InterleavedBuffer=lo,e.InterleavedBufferAttribute=co,e.Interpolant=xh,e.InterpolateDiscrete=i,e.InterpolateLinear=Tt,e.InterpolateSmooth=2302,e.InvertStencilOp=5386,e.JSONLoader=function(){console.error("THREE.JSONLoader has been removed.")},e.KeepStencilOp=7680,e.KeyframeTrack=bh,e.LOD=Co,e.LatheBufferGeometry=Yl,e.LatheGeometry=Yl,e.Layers=tn,e.LensFlare=function(){console.error("THREE.LensFlare has been moved to /examples/jsm/objects/Lensflare.js")},e.LessDepth=_e,e.LessEqualDepth=Me,e.LessEqualStencilFunc=515,e.LessStencilFunc=513,e.Light=uc,e.LightProbe=Cc,e.Line=$o,e.Line3=Lu,e.LineBasicMaterial=qo,e.LineCurve=rc,e.LineCurve3=nc,e.LineDashedMaterial=gh,e.LineLoop=nl,e.LinePieces=1,e.LineSegments=rl,e.LineStrip=0,e.LinearEncoding=Lt,e.LinearFilter=k,e.LinearInterpolant=Mh,e.LinearMipMapLinearFilter=1008,e.LinearMipMapNearestFilter=1007,e.LinearMipmapLinearFilter=Pe,e.LinearMipmapNearestFilter=W,e.LinearToneMapping=C,e.Loader=Fh,e.LoaderUtils=Ic,e.LoadingManager=Dh,e.LogLuvEncoding=r,e.LoopOnce=2200,e.LoopPingPong=2202,e.LoopRepeat=2201,e.LuminanceAlphaFormat=f,e.LuminanceFormat=m,e.MOUSE={LEFT:0,MIDDLE:1,RIGHT:2,ROTATE:0,DOLLY:1,PAN:2},e.Material=Dn,e.MaterialLoader=Pc,e.Math=er,e.MathUtils=er,e.Matrix3=rr,e.Matrix4=Wr,e.MaxEquation=se,e.Mesh=Li,e.MeshBasicMaterial=Gn,e.MeshDepthMaterial=ks,e.MeshDistanceMaterial=Ws,e.MeshFaceMaterial=function(e){return console.warn("THREE.MeshFaceMaterial has been removed. Use an Array instead."),e},e.MeshLambertMaterial=mh,e.MeshMatcapMaterial=fh,e.MeshNormalMaterial=ph,e.MeshPhongMaterial=uh,e.MeshPhysicalMaterial=ch,e.MeshStandardMaterial=hh,e.MeshToonMaterial=dh,e.MinEquation=ae,e.MirroredRepeatWrapping=H,e.MixOperation=T,e.MultiMaterial=function(e=[]){return console.warn("THREE.MultiMaterial has been removed. Use an Array instead."),e.isMultiMaterial=!0,(e.materials=e).clone=function(){return e.slice()},e},e.MultiplyBlending=ee,e.MultiplyOperation=E,e.NearestFilter=Ce,e.NearestMipMapLinearFilter=1005,e.NearestMipMapNearestFilter=1004,e.NearestMipmapLinearFilter=V,e.NearestMipmapNearestFilter=G,e.NeverDepth=ye,e.NeverStencilFunc=512,e.NoBlending=J,e.NoColors=0,e.NoToneMapping=Re,e.NormalAnimationBlendMode=2500,e.NormalBlending=K,e.NotEqualDepth=Te,e.NotEqualStencilFunc=517,e.NumberKeyframeTrack=Sh,e.Object3D=gn,e.ObjectLoader=class extends Fh{constructor(e){super(e)}load(n,i,e,a){const s=this;var t=""===this.path?Ic.extractUrlBase(n):this.path;this.resourcePath=this.resourcePath||t;const r=new Uh(this.manager);r.setPath(this.path),r.setRequestHeader(this.requestHeader),r.setWithCredentials(this.withCredentials),r.load(n,function(e){let t=null;try{t=JSON.parse(e)}catch(e){return void 0!==a&&a(e),void console.error("THREE:ObjectLoader: Can't parse "+n+".",e.message)}const r=t.metadata;void 0!==r&&void 0!==r.type&&"geometry"!==r.type.toLowerCase()?s.parse(t,i):console.error("THREE.ObjectLoader: Can't load "+n)},e,a)}parse(e,t){var r=this.parseAnimations(e.animations),n=this.parseShapes(e.shapes),i=this.parseGeometries(e.geometries,n),a=this.parseImages(e.images,function(){void 0!==t&&t(s)}),n=this.parseTextures(e.textures,a),n=this.parseMaterials(e.materials,n);const s=this.parseObject(e.object,i,n,r);e=this.parseSkeletons(e.skeletons,s);if(this.bindSkeletons(s,e),void 0!==t){let e=!1;for(const o in a)if(a[o]instanceof HTMLImageElement){e=!0;break}!1===e&&t(s)}return s}parseShapes(r){const n={};if(void 0!==r)for(let e=0,t=r.length;e<t;e++){var i=(new cc).fromJSON(r[e]);n[i.uuid]=i}return n}parseSkeletons(r,e){const n={},i={};if(e.traverse(function(e){e.isBone&&(i[e.uuid]=e)}),void 0!==r)for(let e=0,t=r.length;e<t;e++){var a=(new Go).fromJSON(r[e],i);n[a.uuid]=a}return n}parseGeometries(r,n){const i={};let a;if(void 0!==r){const h=new Fc;for(let t=0,e=r.length;t<e;t++){let e;const c=r[t];switch(c.type){case"PlaneGeometry":case"PlaneBufferGeometry":e=new sh[c.type](c.width,c.height,c.widthSegments,c.heightSegments);break;case"BoxGeometry":case"BoxBufferGeometry":e=new sh[c.type](c.width,c.height,c.depth,c.widthSegments,c.heightSegments,c.depthSegments);break;case"CircleGeometry":case"CircleBufferGeometry":e=new sh[c.type](c.radius,c.segments,c.thetaStart,c.thetaLength);break;case"CylinderGeometry":case"CylinderBufferGeometry":e=new sh[c.type](c.radiusTop,c.radiusBottom,c.height,c.radialSegments,c.heightSegments,c.openEnded,c.thetaStart,c.thetaLength);break;case"ConeGeometry":case"ConeBufferGeometry":e=new sh[c.type](c.radius,c.height,c.radialSegments,c.heightSegments,c.openEnded,c.thetaStart,c.thetaLength);break;case"SphereGeometry":case"SphereBufferGeometry":e=new sh[c.type](c.radius,c.widthSegments,c.heightSegments,c.phiStart,c.phiLength,c.thetaStart,c.thetaLength);break;case"DodecahedronGeometry":case"DodecahedronBufferGeometry":case"IcosahedronGeometry":case"IcosahedronBufferGeometry":case"OctahedronGeometry":case"OctahedronBufferGeometry":case"TetrahedronGeometry":case"TetrahedronBufferGeometry":e=new sh[c.type](c.radius,c.detail);break;case"RingGeometry":case"RingBufferGeometry":e=new sh[c.type](c.innerRadius,c.outerRadius,c.thetaSegments,c.phiSegments,c.thetaStart,c.thetaLength);break;case"TorusGeometry":case"TorusBufferGeometry":e=new sh[c.type](c.radius,c.tube,c.radialSegments,c.tubularSegments,c.arc);break;case"TorusKnotGeometry":case"TorusKnotBufferGeometry":e=new sh[c.type](c.radius,c.tube,c.tubularSegments,c.radialSegments,c.p,c.q);break;case"TubeGeometry":case"TubeBufferGeometry":e=new sh[c.type]((new oc[c.path.type]).fromJSON(c.path),c.tubularSegments,c.radius,c.radialSegments,c.closed);break;case"LatheGeometry":case"LatheBufferGeometry":e=new sh[c.type](c.points,c.segments,c.phiStart,c.phiLength);break;case"PolyhedronGeometry":case"PolyhedronBufferGeometry":e=new sh[c.type](c.vertices,c.indices,c.radius,c.details);break;case"ShapeGeometry":case"ShapeBufferGeometry":a=[];for(let e=0,t=c.shapes.length;e<t;e++){var s=n[c.shapes[e]];a.push(s)}e=new sh[c.type](a,c.curveSegments);break;case"ExtrudeGeometry":case"ExtrudeBufferGeometry":a=[];for(let e=0,t=c.shapes.length;e<t;e++){var o=n[c.shapes[e]];a.push(o)}var l=c.options.extrudePath;void 0!==l&&(c.options.extrudePath=(new oc[l.type]).fromJSON(l)),e=new sh[c.type](a,c.options);break;case"BufferGeometry":case"InstancedBufferGeometry":e=h.parse(c);break;case"Geometry":console.error('THREE.ObjectLoader: Loading "Geometry" is not supported anymore.');break;default:console.warn('THREE.ObjectLoader: Unsupported geometry type "'+c.type+'"');continue}e.uuid=c.uuid,void 0!==c.name&&(e.name=c.name),!0===e.isBufferGeometry&&void 0!==c.userData&&(e.userData=c.userData),i[c.uuid]=e}}return i}parseMaterials(r,e){const n={},i={};if(void 0!==r){const o=new Pc;o.setTextures(e);for(let e=0,t=r.length;e<t;e++){var a=r[e];if("MultiMaterial"===a.type){const l=[];for(let e=0;e<a.materials.length;e++){var s=a.materials[e];void 0===n[s.uuid]&&(n[s.uuid]=o.parse(s)),l.push(n[s.uuid])}i[a.uuid]=l}else void 0===n[a.uuid]&&(n[a.uuid]=o.parse(a)),i[a.uuid]=n[a.uuid]}}return i}parseAnimations(t){const r={};if(void 0!==t)for(let e=0;e<t.length;e++){var n=t[e],n=Ph.parse(n);r[n.uuid]=n}return r}parseImages(r,e){const n=this,i={};let a;function s(e){if("string"!=typeof e)return e.data?{data:ni(e.type,e.data),width:e.width,height:e.height}:null;var t,e=e,e=/^(\/\/)|([a-z]+:(\/\/)?)/i.test(e)?e:n.resourcePath+e;return t=e,n.manager.itemStart(t),a.load(t,function(){n.manager.itemEnd(t)},void 0,function(){n.manager.itemError(t),n.manager.itemEnd(t)})}if(void 0!==r&&0<r.length){e=new Dh(e);a=new Oh(e),a.setCrossOrigin(this.crossOrigin);for(let e=0,t=r.length;e<t;e++){var o=r[e],l=o.url;if(Array.isArray(l)){i[o.uuid]=[];for(let e=0,t=l.length;e<t;e++){var h=s(l[e]);null!==h&&(h instanceof HTMLImageElement?i[o.uuid].push(h):i[o.uuid].push(new Oo(h.data,h.width,h.height)))}}else{var c=s(o.url);null!==c&&(i[o.uuid]=c)}}}return i}parseTextures(r,n){function i(e,t){return"number"==typeof e?e:(console.warn("THREE.ObjectLoader.parseTexture: Constant should be in numeric form.",e),t[e])}const a={};if(void 0!==r)for(let t=0,e=r.length;t<e;t++){var s=r[t];void 0===s.image&&console.warn('THREE.ObjectLoader: No "image" specified for',s.uuid),void 0===n[s.image]&&console.warn("THREE.ObjectLoader: Undefined image",s.image);let e;var o=n[s.image];Array.isArray(o)?(e=new zi(o),6===o.length&&(e.needsUpdate=!0)):(e=o&&o.data?new Oo(o.data,o.width,o.height):new sr(o),o&&(e.needsUpdate=!0)),e.uuid=s.uuid,void 0!==s.name&&(e.name=s.name),void 0!==s.mapping&&(e.mapping=i(s.mapping,Bc)),void 0!==s.offset&&e.offset.fromArray(s.offset),void 0!==s.repeat&&e.repeat.fromArray(s.repeat),void 0!==s.center&&e.center.fromArray(s.center),void 0!==s.rotation&&(e.rotation=s.rotation),void 0!==s.wrap&&(e.wrapS=i(s.wrap[0],Uc),e.wrapT=i(s.wrap[1],Uc)),void 0!==s.format&&(e.format=s.format),void 0!==s.type&&(e.type=s.type),void 0!==s.encoding&&(e.encoding=s.encoding),void 0!==s.minFilter&&(e.minFilter=i(s.minFilter,Oc)),void 0!==s.magFilter&&(e.magFilter=i(s.magFilter,Oc)),void 0!==s.anisotropy&&(e.anisotropy=s.anisotropy),void 0!==s.flipY&&(e.flipY=s.flipY),void 0!==s.premultiplyAlpha&&(e.premultiplyAlpha=s.premultiplyAlpha),void 0!==s.unpackAlignment&&(e.unpackAlignment=s.unpackAlignment),a[s.uuid]=e}return a}parseObject(e,t,a,r){let n;function i(e){return void 0===t[e]&&console.warn("THREE.ObjectLoader: Undefined geometry",e),t[e]}function s(r){if(void 0!==r){if(Array.isArray(r)){const i=[];for(let e=0,t=r.length;e<t;e++){var n=r[e];void 0===a[n]&&console.warn("THREE.ObjectLoader: Undefined material",n),i.push(a[n])}return i}return void 0===a[r]&&console.warn("THREE.ObjectLoader: Undefined material",r),a[r]}}let o,l;switch(e.type){case"Scene":n=new oo,void 0!==e.background&&Number.isInteger(e.background)&&(n.background=new Hn(e.background)),void 0!==e.fog&&("Fog"===e.fog.type?n.fog=new so(e.fog.color,e.fog.near,e.fog.far):"FogExp2"===e.fog.type&&(n.fog=new ao(e.fog.color,e.fog.density)));break;case"PerspectiveCamera":n=new Ui(e.fov,e.aspect,e.near,e.far),void 0!==e.focus&&(n.focus=e.focus),void 0!==e.zoom&&(n.zoom=e.zoom),void 0!==e.filmGauge&&(n.filmGauge=e.filmGauge),void 0!==e.filmOffset&&(n.filmOffset=e.filmOffset),void 0!==e.view&&(n.view=Object.assign({},e.view));break;case"OrthographicCamera":n=new Ec(e.left,e.right,e.top,e.bottom,e.near,e.far),void 0!==e.zoom&&(n.zoom=e.zoom),void 0!==e.view&&(n.view=Object.assign({},e.view));break;case"AmbientLight":n=new Ac(e.color,e.intensity);break;case"DirectionalLight":n=new Sc(e.color,e.intensity);break;case"PointLight":n=new bc(e.color,e.intensity,e.distance,e.decay);break;case"RectAreaLight":n=new Rc(e.color,e.intensity,e.width,e.height);break;case"SpotLight":n=new yc(e.color,e.intensity,e.distance,e.angle,e.penumbra,e.decay);break;case"HemisphereLight":n=new dc(e.color,e.groundColor,e.intensity);break;case"LightProbe":n=(new Cc).fromJSON(e);break;case"SkinnedMesh":o=i(e.geometry),l=s(e.material),n=new Bo(o,l),void 0!==e.bindMode&&(n.bindMode=e.bindMode),void 0!==e.bindMatrix&&n.bindMatrix.fromArray(e.bindMatrix),void 0!==e.skeleton&&(n.skeleton=e.skeleton);break;case"Mesh":o=i(e.geometry),l=s(e.material),n=new Li(o,l);break;case"InstancedMesh":o=i(e.geometry),l=s(e.material);var h=e.count,c=e.instanceMatrix,u=e.instanceColor;n=new Xo(o,l,h),n.instanceMatrix=new Wn(new Float32Array(c.array),16),void 0!==u&&(n.instanceColor=new Wn(new Float32Array(u.array),u.itemSize));break;case"LOD":n=new Co;break;case"Line":n=new $o(i(e.geometry),s(e.material));break;case"LineLoop":n=new nl(i(e.geometry),s(e.material));break;case"LineSegments":n=new rl(i(e.geometry),s(e.material));break;case"PointCloud":case"Points":n=new hl(i(e.geometry),s(e.material));break;case"Sprite":n=new So(s(e.material));break;case"Group":n=new Qs;break;case"Bone":n=new Uo;break;default:n=new gn}if(n.uuid=e.uuid,void 0!==e.name&&(n.name=e.name),void 0!==e.matrix?(n.matrix.fromArray(e.matrix),void 0!==e.matrixAutoUpdate&&(n.matrixAutoUpdate=e.matrixAutoUpdate),n.matrixAutoUpdate&&n.matrix.decompose(n.position,n.quaternion,n.scale)):(void 0!==e.position&&n.position.fromArray(e.position),void 0!==e.rotation&&n.rotation.fromArray(e.rotation),void 0!==e.quaternion&&n.quaternion.fromArray(e.quaternion),void 0!==e.scale&&n.scale.fromArray(e.scale)),void 0!==e.castShadow&&(n.castShadow=e.castShadow),void 0!==e.receiveShadow&&(n.receiveShadow=e.receiveShadow),e.shadow&&(void 0!==e.shadow.bias&&(n.shadow.bias=e.shadow.bias),void 0!==e.shadow.normalBias&&(n.shadow.normalBias=e.shadow.normalBias),void 0!==e.shadow.radius&&(n.shadow.radius=e.shadow.radius),void 0!==e.shadow.mapSize&&n.shadow.mapSize.fromArray(e.shadow.mapSize),void 0!==e.shadow.camera&&(n.shadow.camera=this.parseObject(e.shadow.camera))),void 0!==e.visible&&(n.visible=e.visible),void 0!==e.frustumCulled&&(n.frustumCulled=e.frustumCulled),void 0!==e.renderOrder&&(n.renderOrder=e.renderOrder),void 0!==e.userData&&(n.userData=e.userData),void 0!==e.layers&&(n.layers.mask=e.layers),void 0!==e.children){var d=e.children;for(let e=0;e<d.length;e++)n.add(this.parseObject(d[e],t,a,r))}if(void 0!==e.animations){var p=e.animations;for(let e=0;e<p.length;e++){var m=p[e];n.animations.push(r[m])}}if("LOD"===e.type){void 0!==e.autoUpdate&&(n.autoUpdate=e.autoUpdate);var f=e.levels;for(let e=0;e<f.length;e++){var g=f[e],v=n.getObjectByProperty("uuid",g.object);void 0!==v&&n.addLevel(v,g.distance)}}return n}bindSkeletons(e,r){0!==Object.keys(r).length&&e.traverse(function(e){var t;!0===e.isSkinnedMesh&&void 0!==e.skeleton&&(void 0===(t=r[e.skeleton])?console.warn("THREE.ObjectLoader: No skeleton found with UUID:",e.skeleton):e.bind(t,e.bindMatrix))})}setTexturePath(e){return console.warn("THREE.ObjectLoader: .setTexturePath() has been renamed to .setResourcePath()."),this.setResourcePath(e)}},e.ObjectSpaceNormalMap=Ot,e.OctahedronBufferGeometry=Zl,e.OctahedronGeometry=Zl,e.OneFactor=le,e.OneMinusDstAlphaFactor=me,e.OneMinusDstColorFactor=ge,e.OneMinusSrcAlphaFactor=de,e.OneMinusSrcColorFactor=ce,e.OrthographicCamera=Ec,e.PCFShadowMap=S,e.PCFSoftShadowMap=b,e.PMREMGenerator=class{constructor(e){var t,r;this._renderer=e,this._pingPongRenderTarget=null,this._blurMaterial=(t=20,r=new Float32Array(t),e=new pr(0,1,0),e=new lh({name:"SphericalGaussianBlur",defines:{n:t},uniforms:{envMap:{value:null},samples:{value:1},weights:{value:r},latitudinal:{value:!1},dTheta:{value:0},mipInt:{value:0},poleAxis:{value:e},inputEncoding:{value:ld[Lt]},outputEncoding:{value:ld[Lt]}},vertexShader:Ed(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;
			uniform int samples;
			uniform float weights[ n ];
			uniform bool latitudinal;
			uniform float dTheta;
			uniform float mipInt;
			uniform vec3 poleAxis;

			${Td()}

			#define ENVMAP_TYPE_CUBE_UV
			#include <cube_uv_reflection_fragment>

			vec3 getSample( float theta, vec3 axis ) {

				float cosTheta = cos( theta );
				// Rodrigues' axis-angle rotation
				vec3 sampleDirection = vOutputDirection * cosTheta
					+ cross( axis, vOutputDirection ) * sin( theta )
					+ axis * dot( axis, vOutputDirection ) * ( 1.0 - cosTheta );

				return bilinearCubeUV( envMap, sampleDirection, mipInt );

			}

			void main() {

				vec3 axis = latitudinal ? poleAxis : cross( poleAxis, vOutputDirection );

				if ( all( equal( axis, vec3( 0.0 ) ) ) ) {

					axis = vec3( vOutputDirection.z, 0.0, - vOutputDirection.x );

				}

				axis = normalize( axis );

				gl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );
				gl_FragColor.rgb += weights[ 0 ] * getSample( 0.0, axis );

				for ( int i = 1; i < n; i++ ) {

					if ( i >= samples ) {

						break;

					}

					float theta = dTheta * float( i );
					gl_FragColor.rgb += weights[ i ] * getSample( -1.0 * theta, axis );
					gl_FragColor.rgb += weights[ i ] * getSample( theta, axis );

				}

				gl_FragColor = linearToOutputTexel( gl_FragColor );

			}
		`,blending:J,depthTest:!1,depthWrite:!1})),this._equirectShader=null,this._cubemapShader=null,this._compileMaterial(this._blurMaterial)}fromScene(e,t=0,r=.1,n=100){gd=this._renderer.getRenderTarget();var i=this._allocateTargets();return this._sceneToCubeUV(e,r,n,i),0<t&&this._blur(i,0,0,t),this._applyPMREM(i),this._cleanup(i),i}fromEquirectangular(e){return this._fromTexture(e)}fromCubemap(e){return this._fromTexture(e)}compileCubemapShader(){null===this._cubemapShader&&(this._cubemapShader=bd(),this._compileMaterial(this._cubemapShader))}compileEquirectangularShader(){null===this._equirectShader&&(this._equirectShader=wd(),this._compileMaterial(this._equirectShader))}dispose(){this._blurMaterial.dispose(),null!==this._cubemapShader&&this._cubemapShader.dispose(),null!==this._equirectShader&&this._equirectShader.dispose();for(let e=0;e<dd.length;e++)dd[e].dispose()}_cleanup(e){this._pingPongRenderTarget.dispose(),this._renderer.setRenderTarget(gd),e.scissorTest=!1,Md(e,0,0,e.width,e.height)}_fromTexture(e){gd=this._renderer.getRenderTarget();var t=this._allocateTargets(e);return this._textureToCubeUV(e,t),this._applyPMREM(t),this._cleanup(t),t}_allocateTargets(e){var t,t={magFilter:Ce,minFilter:Ce,generateMipmaps:!1,type:Ie,format:n,encoding:void 0===(t=e)||t.type!==Ie||t.encoding!==Lt&&t.encoding!==Ct&&t.encoding!==Pt?It:e.encoding,depthBuffer:!1};const r=_d(t);return r.depthBuffer=!e,this._pingPongRenderTarget=_d(t),r}_compileMaterial(e){e=new Li(dd[0],e);this._renderer.compile(e,ud)}_sceneToCubeUV(t,e,r,n){const i=new Ui(90,1,e,r);var a=[1,-1,1,1,1,1],s=[1,1,1,-1,-1,-1];const o=this._renderer;var l=o.autoClear,h=o.outputEncoding,e=o.toneMapping;o.getClearColor(fd),o.toneMapping=Re,o.outputEncoding=Lt;let c=o.autoClear=!1;var u,r=t.background;r?r.isColor&&(hd.color.copy(r).convertSRGBToLinear(),t.background=null,u=yd(hd.color),hd.opacity=u,c=!0):(hd.color.copy(fd).convertSRGBToLinear(),u=yd(hd.color),hd.opacity=u,c=!0);for(let e=0;e<6;e++){var d=e%3;0==d?(i.up.set(0,a[e],0),i.lookAt(s[e],0,0)):1==d?(i.up.set(0,0,a[e]),i.lookAt(0,s[e],0)):(i.up.set(0,a[e],0),i.lookAt(0,0,s[e])),Md(n,d*ad,2<e?ad:0,ad,ad),o.setRenderTarget(n),c&&o.render(cd,i),o.render(t,i)}o.toneMapping=e,o.outputEncoding=h,o.autoClear=l}_textureToCubeUV(e,t){const r=this._renderer;e.isCubeTexture?null==this._cubemapShader&&(this._cubemapShader=bd()):null==this._equirectShader&&(this._equirectShader=wd());var n=e.isCubeTexture?this._cubemapShader:this._equirectShader,i=new Li(dd[0],n);const a=n.uniforms;(a.envMap.value=e).isCubeTexture||a.texelSize.value.set(1/e.image.width,1/e.image.height),a.inputEncoding.value=ld[e.encoding],a.outputEncoding.value=ld[t.texture.encoding],Md(t,0,0,3*ad,2*ad),r.setRenderTarget(t),r.render(i,ud)}_applyPMREM(t){const e=this._renderer;var r=e.autoClear;e.autoClear=!1;for(let e=1;e<od;e++){var n=Math.sqrt(md[e]*md[e]-md[e-1]*md[e-1]),i=vd[(e-1)%vd.length];this._blur(t,e-1,e,n,i)}e.autoClear=r}_blur(e,t,r,n,i){var a=this._pingPongRenderTarget;this._halfBlur(e,a,t,r,n,"latitudinal",i),this._halfBlur(a,e,r,r,n,"longitudinal",i)}_halfBlur(e,t,r,n,i,a,s){const o=this._renderer;var l=this._blurMaterial;"latitudinal"!==a&&"longitudinal"!==a&&console.error("blur direction must be either latitudinal or longitudinal!");var h=new Li(dd[n],l);const c=l.uniforms;var l=pd[r]-1,l=isFinite(i)?Math.PI/(2*l):2*Math.PI/39,u=i/l,d=isFinite(i)?1+Math.floor(3*u):20;20<d&&console.warn(`sigmaRadians, ${i}, is too large and will clip, as it requested ${d} samples when the maximum is set to 20`);const p=[];let m=0;for(let e=0;e<20;++e){const g=e/u;var f=Math.exp(-g*g/2);p.push(f),0==e?m+=f:e<d&&(m+=2*f)}for(let e=0;e<p.length;e++)p[e]=p[e]/m;c.envMap.value=e.texture,c.samples.value=d,c.weights.value=p,c.latitudinal.value="latitudinal"===a,s&&(c.poleAxis.value=s),c.dTheta.value=l,c.mipInt.value=8-r,c.inputEncoding.value=ld[e.texture.encoding],c.outputEncoding.value=ld[e.texture.encoding];e=pd[n];const g=3*Math.max(0,ad-2*e);n=(0===n?0:2*ad)+2*e*(4<n?n-8+4:0);Md(t,g,n,3*e,2*e),o.setRenderTarget(t),o.render(h,ud)}},e.ParametricBufferGeometry=Jl,e.ParametricGeometry=Jl,e.Particle=function(e){return console.warn("THREE.Particle has been renamed to THREE.Sprite."),new So(e)},e.ParticleBasicMaterial=function(e){return console.warn("THREE.ParticleBasicMaterial has been renamed to THREE.PointsMaterial."),new il(e)},e.ParticleSystem=function(e,t){return console.warn("THREE.ParticleSystem has been renamed to THREE.Points."),new hl(e,t)},e.ParticleSystemMaterial=function(e){return console.warn("THREE.ParticleSystemMaterial has been renamed to THREE.PointsMaterial."),new il(e)},e.Path=hc,e.PerspectiveCamera=Ui,e.Plane=_n,e.PlaneBufferGeometry=Xi,e.PlaneGeometry=Xi,e.PlaneHelper=class extends $o{constructor(e,t=1,r=16776960){const n=new ui;n.setAttribute("position",new $n([1,-1,1,-1,1,1,-1,-1,1,1,1,1,-1,1,1,-1,-1,1,1,-1,1,1,1,1,0,0,1,0,0,0],3)),n.computeBoundingSphere(),super(n,new qo({color:r,toneMapped:!1})),this.type="PlaneHelper",this.plane=e,this.size=t;const i=new ui;i.setAttribute("position",new $n([1,1,1,-1,1,1,-1,-1,1,1,1,1,-1,-1,1,1,-1,1],3)),i.computeBoundingSphere(),this.add(new Li(i,new Gn({color:r,opacity:.2,transparent:!0,depthWrite:!1,toneMapped:!1})))}updateMatrixWorld(e){let t=-this.plane.constant;Math.abs(t)<1e-8&&(t=1e-8),this.scale.set(.5*this.size,.5*this.size,t),this.children[0].material.side=t<0?Y:R,this.lookAt(this.plane.normal),super.updateMatrixWorld(e)}},e.PointCloud=function(e,t){return console.warn("THREE.PointCloud has been renamed to THREE.Points."),new hl(e,t)},e.PointCloudMaterial=function(e){return console.warn("THREE.PointCloudMaterial has been renamed to THREE.PointsMaterial."),new il(e)},e.PointLight=bc,e.PointLightHelper=Uu,e.Points=hl,e.PointsMaterial=il,e.PolarGridHelper=class extends rl{constructor(t=10,r=16,n=8,i=64,a=4473924,s=8947848){a=new Hn(a),s=new Hn(s);const o=[],l=[];for(let e=0;e<=r;e++){var h=e/r*(2*Math.PI),c=Math.sin(h)*t,h=Math.cos(h)*t;o.push(0,0,0),o.push(c,0,h);h=1&e?a:s;l.push(h.r,h.g,h.b),l.push(h.r,h.g,h.b)}for(let e=0;e<=n;e++){var u=1&e?a:s,d=t-t/n*e;for(let e=0;e<i;e++){var p=e/i*(2*Math.PI),m=Math.sin(p)*d,f=Math.cos(p)*d;o.push(m,0,f),l.push(u.r,u.g,u.b),p=(e+1)/i*(2*Math.PI),m=Math.sin(p)*d,f=Math.cos(p)*d,o.push(m,0,f),l.push(u.r,u.g,u.b)}}const e=new ui;e.setAttribute("position",new $n(o,3)),e.setAttribute("color",new $n(l,3));var g=new qo({vertexColors:!0,toneMapped:!1});super(e,g),this.type="PolarGridHelper"}},e.PolyhedronBufferGeometry=yl,e.PolyhedronGeometry=yl,e.PositionalAudio=class extends ru{constructor(e){super(e),this.panner=this.context.createPanner(),this.panner.panningModel="HRTF",this.panner.connect(this.gain)}getOutput(){return this.panner}getRefDistance(){return this.panner.refDistance}setRefDistance(e){return this.panner.refDistance=e,this}getRolloffFactor(){return this.panner.rolloffFactor}setRolloffFactor(e){return this.panner.rolloffFactor=e,this}getDistanceModel(){return this.panner.distanceModel}setDistanceModel(e){return this.panner.distanceModel=e,this}getMaxDistance(){return this.panner.maxDistance}setMaxDistance(e){return this.panner.maxDistance=e,this}setDirectionalCone(e,t,r){return this.panner.coneInnerAngle=e,this.panner.coneOuterAngle=t,this.panner.coneOuterGain=r,this}updateMatrixWorld(e){if(super.updateMatrixWorld(e),!0!==this.hasPlaybackControl||!1!==this.isPlaying){this.matrixWorld.decompose(nu,iu,au),su.set(0,0,1).applyQuaternion(iu);const t=this.panner;t.positionX?(e=this.context.currentTime+this.listener.timeDelta,t.positionX.linearRampToValueAtTime(nu.x,e),t.positionY.linearRampToValueAtTime(nu.y,e),t.positionZ.linearRampToValueAtTime(nu.z,e),t.orientationX.linearRampToValueAtTime(su.x,e),t.orientationY.linearRampToValueAtTime(su.y,e),t.orientationZ.linearRampToValueAtTime(su.z,e)):(t.setPosition(nu.x,nu.y,nu.z),t.setOrientation(su.x,su.y,su.z))}}},e.PropertyBinding=gu,e.PropertyMixer=lu,e.QuadraticBezierCurve=ic,e.QuadraticBezierCurve3=ac,e.Quaternion=dr,e.QuaternionKeyframeTrack=Rh,e.QuaternionLinearInterpolant=Ah,e.REVISION=t,e.RGBADepthPacking=Bt,e.RGBAFormat=Ue,e.RGBAIntegerFormat=M,e.RGBA_ASTC_10x10_Format=ot,e.RGBA_ASTC_10x5_Format=it,e.RGBA_ASTC_10x6_Format=at,e.RGBA_ASTC_10x8_Format=st,e.RGBA_ASTC_12x10_Format=lt,e.RGBA_ASTC_12x12_Format=ht,e.RGBA_ASTC_4x4_Format=Je,e.RGBA_ASTC_5x4_Format=Ke,e.RGBA_ASTC_5x5_Format=Qe,e.RGBA_ASTC_6x5_Format=$e,e.RGBA_ASTC_6x6_Format=et,e.RGBA_ASTC_8x5_Format=tt,e.RGBA_ASTC_8x6_Format=rt,e.RGBA_ASTC_8x8_Format=nt,e.RGBA_BPTC_Format=ct,e.RGBA_ETC2_EAC_Format=Ze,e.RGBA_PVRTC_2BPPV1_Format=Xe,e.RGBA_PVRTC_4BPPV1_Format=je,e.RGBA_S3TC_DXT1_Format=He,e.RGBA_S3TC_DXT3_Format=Ge,e.RGBA_S3TC_DXT5_Format=Ve,e.RGBDEncoding=Ft,e.RGBEEncoding=It,e.RGBEFormat=n,e.RGBFormat=Be,e.RGBIntegerFormat=_,e.RGBM16Encoding=Nt,e.RGBM7Encoding=Dt,e.RGB_ETC1_Format=qe,e.RGB_ETC2_Format=Ye,e.RGB_PVRTC_2BPPV1_Format=We,e.RGB_PVRTC_4BPPV1_Format=ke,e.RGB_S3TC_DXT1_Format=w,e.RGFormat=y,e.RGIntegerFormat=x,e.RawShaderMaterial=lh,e.Ray=kr,e.Raycaster=class{constructor(e,t,r=0,n=1/0){this.ray=new kr(e,t),this.near=r,this.far=n,this.camera=null,this.layers=new tn,this.params={Mesh:{},Line:{threshold:1},LOD:{},Points:{threshold:1},Sprite:{}}}set(e,t){this.ray.set(e,t)}setFromCamera(e,t){t&&t.isPerspectiveCamera?(this.ray.origin.setFromMatrixPosition(t.matrixWorld),this.ray.direction.set(e.x,e.y,.5).unproject(t).sub(this.ray.origin).normalize(),this.camera=t):t&&t.isOrthographicCamera?(this.ray.origin.set(e.x,e.y,(t.near+t.far)/(t.near-t.far)).unproject(t),this.ray.direction.set(0,0,-1).transformDirection(t.matrixWorld),this.camera=t):console.error("THREE.Raycaster: Unsupported camera type: "+t.type)}intersectObject(e,t=!1,r=[]){return Eu(e,this,r,t),r.sort(bu),r}intersectObjects(r,n=!1,i=[]){for(let e=0,t=r.length;e<t;e++)Eu(r[e],this,i,n);return i.sort(bu),i}},e.RectAreaLight=Rc,e.RedFormat=g,e.RedIntegerFormat=v,e.ReinhardToneMapping=P,e.RepeatWrapping=z,e.ReplaceStencilOp=7681,e.ReverseSubtractEquation=ie,e.RingBufferGeometry=Kl,e.RingGeometry=Kl,e.SRGB8_ALPHA8_ASTC_10x10_Format=wt,e.SRGB8_ALPHA8_ASTC_10x5_Format=xt,e.SRGB8_ALPHA8_ASTC_10x6_Format=_t,e.SRGB8_ALPHA8_ASTC_10x8_Format=Mt,e.SRGB8_ALPHA8_ASTC_12x10_Format=bt,e.SRGB8_ALPHA8_ASTC_12x12_Format=Et,e.SRGB8_ALPHA8_ASTC_4x4_Format=ut,e.SRGB8_ALPHA8_ASTC_5x4_Format=dt,e.SRGB8_ALPHA8_ASTC_5x5_Format=pt,e.SRGB8_ALPHA8_ASTC_6x5_Format=mt,e.SRGB8_ALPHA8_ASTC_6x6_Format=ft,e.SRGB8_ALPHA8_ASTC_8x5_Format=gt,e.SRGB8_ALPHA8_ASTC_8x6_Format=vt,e.SRGB8_ALPHA8_ASTC_8x8_Format=yt,e.Scene=oo,e.SceneUtils=uu,e.ShaderChunk=qi,e.ShaderLib=Zi,e.ShaderMaterial=Fi,e.ShadowMaterial=oh,e.Shape=cc,e.ShapeBufferGeometry=Ql,e.ShapeGeometry=Ql,e.ShapePath=Hc,e.ShapeUtils=Vl,e.ShortType=s,e.Skeleton=Go,e.SkeletonHelper=Bu,e.SkinnedMesh=Bo,e.SmoothShading=2,e.Sphere=Fr,e.SphereBufferGeometry=$l,e.SphereGeometry=$l,e.Spherical=class{constructor(e=1,t=0,r=0){return this.radius=e,this.phi=t,this.theta=r,this}set(e,t,r){return this.radius=e,this.phi=t,this.theta=r,this}copy(e){return this.radius=e.radius,this.phi=e.phi,this.theta=e.theta,this}makeSafe(){return this.phi=Math.max(1e-6,Math.min(Math.PI-1e-6,this.phi)),this}setFromVector3(e){return this.setFromCartesianCoords(e.x,e.y,e.z)}setFromCartesianCoords(e,t,r){return this.radius=Math.sqrt(e*e+t*t+r*r),0===this.radius?(this.theta=0,this.phi=0):(this.theta=Math.atan2(e,r),this.phi=Math.acos(Yt(t/this.radius,-1,1))),this}clone(){return(new this.constructor).copy(this)}},e.SphericalHarmonics3=Lc,e.SplineCurve=sc,e.SpotLight=yc,e.SpotLightHelper=Iu,e.Sprite=So,e.SpriteMaterial=uo,e.SrcAlphaFactor=ue,e.SrcAlphaSaturateFactor=ve,e.SrcColorFactor=he,e.StaticCopyUsage=35046,e.StaticDrawUsage=zt,e.StaticReadUsage=35045,e.StereoCamera=class{constructor(){this.type="StereoCamera",this.aspect=1,this.eyeSep=.064,this.cameraL=new Ui,this.cameraL.layers.enable(1),this.cameraL.matrixAutoUpdate=!1,this.cameraR=new Ui,this.cameraR.layers.enable(2),this.cameraR.matrixAutoUpdate=!1,this._cache={focus:null,fov:null,aspect:null,near:null,far:null,zoom:null,eyeSep:null}}update(e){const t=this._cache;if(t.focus!==e.focus||t.fov!==e.fov||t.aspect!==e.aspect*this.aspect||t.near!==e.near||t.far!==e.far||t.zoom!==e.zoom||t.eyeSep!==this.eyeSep){t.focus=e.focus,t.fov=e.fov,t.aspect=e.aspect*this.aspect,t.near=e.near,t.far=e.far,t.zoom=e.zoom,t.eyeSep=this.eyeSep;const s=e.projectionMatrix.clone();var r,n=t.eyeSep/2,i=n*t.near/t.focus,a=t.near*Math.tan(jt*t.fov*.5)/t.zoom;Yc.elements[12]=-n,qc.elements[12]=n,r=-a*t.aspect+i,n=a*t.aspect+i,s.elements[0]=2*t.near/(n-r),s.elements[8]=(n+r)/(n-r),this.cameraL.projectionMatrix.copy(s),r=-a*t.aspect-i,n=a*t.aspect-i,s.elements[0]=2*t.near/(n-r),s.elements[8]=(n+r)/(n-r),this.cameraR.projectionMatrix.copy(s)}this.cameraL.matrixWorld.copy(e.matrixWorld).multiply(Yc),this.cameraR.matrixWorld.copy(e.matrixWorld).multiply(qc)}},e.StreamCopyUsage=35042,e.StreamDrawUsage=35040,e.StreamReadUsage=35041,e.StringKeyframeTrack=Lh,e.SubtractEquation=ne,e.SubtractiveBlending=$,e.TOUCH={ROTATE:0,PAN:1,DOLLY_PAN:2,DOLLY_ROTATE:3},e.TangentSpaceNormalMap=Ut,e.TetrahedronBufferGeometry=eh,e.TetrahedronGeometry=eh,e.TextBufferGeometry=th,e.TextGeometry=th,e.Texture=sr,e.TextureLoader=Gh,e.TorusBufferGeometry=rh,e.TorusGeometry=rh,e.TorusKnotBufferGeometry=nh,e.TorusKnotGeometry=nh,e.Triangle=Pn,e.TriangleFanDrawMode=2,e.TriangleStripDrawMode=1,e.TrianglesDrawMode=0,e.TubeBufferGeometry=ih,e.TubeGeometry=ih,e.UVMapping=300,e.Uint16Attribute=function(e,t){return console.warn("THREE.Uint16Attribute has been removed. Use new THREE.Uint16BufferAttribute() instead."),new Zn(e,t)},e.Uint16BufferAttribute=Zn,e.Uint32Attribute=function(e,t){return console.warn("THREE.Uint32Attribute has been removed. Use new THREE.Uint32BufferAttribute() instead."),new Kn(e,t)},e.Uint32BufferAttribute=Kn,e.Uint8Attribute=function(e,t){return console.warn("THREE.Uint8Attribute has been removed. Use new THREE.Uint8BufferAttribute() instead."),new Xn(e,t)},e.Uint8BufferAttribute=Xn,e.Uint8ClampedAttribute=function(e,t){return console.warn("THREE.Uint8ClampedAttribute has been removed. Use new THREE.Uint8ClampedBufferAttribute() instead."),new qn(e,t)},e.Uint8ClampedBufferAttribute=qn,e.Uniform=_u,e.UniformsLib=Yi,e.UniformsUtils=Ni,e.UnsignedByteType=Ie,e.UnsignedInt248Type=Fe,e.UnsignedIntType=Ae,e.UnsignedShort4444Type=c,e.UnsignedShort5551Type=u,e.UnsignedShort565Type=d,e.UnsignedShortType=Se,e.VSMShadowMap=A,e.Vector2=tr,e.Vector3=pr,e.Vector4=lr,e.VectorKeyframeTrack=Ch,e.Vertex=function(e,t,r){return console.warn("THREE.Vertex has been removed. Use THREE.Vector3 instead."),new pr(e,t,r)},e.VertexColors=2,e.VideoTexture=ul,e.WebGL1Renderer=io,e.WebGLCubeRenderTarget=Hi,e.WebGLMultipleRenderTargets=cr,e.WebGLMultisampleRenderTarget=ur,e.WebGLRenderTarget=hr,e.WebGLRenderTargetCube=function(e,t,r){return console.warn("THREE.WebGLRenderTargetCube( width, height, options ) is now WebGLCubeRenderTarget( size, options )."),new Hi(e,r)},e.WebGLRenderer=no,e.WebGLUtils=Js,e.WireframeGeometry=ah,e.WireframeHelper=function(e,t){return console.warn("THREE.WireframeHelper has been removed. Use THREE.WireframeGeometry instead."),new rl(new ah(e.geometry),new qo({color:void 0!==t?t:16777215}))},e.WrapAroundEnding=Rt,e.XHRLoader=function(e){return console.warn("THREE.XHRLoader has been renamed to THREE.FileLoader."),new Uh(e)},e.ZeroCurvatureEnding=St,e.ZeroFactor=oe,e.ZeroSlopeEnding=At,e.ZeroStencilOp=0,e.sRGBEncoding=Ct,Object.defineProperty(e,"__esModule",{value:!0})});